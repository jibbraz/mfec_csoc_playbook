{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'playbook_local_KTB_ENRICH_EMAIL_1' block\n    playbook_local_KTB_ENRICH_EMAIL_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b3376fcc-9acb-4d80-8ddd-a9e5c9aea1f4",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 15,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -460,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 14
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "becfd05e-4bb9-4273-ba89-d968cb12239e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 497,
                        "line_start": 484,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 18,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2200,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 303
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "04981de2-07b4-4721-91c6-48bbe414a394",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fe9a1dc9-103c-42ac-84ec-a39511071e95",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0dc50b74-df26-49bf-8fe1-ae9a144396d8",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 464
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "454ce22e-fb20-4f27-9950-507ceb28d11f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0fd5081c-2485-44b0-a885-b8cb1d46f993",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "00d47b5d-c676-4b57-ade6-32e78802a9a6",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 494
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "032dd6d8-b8b7-4c20-a2ba-6c9a771e39e6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "00d47b5d-c676-4b57-ade6-32e78802a9a6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1237307b-13ec-43da-963b-bd96e1e37353",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 510
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "61ed79c0-d651-406a-b1dc-7563e24700a3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1237307b-13ec-43da-963b-bd96e1e37353",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b4c8cd7-20b1-4ed6-bb48-ab675ec12302",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 511
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "de68b2d4-0e5a-4102-9f2d-ba5ff79fa6df",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0b4c8cd7-20b1-4ed6-bb48-ab675ec12302",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "becfd05e-4bb9-4273-ba89-d968cb12239e",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 513
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "261780b9-c232-49ac-a7f3-3a0e09638e1f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "73d9af44-9be6-4dc4-8953-102f6405ff58",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "980147fc-e5a9-4b93-b1df-ceeac9985541",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 517
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1955c511-685f-448f-bfea-5ce7375e7011",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "980147fc-e5a9-4b93-b1df-ceeac9985541",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4713a1e4-9f76-499a-abc5-556ad53afd54",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 520
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "955af4ae-a059-4469-8091-7a07033686c8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4713a1e4-9f76-499a-abc5-556ad53afd54",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b4c8cd7-20b1-4ed6-bb48-ab675ec12302",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 522
                    },
                    {
                        ".scmName/text": "local",
                        "Container_id-0": "container:id",
                        "a_status-1": "Resolved",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "Set_last_automated_acti..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_Set_last_automated_action_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_Set_last_automated_action_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"Resolved\",\n        ],\n    ]\n\n    parameters = []\n\n    literal_values_0_0 = [item[0] for item in literal_values_0]\n    container_property_0_0 = [item[0] for item in container_property_0]\n\n    parameters.append({\n        'a_status': literal_values_0_0,\n        'Container_id': container_property_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/Set_last_automated_action\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/Set_last_automated_action', parameters=parameters, name='cf_local_Set_last_automated_action_1')\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/Set_last_automated_action",
                        "cfInputs": {
                            "Container_id": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            },
                            "a_status": {
                                "collectionType": "literal_values",
                                "dataPath": "Resolved",
                                "paramName": "literal_values_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Send email to affected user, Add Note non malicious",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 26,
                        "customFunction": "local/Set_last_automated_action",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b4c8cd7-20b1-4ed6-bb48-ab675ec12302",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_cf_local_Set_last_automated_action_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_cf_local_Set_last_automated_action_1() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_cf_local_Set_last_automated_action_1_called'):\n        return\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['Send_email_to_affected_user', 'Add_Note_non_malicious']):\n        \n        # save the state that the joined function has now been called\n        phantom.save_run_data(key='join_cf_local_Set_last_automated_action_1_called', value='cf_local_Set_last_automated_action_1')\n        \n        # call connected block \"cf_local_Set_last_automated_action_1\"\n        cf_local_Set_last_automated_action_1(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "send_email_1",
                            "add_note_4"
                        ],
                        "join_start": 266,
                        "line_end": 284,
                        "line_start": 228,
                        "message": "Configuring now",
                        "name": "Set_last_automated_action",
                        "notes": "",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1960,
                            "y": 420
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_Set_last_automated_action_1",
                        "selectedCustomFunction": {
                            "description": "set custom field last_automated_action",
                            "draftMode": false,
                            "id": 111,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 111,
                                    "description": "",
                                    "id": 205,
                                    "input_type": "list",
                                    "name": "Container_id",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [],
                                    "custom_function": 111,
                                    "description": "",
                                    "id": 206,
                                    "input_type": "list",
                                    "name": "a_status",
                                    "placeholder": ""
                                }
                            ],
                            "name": "Set_last_automated_action",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [],
                                    "custom_function": 111,
                                    "data_path": "res",
                                    "description": "",
                                    "id": 97
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/KTB-CONTAIN-URL",
                                        "draft_mode": false,
                                        "id": 3975,
                                        "name": "KTB-CONTAIN-URL",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-ALERT-SPLUNK-AD-01",
                                        "draft_mode": false,
                                        "id": 3611,
                                        "name": "PLAYBOOK-INVESTIGATE-ALERT-SPLUNK-AD-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-ALERT-ATTIVO-01",
                                        "draft_mode": false,
                                        "id": 3632,
                                        "name": "PLAYBOOK-INVESTIGATE-ALERT-ATTIVO-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-DATA-01",
                                        "draft_mode": false,
                                        "id": 3976,
                                        "name": "PLAYBOOK-INVESTIGATE-DATA-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/test update filed",
                                        "draft_mode": false,
                                        "id": 2171,
                                        "name": "test update filed",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB-ENRICH-EMAIL",
                                        "draft_mode": false,
                                        "id": 3967,
                                        "name": "KTB-ENRICH-EMAIL",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/01-Contain-Approve-Playbook",
                                        "draft_mode": false,
                                        "id": 3148,
                                        "name": "01-Contain-Approve-Playbook",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/010-Triage playbook",
                                        "draft_mode": false,
                                        "id": 3358,
                                        "name": "010-Triage playbook",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/022-Master Malware_backup",
                                        "draft_mode": false,
                                        "id": 3359,
                                        "name": "022-Master Malware_backup",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/KTB -Triage Playbook for Events Label",
                                        "draft_mode": false,
                                        "id": 3836,
                                        "name": "KTB -Triage Playbook for Events Label",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB -Triage Playbook for Attivo Label",
                                        "draft_mode": false,
                                        "id": 3837,
                                        "name": "KTB -Triage Playbook for Attivo Label",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB Triage Playbook",
                                        "draft_mode": false,
                                        "id": 3496,
                                        "name": "KTB Triage Playbook",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-ALERT-PROXY-01",
                                        "draft_mode": false,
                                        "id": 3928,
                                        "name": "PLAYBOOK-INVESTIGATE-ALERT-PROXY-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB Malware Contain Playbook",
                                        "draft_mode": false,
                                        "id": 3931,
                                        "name": "KTB Malware Contain Playbook",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-ENRICH-INDICATOR-VIRUSTOTAL-THREATSTREAM-01",
                                        "draft_mode": false,
                                        "id": 3620,
                                        "name": "PLAYBOOK-ENRICH-INDICATOR-VIRUSTOTAL-THREATSTREAM-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB Master Playbook",
                                        "draft_mode": false,
                                        "id": 3774,
                                        "name": "KTB Master Playbook",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INCIDENT-CLOUD-01",
                                        "draft_mode": false,
                                        "id": 3684,
                                        "name": "PLAYBOOK-CONTAIN-INCIDENT-CLOUD-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/02-Master Malware",
                                        "draft_mode": false,
                                        "id": 3435,
                                        "name": "02-Master Malware",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB Approve Playbook",
                                        "draft_mode": false,
                                        "id": 3796,
                                        "name": "KTB Approve Playbook",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 560
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c5fbb9d2-da4e-4735-aaeb-34114267e35e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fe9a1dc9-103c-42ac-84ec-a39511071e95",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fc4cd264-23d8-4407-a13d-8ae3e8d3d6be",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 587
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "256bd991-524c-47cd-bef8-a6f75c01f80b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fc4cd264-23d8-4407-a13d-8ae3e8d3d6be",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b1392b62-0e55-4174-bad2-2e7defc9b088",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 589
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ab1f1202-a581-4fdd-b93a-9cf4e79d6288",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0dc50b74-df26-49bf-8fe1-ae9a144396d8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0fd5081c-2485-44b0-a885-b8cb1d46f993",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 605
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ecd2eb35-7a0c-48c7-87ab-7acb3d40ede5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a0321e0a-43d1-497a-82c2-e3e706e94a21",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f7abc577-1cf0-4f49-91bd-a7be730b57d1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 609
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".playbook": {
                                "text": "KTB-ENRICH-EMAIL"
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "Playbook"
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def playbook_local_KTB_ENRICH_EMAIL_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('playbook_local_KTB_ENRICH_EMAIL_1() called')\n    \n    # call playbook \"local/KTB-ENRICH-EMAIL\", returns the playbook_run_id\n    playbook_run_id = phantom.playbook(playbook=\"local/KTB-ENRICH-EMAIL\", container=container, name=\"playbook_local_KTB_ENRICH_EMAIL_1\", callback=Get_email_artifacts)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "626103aa-0714-4852-8e38-117d59e4b9ed",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 23,
                        "line_start": 15,
                        "message": "Configuring now",
                        "name": "KTB-ENRICH-EMAIL",
                        "notes": "",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "playbook": "local/KTB-ENRICH-EMAIL",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -300,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "playbook_local_KTB_ENRICH_EMAIL_1",
                        "scmName": "local",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "callplaybook",
                        "status": "",
                        "title": "Playbook",
                        "type": "coa.CallPlaybook",
                        "warn": false,
                        "z": 614
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b704ff15-b500-4213-80ac-4a503cc00a8a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f7abc577-1cf0-4f49-91bd-a7be730b57d1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fe9a1dc9-103c-42ac-84ec-a39511071e95",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 627
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "artifact_scope": "all",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_there_are_malicious_artifacts(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_there_are_malicious_artifacts() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.requestURL_malicious\", \"!=\", \"\"],\n            [\"artifact:*.cef.destinationDnsDomain_malicious\", \"!=\", \"\"],\n            [\"artifact:*.cef.fileHash_malicious\", \"!=\", \"\"],\n            [\"artifact:*.cef.fromEmail_actual_sender_malicious\", \"!=\", \"\"],\n        ],\n        scope=\"all\",\n        logical_operator='or')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Check_each_artifact_and_add_note(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Filter_out_email_contains_SPF(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Check if there are malicious artifacts",
                        "description": "Check if there are malicious artifacts",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fe9a1dc9-103c-42ac-84ec-a39511071e95",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 52,
                        "line_start": 26,
                        "name": "decision",
                        "notes": "Check if there are malicious artifacts",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.requestURL_malicious",
                                        "value": ""
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationDnsDomain_malicious",
                                        "value": ""
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.fileHash_malicious",
                                        "value": ""
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.fromEmail_actual_sender_malicious",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_there_are_malicious_artifacts",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 628
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c1d010ba-63ef-4d26-8e86-0fb180ba0116",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b1392b62-0e55-4174-bad2-2e7defc9b088",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "73d9af44-9be6-4dc4-8953-102f6405ff58",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 633
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "bcc": "",
                            "body": "Format_user_email_being_sent:formatted_data",
                            "cc": "",
                            "from": "no-reply-phantom@ktbcs.co.th",
                            "headers": "",
                            "subject": "[SOAR] Suspicious E-mail Notification",
                            "to": "Distinguish_email_artifacts:custom_function:user_email_address"
                        },
                        "angle": 0,
                        "app": "SMTP",
                        "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "send email",
                                "actions": [
                                    "send htmlemail",
                                    "send rawemail",
                                    "send email",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SMTP",
                                "app_version": "2.1.3",
                                "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                                "asset_name": "smtp asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attachments": "",
                                    "bcc": "",
                                    "body": "Format_user_email_being_sent:formatted_data",
                                    "cc": "",
                                    "from": "no-reply-phantom@ktbcs.co.th",
                                    "headers": "",
                                    "subject": "[SOAR] Suspicious E-mail Notification",
                                    "to": "Distinguish_email_artifacts:custom_function:user_email_address"
                                },
                                "has_app": true,
                                "id": 6,
                                "loaded": false,
                                "missing": false,
                                "name": "smtp asset",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string",
                                        "example_values": [
                                            "ab2b2ccfba08ea538ef22f521caa01c3c2b17ccf"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.bcc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test1@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test body"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.cc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test2@testdomain.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string",
                                        "example_values": [
                                            "sender@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Subject\": \"Test1\", \"To\": \"test3@testdomain.com\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string",
                                        "example_values": [
                                            "receiver@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Email sent"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attachments": {
                                        "allow_list": true,
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault IDs of files to attach",
                                        "key": "attachments",
                                        "order": 6,
                                        "primary": true,
                                        "required": false
                                    },
                                    "bcc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on bcc line",
                                        "key": "bcc",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    },
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message body",
                                        "key": "body",
                                        "order": 5,
                                        "required": true
                                    },
                                    "cc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on cc line",
                                        "key": "cc",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "from": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "From field",
                                        "key": "from",
                                        "order": 0,
                                        "primary": true,
                                        "required": false
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Custom email headers (formatted as JSON)",
                                        "key": "headers",
                                        "order": 7,
                                        "required": false
                                    },
                                    "subject": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message Subject",
                                        "key": "subject",
                                        "order": 4,
                                        "required": false
                                    },
                                    "to": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses",
                                        "key": "to",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "targets": "6",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Send email to affected u..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Send_email_to_affected_user(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Send_email_to_affected_user() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Distinguish_email_artifacts__user_email_address = json.loads(phantom.get_run_data(key='Distinguish_email_artifacts:user_email_address'))\n    # collect data for 'Send_email_to_affected_user' call\n    formatted_data_1 = phantom.get_format_data(name='Format_user_email_being_sent')\n\n    parameters = []\n    \n    # build parameters list for 'Send_email_to_affected_user' call\n    parameters.append({\n        'cc': \"\",\n        'to': Distinguish_email_artifacts__user_email_address,\n        'bcc': \"\",\n        'body': formatted_data_1,\n        'from': \"no-reply-phantom@ktbcs.co.th\",\n        'headers': \"\",\n        'subject': \"[SOAR] Suspicious E-mail Notification\",\n        'attachments': \"\",\n    })\n\n    phantom.act(action=\"send email\", parameters=parameters, assets=['smtp asset'], callback=set_status_set_severity_promote_to_case_1, name=\"Send_email_to_affected_user\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL, Add note for SPF failed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Send email to affected user",
                        "delay": 0,
                        "description": "Send email to affected user",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "00d47b5d-c676-4b57-ade6-32e78802a9a6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 156,
                        "line_start": 129,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "Send email to affected user",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1480,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Send_email_to_affected_user",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 637
                    },
                    {
                        "action": "add note",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "",
                            "content": "Format_note_non_malicious:formatted_data",
                            "phase_id": "",
                            "title": "Playbook Summary: Non-malicious"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add note",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "",
                                    "content": "Format_note_non_malicious:formatted_data",
                                    "phase_id": "",
                                    "title": "Playbook Summary: Non-malicious"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.content",
                                        "data_type": "string",
                                        "example_values": [
                                            "Adding a note via app action"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "Note test",
                                            "Testing note"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Note created"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The container id (defaults to current container)",
                                        "key": "container_id",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "content": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note content",
                                        "key": "content",
                                        "order": 1,
                                        "required": false
                                    },
                                    "phase_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase the note will be associated with",
                                        "key": "phase_id",
                                        "order": 3,
                                        "required": false
                                    },
                                    "title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Title for the note",
                                        "key": "title",
                                        "order": 0,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Note non malicious"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Note_non_malicious(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Note_non_malicious() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Note_non_malicious' call\n    formatted_data_1 = phantom.get_format_data(name='Format_note_non_malicious')\n\n    parameters = []\n    \n    # build parameters list for 'Add_Note_non_malicious' call\n    parameters.append({\n        'title': \"Playbook Summary: Non-malicious\",\n        'content': formatted_data_1,\n        'phase_id': \"\",\n        'container_id': \"\",\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['phantom asset'], callback=set_status_set_severity_2, name=\"Add_Note_non_malicious\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Note non malicious",
                        "delay": "0",
                        "description": "Add Note non malicious",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "980147fc-e5a9-4b93-b1df-ceeac9985541",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 328,
                        "line_start": 306,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Add Note non malicious",
                        "number": 4,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 520
                        },
                        "previous_function": "",
                        "previous_name": "Add_Note_non_malicious",
                        "required_params": {
                            "title": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 639
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "set status, set severity",
                        "attrs": {
                            ".api": {
                                "text": "set status, set severity"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def set_status_set_severity_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('set_status_set_severity_2() called')\n\n    phantom.set_status(container=container, status=\"Open\")\n\n    phantom.set_severity(container=container, severity=\"Low\")\n    join_cf_local_Set_last_automated_action_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "key": "set-status",
                                "setStatusStatus": "Open",
                                "setStatusStatus_display": "Open"
                            },
                            {
                                "key": "set-severity",
                                "setSeveritySeverity": "Low",
                                "setSeveritySeverity_display": "Low"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Note non malicious",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4713a1e4-9f76-499a-abc5-556ad53afd54",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 338,
                        "line_start": 328,
                        "message": "Configuring now",
                        "name": "set status, set severity",
                        "notes": "",
                        "number": 2,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1300,
                            "y": 520
                        },
                        "previous_function": "",
                        "previous_name": "set_status_set_severity_2",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 640
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ebc124da-7ee2-4b0c-9000-d8c827dfd115",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b1392b62-0e55-4174-bad2-2e7defc9b088",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3b5c7bec-17c6-4a31-a00c-fde22838eaad",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 646
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format note non malicio..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_note_non_malicious(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_note_non_malicious() called')\n    \n    template = \"\"\"No malicious artifacts were found on this e-mail and SPF validation is pass.\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"0\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_note_non_malicious\", separator=\", \")\n\n    Add_Note_non_malicious(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format note non malicious",
                        "delimiter": ", ",
                        "description": "Format note non malicious ",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "73d9af44-9be6-4dc4-8953-102f6405ff58",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 303,
                        "line_start": 287,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format note non malicious ",
                        "number": 8,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "0"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 720,
                            "y": 520
                        },
                        "previous_function": "",
                        "previous_name": "Format_note_non_malicious",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "No malicious artifacts were found on this e-mail and SPF validation is pass.",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 649
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f7e15c99-e5fb-4b7a-9e8d-3eaa694f4c7d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3b5c7bec-17c6-4a31-a00c-fde22838eaad",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "900f249b-1db2-4a1f-9374-0d9a9372ed68",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 650
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "artifact_scope": "all",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Get_email_artifacts(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_email_artifacts() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.fromEmail_actual_sender\", \"!=\", \"\"],\n        ],\n        name=\"Get_email_artifacts:condition_1\",\n        scope=\"all\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Distinguish_email_artifacts(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Get email artifacts",
                        "description": "Get email artifacts",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a0321e0a-43d1-497a-82c2-e3e706e94a21",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 190,
                        "line_start": 171,
                        "name": "filter",
                        "notes": "Get email artifacts",
                        "number": 5,
                        "order": 7,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.fromEmail_actual_sender",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -20,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Get_email_artifacts",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 659
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "set status, set severity, promote to-case",
                        "attrs": {
                            ".api": {
                                "text": "set status, set severity, pr..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def set_status_set_severity_promote_to_case_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('set_status_set_severity_promote_to_case_1() called')\n\n    phantom.set_status(container=container, status=\"In progress\")\n\n    phantom.set_severity(container=container, severity=\"Low\")\n\n    phantom.promote(container=container, template=\"KTB Workbook\")\n    join_cf_local_Set_last_automated_action_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "key": "set-status",
                                "setStatusStatus": "In progress",
                                "setStatusStatus_display": "In progress"
                            },
                            {
                                "key": "set-severity",
                                "setSeveritySeverity": "Low",
                                "setSeveritySeverity_display": "Low"
                            },
                            {
                                "key": "promote-to-case",
                                "promoteToCaseTemplate": "KTB Workbook",
                                "promoteToCaseTemplate_display": "KTB Workbook"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Send email to affected user",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1237307b-13ec-43da-963b-bd96e1e37353",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 168,
                        "line_start": 156,
                        "message": "Configuring now",
                        "name": "set status, set severity, promote to-case",
                        "notes": "",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1700,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "set_status_set_severity_promote_to_case_1",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 662
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "85f83e7f-c4cb-4575-8923-bf18e2262e4b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "900f249b-1db2-4a1f-9374-0d9a9372ed68",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0fd5081c-2485-44b0-a885-b8cb1d46f993",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 663
                    },
                    {
                        "action": "add note",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "",
                            "content": "Prepare_for_SPF_failed_result:formatted_data",
                            "phase_id": "",
                            "title": "Playbook Summary: SPF validation flagged this e-mail as malicious"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add note",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "",
                                    "content": "Prepare_for_SPF_failed_result:formatted_data",
                                    "phase_id": "",
                                    "title": "Playbook Summary: SPF validation flagged this e-mail as malicious"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.content",
                                        "data_type": "string",
                                        "example_values": [
                                            "Adding a note via app action"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "Note test",
                                            "Testing note"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Note created"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The container id (defaults to current container)",
                                        "key": "container_id",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "content": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note content",
                                        "key": "content",
                                        "order": 1,
                                        "required": false
                                    },
                                    "phase_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase the note will be associated with",
                                        "key": "phase_id",
                                        "order": 3,
                                        "required": false
                                    },
                                    "title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Title for the note",
                                        "key": "title",
                                        "order": 0,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add note for SPF failed"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_note_for_SPF_failed(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_for_SPF_failed() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_note_for_SPF_failed' call\n    formatted_data_1 = phantom.get_format_data(name='Prepare_for_SPF_failed_result')\n\n    parameters = []\n    \n    # build parameters list for 'Add_note_for_SPF_failed' call\n    parameters.append({\n        'title': \"Playbook Summary: SPF validation flagged this e-mail as malicious\",\n        'content': formatted_data_1,\n        'phase_id': \"\",\n        'container_id': \"\",\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['phantom asset'], callback=join_Format_user_email_being_sent, name=\"Add_note_for_SPF_failed\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add note for SPF failed",
                        "delay": 0,
                        "description": "Add note for SPF failed",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "900f249b-1db2-4a1f-9374-0d9a9372ed68",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 484,
                        "line_start": 462,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Add note for SPF failed",
                        "number": 6,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_for_SPF_failed",
                        "required_params": {
                            "title": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 665
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Check each artifact and ..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_each_artifact_and_add_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_each_artifact_and_add_note() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['artifact:*.cef.requestURL', 'artifact:*.cef.requestURL_malicious'])\n    filtered_artifacts_data_2 = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationDnsDomain', 'artifact:*.cef.destinationDnsDomain_malicious'])\n    filtered_artifacts_data_3 = phantom.collect2(container=container, datapath=['artifact:*.cef.fileHashSha256', 'artifact:*.cef.fileHash_malicious'])\n    filtered_artifacts_data_4 = phantom.collect2(container=container, datapath=['artifact:*.cef.fromEmail_actual_sender', 'artifact:*.cef.fromEmail_actual_sender_malicious'])\n    malicious_urls = [item[0] for item in filtered_artifacts_data_1]\n    malicious_domains = [item[0] for item in filtered_artifacts_data_2]\n    malicious_files = [item[0] for item in filtered_artifacts_data_3]\n    malicious_mails = [item[0] for item in filtered_artifacts_data_4]\n\n    is_malicious_urls = [item[1] for item in filtered_artifacts_data_1]\n    is_malicious_domains = [item[1] for item in filtered_artifacts_data_2]\n    is_malicious_files = [item[1] for item in filtered_artifacts_data_3]\n    is_malicious_mails = [item[1] for item in filtered_artifacts_data_4]\n    \n    content = \"\"\n    \n    if malicious_urls:\n        content += \"**List of malicious URL(s):**\\n\"\n        for i in range(len(malicious_urls)):\n            if is_malicious_urls[i]:\n                content += f\"- `{malicious_urls[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_domains:\n        content += \"**List of malicious domain(s):**\\n\"\n        for i in range(len(malicious_domains)):\n            if is_malicious_domains[i]:\n                content += f\"- `{malicious_domains[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_files:\n        content += \"**List of malicious file(s):**\\n\"\n        for i in range(len(malicious_files)):\n            if is_malicious_files[i]:\n                content += f\"- `{malicious_files[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_mails:\n        content += \"**List of malicious e-mail address(es):**\\n\"\n        for i in range(len(malicious_mails)):\n            if is_malicious_mails[i]:\n                content += f\"- `{malicious_mails[i]}`\\n\"\n        content += \"\\n\\n\"\n        \n    parameters = []\n    \n    # build parameters list for 'add_note_2' call\n    parameters.append({\n        'title': \"Playbook Summary: Found malicious artifact(s) on this e-mail\",\n        'content': content,\n        'container_id': \"\",\n        'phase_id': \"\",\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['phantom asset'], name=\"add_note_summary\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_Format_user_email_being_sent(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "def Check_each_artifact_and_add_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_each_artifact_and_add_note() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['artifact:*.cef.requestURL', 'artifact:*.cef.requestURL_malicious'])\n    filtered_artifacts_data_2 = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationDnsDomain', 'artifact:*.cef.destinationDnsDomain_malicious'])\n    filtered_artifacts_data_3 = phantom.collect2(container=container, datapath=['artifact:*.cef.fileHashSha256', 'artifact:*.cef.fileHash_malicious'])\n    filtered_artifacts_data_4 = phantom.collect2(container=container, datapath=['artifact:*.cef.fromEmail_actual_sender', 'artifact:*.cef.fromEmail_actual_sender_malicious'])\n    malicious_urls = [item[0] for item in filtered_artifacts_data_1]\n    malicious_domains = [item[0] for item in filtered_artifacts_data_2]\n    malicious_files = [item[0] for item in filtered_artifacts_data_3]\n    malicious_mails = [item[0] for item in filtered_artifacts_data_4]\n\n    is_malicious_urls = [item[1] for item in filtered_artifacts_data_1]\n    is_malicious_domains = [item[1] for item in filtered_artifacts_data_2]\n    is_malicious_files = [item[1] for item in filtered_artifacts_data_3]\n    is_malicious_mails = [item[1] for item in filtered_artifacts_data_4]\n    \n    content = \"\"\n    \n    if malicious_urls:\n        content += \"**List of malicious URL(s):**\\n\"\n        for i in range(len(malicious_urls)):\n            if is_malicious_urls[i]:\n                content += f\"- `{malicious_urls[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_domains:\n        content += \"**List of malicious domain(s):**\\n\"\n        for i in range(len(malicious_domains)):\n            if is_malicious_domains[i]:\n                content += f\"- `{malicious_domains[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_files:\n        content += \"**List of malicious file(s):**\\n\"\n        for i in range(len(malicious_files)):\n            if is_malicious_files[i]:\n                content += f\"- `{malicious_files[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_mails:\n        content += \"**List of malicious e-mail address(es):**\\n\"\n        for i in range(len(malicious_mails)):\n            if is_malicious_mails[i]:\n                content += f\"- `{malicious_mails[i]}`\\n\"\n        content += \"\\n\\n\"\n        \n    parameters = []\n    \n    # build parameters list for 'add_note_2' call\n    parameters.append({\n        'title': \"Playbook Summary: Found malicious artifact(s) on this e-mail\",\n        'content': content,\n        'container_id': \"\",\n        'phase_id': \"\",\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['phantom asset'], name=\"add_note_summary\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Get_actual_sender_email(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Check each artifact and add note",
                        "description": "Check each artifact and add note",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0dc50b74-df26-49bf-8fe1-ae9a144396d8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 219,
                        "legacy": true,
                        "line_end": 126,
                        "line_start": 55,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Check each artifact and add note",
                        "number": 2,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Check_each_artifact_and_add_note",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['artifact:*.cef.requestURL', 'artifact:*.cef.requestURL_malicious'])\n    filtered_artifacts_data_2 = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationDnsDomain', 'artifact:*.cef.destinationDnsDomain_malicious'])\n    filtered_artifacts_data_3 = phantom.collect2(container=container, datapath=['artifact:*.cef.fileHashSha256', 'artifact:*.cef.fileHash_malicious'])\n    filtered_artifacts_data_4 = phantom.collect2(container=container, datapath=['artifact:*.cef.fromEmail_actual_sender', 'artifact:*.cef.fromEmail_actual_sender_malicious'])\n    malicious_urls = [item[0] for item in filtered_artifacts_data_1]\n    malicious_domains = [item[0] for item in filtered_artifacts_data_2]\n    malicious_files = [item[0] for item in filtered_artifacts_data_3]\n    malicious_mails = [item[0] for item in filtered_artifacts_data_4]\n\n    is_malicious_urls = [item[1] for item in filtered_artifacts_data_1]\n    is_malicious_domains = [item[1] for item in filtered_artifacts_data_2]\n    is_malicious_files = [item[1] for item in filtered_artifacts_data_3]\n    is_malicious_mails = [item[1] for item in filtered_artifacts_data_4]\n    \n    content = \"\"\n    \n    if malicious_urls:\n        content += \"**List of malicious URL(s):**\\n\"\n        for i in range(len(malicious_urls)):\n            if is_malicious_urls[i]:\n                content += f\"- `{malicious_urls[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_domains:\n        content += \"**List of malicious domain(s):**\\n\"\n        for i in range(len(malicious_domains)):\n            if is_malicious_domains[i]:\n                content += f\"- `{malicious_domains[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_files:\n        content += \"**List of malicious file(s):**\\n\"\n        for i in range(len(malicious_files)):\n            if is_malicious_files[i]:\n                content += f\"- `{malicious_files[i]}`\\n\"\n        content += \"\\n\\n\"\n    if malicious_mails:\n        content += \"**List of malicious e-mail address(es):**\\n\"\n        for i in range(len(malicious_mails)):\n            if is_malicious_mails[i]:\n                content += f\"- `{malicious_mails[i]}`\\n\"\n        content += \"\\n\\n\"\n        \n    parameters = []\n    \n    # build parameters list for 'add_note_2' call\n    parameters.append({\n        'title': \"Playbook Summary: Found malicious artifact(s) on this e-mail\",\n        'content': content,\n        'container_id': \"\",\n        'phase_id': \"\",\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['phantom asset'], name=\"add_note_summary\")\n\n",
                        "warn": false,
                        "z": 666
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format user email being ..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_user_email_being_sent(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_user_email_being_sent() called')\n    \n    template = \"\"\"This is an automated message to inform you regarding the e-mail you reported to us recently.\nThe e-mail you reported (sent by `{0}`) is malicious and you should not open any attachments or click any links.\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Distinguish_email_artifacts:custom_function:suspected_sender_email_address\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_user_email_being_sent\", separator=\", \")\n\n    Send_email_to_affected_user(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL, Add note for SPF failed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format user email being sent",
                        "delimiter": ", ",
                        "description": "Format user email being sent",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0fd5081c-2485-44b0-a885-b8cb1d46f993",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_Format_user_email_being_sent(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_Format_user_email_being_sent() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_Format_user_email_being_sent_called'):\n        return\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(playbook_names=['playbook_local_KTB_ENRICH_EMAIL_1']):\n        \n        # save the state that the joined function has now been called\n        phantom.save_run_data(key='join_Format_user_email_being_sent_called', value='Format_user_email_being_sent')\n        \n        # call connected block \"Format_user_email_being_sent\"\n        Format_user_email_being_sent(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "Add_note_for_SPF_failed"
                        ],
                        "join_start": 210,
                        "line_end": 228,
                        "line_start": 193,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format user email being sent",
                        "number": 7,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Distinguish_email_artifacts:custom_function:suspected_sender_email_address"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1260,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Format_user_email_being_sent",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "This is an automated message to inform you regarding the e-mail you reported to us recently.\nThe e-mail you reported (sent by `{0}`) is malicious and you should not open any attachments or click any links.",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 667
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Prepare for SPF failed re..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Prepare_for_SPF_failed_result(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Prepare_for_SPF_failed_result() called')\n    \n    template = \"\"\"This e-mail (sent by `{0}`) is suspected to be MALICIOUS as it didn't pass SPF validation.\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Distinguish_email_artifacts:custom_function:suspected_sender_email_address\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Prepare_for_SPF_failed_result\", separator=\", \")\n\n    Add_note_for_SPF_failed(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Prepare for SPF failed result",
                        "delimiter": ", ",
                        "description": "Prepare for SPF failed result",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3b5c7bec-17c6-4a31-a00c-fde22838eaad",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 459,
                        "line_start": 443,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Prepare for SPF failed result",
                        "number": 10,
                        "order": 16,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Distinguish_email_artifacts:custom_function:suspected_sender_email_address"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 720,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "Prepare_for_SPF_failed_result",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "This e-mail (sent by `{0}`) is suspected to be MALICIOUS as it didn't pass SPF validation.",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 668
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_email_contains_SPF(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_email_contains_SPF() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.fromEmail_actual_sender\", \"==\", \"Distinguish_email_artifacts:custom_function:suspected_sender_email_address\"],\n        ],\n        name=\"Filter_out_email_contains_SPF:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        SPF_check(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out email contains SPF",
                        "description": "Filter out email contains SPF",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fc4cd264-23d8-4407-a13d-8ae3e8d3d6be",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 380,
                        "line_start": 362,
                        "name": "filter",
                        "notes": "Filter out email contains SPF",
                        "number": 6,
                        "order": 14,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.fromEmail_actual_sender",
                                        "value": "Distinguish_email_artifacts:custom_function:suspected_sender_email_address"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 380,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_email_contains_SPF",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 670
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Distinguish email artifact..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Distinguish_email_artifacts(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Distinguish_email_artifacts() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Get_email_artifacts:condition_1:artifact:*.id', 'filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.fromEmail_actual_sender', 'filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.emailHeaders.Date'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_2 = [item[2] for item in filtered_artifacts_data_1]\n\n    Distinguish_email_artifacts__suspected_sender_email_address = None\n    Distinguish_email_artifacts__user_email_address = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    from datetime import datetime \n    # datetime format: \"Wed, 1 Jun 2022 15:37:58 +0700\"\n    artifact_ids = filtered_artifacts_item_1_0\n    sender_emails = filtered_artifacts_item_1_1\n    timestamps = [datetime.strptime(datetime_str, '%a, %d %b %Y %H:%M:%S %z') for datetime_str in filtered_artifacts_item_1_2]\n    \n    # init variables\n    suspected_sender_email_address = sender_emails[0]\n    user_email_address = sender_emails[0]\n    max_timestamp = timestamps[0]\n    min_timestamp = timestamps[0]\n    \n    #timestamps =  [ datetime_str.split(\"+\") for datetime_str in filtered_artifacts_item_1_2]\n    \n    #phantom.debug(artifact_ids)\n    #phantom.debug(sender_emails)\n    #for timestamp in timestamps:\n    #    phantom.debug(timestamp)\n    #phantom.debug(timestamps[0] > timestamps[1])\n    for i in range(len(artifact_ids)):\n        if timestamps[i] > max_timestamp:\n            user_email_address = sender_emails[i]\n            max_timestamp = timestamps[i]\n        \n        if timestamps[i] < min_timestamp:\n            suspected_sender_email_address = sender_emails[i]\n            min_timestamp = timestamps[i]\n    \n    #phantom.debug(f\"User: {user_email_address}\")\n    #phantom.debug(f\"Suspect: {suspected_sender_email_address}\")\n    Distinguish_email_artifacts__suspected_sender_email_address = suspected_sender_email_address\n    Distinguish_email_artifacts__user_email_address = user_email_address\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Distinguish_email_artifacts:suspected_sender_email_address', value=json.dumps(Distinguish_email_artifacts__suspected_sender_email_address))\n    phantom.save_run_data(key='Distinguish_email_artifacts:user_email_address', value=json.dumps(Distinguish_email_artifacts__user_email_address))\n    Check_if_there_are_malicious_artifacts(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 14,
                        "custom_callback": "",
                        "custom_code": "def Distinguish_email_artifacts(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Distinguish_email_artifacts() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Get_email_artifacts:condition_1:artifact:*.id', 'filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.fromEmail_actual_sender', 'filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.emailHeaders.Date'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_2 = [item[2] for item in filtered_artifacts_data_1]\n\n    Distinguish_email_artifacts__suspected_sender_email_address = None\n    Distinguish_email_artifacts__user_email_address = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    from datetime import datetime \n    # datetime format: \"Wed, 1 Jun 2022 15:37:58 +0700\"\n    artifact_ids = filtered_artifacts_item_1_0\n    sender_emails = filtered_artifacts_item_1_1\n    timestamps = [datetime.strptime(datetime_str, '%a, %d %b %Y %H:%M:%S %z') for datetime_str in filtered_artifacts_item_1_2]\n    \n    # init variables\n    suspected_sender_email_address = sender_emails[0]\n    user_email_address = sender_emails[0]\n    max_timestamp = timestamps[0]\n    min_timestamp = timestamps[0]\n    \n    #timestamps =  [ datetime_str.split(\"+\") for datetime_str in filtered_artifacts_item_1_2]\n    \n    #phantom.debug(artifact_ids)\n    #phantom.debug(sender_emails)\n    #for timestamp in timestamps:\n    #    phantom.debug(timestamp)\n    #phantom.debug(timestamps[0] > timestamps[1])\n    for i in range(len(artifact_ids)):\n        if timestamps[i] > max_timestamp:\n            user_email_address = sender_emails[i]\n            max_timestamp = timestamps[i]\n        \n        if timestamps[i] < min_timestamp:\n            suspected_sender_email_address = sender_emails[i]\n            min_timestamp = timestamps[i]\n    \n    #phantom.debug(f\"User: {user_email_address}\")\n    #phantom.debug(f\"Suspect: {suspected_sender_email_address}\")\n    Distinguish_email_artifacts__suspected_sender_email_address = suspected_sender_email_address\n    Distinguish_email_artifacts__user_email_address = user_email_address\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Distinguish_email_artifacts:suspected_sender_email_address', value=json.dumps(Distinguish_email_artifacts__suspected_sender_email_address))\n    phantom.save_run_data(key='Distinguish_email_artifacts:user_email_address', value=json.dumps(Distinguish_email_artifacts__user_email_address))\n\n    return",
                        "custom_join": "",
                        "custom_name": "Distinguish email artifacts",
                        "description": "Distinguish email artifacts",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f7abc577-1cf0-4f49-91bd-a7be730b57d1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 440,
                        "line_start": 383,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Distinguish email artifacts",
                        "number": 3,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "suspected_sender_email_address"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "user_email_address"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Get_email_artifacts:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.fromEmail_actual_sender"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "filtered-data:Get_email_artifacts:condition_1:artifact:*.cef.emailHeaders.Date"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "Distinguish_email_artifacts",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "    from datetime import datetime \n    # datetime format: \"Wed, 1 Jun 2022 15:37:58 +0700\"\n    artifact_ids = filtered_artifacts_item_1_0\n    sender_emails = filtered_artifacts_item_1_1\n    timestamps = [datetime.strptime(datetime_str, '%a, %d %b %Y %H:%M:%S %z') for datetime_str in filtered_artifacts_item_1_2]\n    \n    # init variables\n    suspected_sender_email_address = sender_emails[0]\n    user_email_address = sender_emails[0]\n    max_timestamp = timestamps[0]\n    min_timestamp = timestamps[0]\n    \n    #timestamps =  [ datetime_str.split(\"+\") for datetime_str in filtered_artifacts_item_1_2]\n    \n    #phantom.debug(artifact_ids)\n    #phantom.debug(sender_emails)\n    #for timestamp in timestamps:\n    #    phantom.debug(timestamp)\n    #phantom.debug(timestamps[0] > timestamps[1])\n    for i in range(len(artifact_ids)):\n        if timestamps[i] > max_timestamp:\n            user_email_address = sender_emails[i]\n            max_timestamp = timestamps[i]\n        \n        if timestamps[i] < min_timestamp:\n            suspected_sender_email_address = sender_emails[i]\n            min_timestamp = timestamps[i]\n    \n    #phantom.debug(f\"User: {user_email_address}\")\n    #phantom.debug(f\"Suspect: {suspected_sender_email_address}\")\n    Distinguish_email_artifacts__suspected_sender_email_address = suspected_sender_email_address\n    Distinguish_email_artifacts__user_email_address = user_email_address\n\n",
                        "warn": false,
                        "z": 671
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def SPF_check(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('SPF_check() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"pass (\", \"not in\", \"filtered-data:Filter_out_email_contains_SPF:condition_1:artifact:*.cef.emailHeaders.Received-SPF\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Prepare_for_SPF_failed_result(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Format_note_non_malicious(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "KTB-ENRICH-EMAIL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "SPF check",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b1392b62-0e55-4174-bad2-2e7defc9b088",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 359,
                        "line_start": 338,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 13,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "not in",
                                        "data_type": "",
                                        "param": "pass (",
                                        "value": "filtered-data:Filter_out_email_contains_SPF:condition_1:artifact:*.cef.emailHeaders.Received-SPF"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 520,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "SPF_check",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 672
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "35a54841-0a83-4e82-963e-26d0cc13e349",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b3376fcc-9acb-4d80-8ddd-a9e5c9aea1f4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "626103aa-0714-4852-8e38-117d59e4b9ed",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 673
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bcadd9eb-2f2c-426a-883b-5aff680837b0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "626103aa-0714-4852-8e38-117d59e4b9ed",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a0321e0a-43d1-497a-82c2-e3e706e94a21",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 674
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-06-02T06:00:54.642799+00:00",
    "draft_mode": false,
    "labels": [
        "email"
    ],
    "tags": []
}