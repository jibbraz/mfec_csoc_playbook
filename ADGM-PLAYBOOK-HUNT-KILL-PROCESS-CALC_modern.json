{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_19_to_port_2",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_4",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_20",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_20_to_port_1",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_12_to_port_13",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_14_to_port_10",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_15",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_16",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_16_to_port_17",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_9",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_9_to_port_8",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_6",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_9_to_port_7",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_7_to_port_1",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_6_to_port_5",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_11",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_11_to_port_1",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_4_to_port_12",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_0_to_port_18",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_19",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                }
            ],
            "hash": "46deb5e340292de289a320076a74d06acb1cf130",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": -120,
                    "y": -180
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": -280,
                    "y": 3340
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_waittime_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "waittime",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_waittime_1",
                        "id": "10",
                        "type": "utility",
                        "utilities": {
                            "waittime": {
                                "description": "",
                                "fields": [],
                                "label": "waittime",
                                "name": "waittime"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "waittime": {}
                        }
                    },
                    "errors": {},
                    "id": "10",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 0,
                    "y": 1600
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "AddNoteToEvent",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "addnotetoevent",
                        "id": "11",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "taskresourcestatus:formatted_data",
                                "note_format": "html",
                                "title": "Result of kill process"
                            }
                        }
                    },
                    "errors": {},
                    "id": "11",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 320,
                    "y": 3000
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "ExecuteTaskKillProcessCalcURI",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 3,
                        "functionName": "executetaskkillprocesscalcuri",
                        "id": "12",
                        "parameters": [
                            "compguid:formatted_data"
                        ],
                        "template": "/ASDK.Task/TaskManagementService.asmx/ExecuteTask?taskGuid=5b8a765c-b3dd-40c2-b5ff-c91684ce2139&executionName=CSOC-ThreatHunter-Response&inputParameters=<inputParameters><parameter><name>@AssignedResources</name><value>{0}</value></parameter></inputParameters>",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "format",
                    "warnings": {},
                    "x": 0,
                    "y": 860
                },
                "13": {
                    "data": {
                        "action": "get data",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "ExecuteTaskKillCalc",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "altiris uat"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "executetaskkillcalc",
                        "id": "13",
                        "parameters": {
                            "headers": "",
                            "location": "executetaskkillprocesscalcuri:formatted_data",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 1100
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "ExecutedTaskGuid",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 4,
                        "functionName": "executedtaskguid",
                        "id": "14",
                        "parameters": [
                            "executetaskkillcalc:action_result.data.*.parsed_response_body.guid.#text"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "format",
                    "warnings": {},
                    "x": 0,
                    "y": 1340
                },
                "15": {
                    "data": {
                        "advanced": {
                            "customName": "GetTaskStatusURI",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 6,
                        "functionName": "gettaskstatusuri",
                        "id": "15",
                        "parameters": [
                            "executedtaskguid:formatted_data"
                        ],
                        "template": "/ASDK.Task/TaskManagementService.asmx/gettaskstatus?taskGuid={0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "format",
                    "warnings": {},
                    "x": 320,
                    "y": 1600
                },
                "16": {
                    "data": {
                        "action": "get data",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "GetTaskStatus",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "altiris uat"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "gettaskstatus",
                        "id": "16",
                        "parameters": {
                            "headers": "",
                            "location": "gettaskstatusuri:formatted_data",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 1900
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "TaskStatus",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 7,
                        "functionName": "taskstatus",
                        "id": "17",
                        "parameters": [
                            "gettaskstatus:action_result.data.*.parsed_response_body.*.taskstatusDetails.Status"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "format",
                    "warnings": {},
                    "x": 320,
                    "y": 1900
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "ClientHostname",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 9,
                        "functionName": "clienthostname",
                        "id": "18",
                        "parameters": [
                            "artifact:*.cef.destinationHostName"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "warnings": {},
                    "x": -160,
                    "y": -40
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "GetClientHostnameURI",
                            "customNameId": 0,
                            "description": "Get client hostname and prepare URI to get computer guid",
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 1,
                        "functionName": "getclienthostnameuri",
                        "id": "19",
                        "parameters": [
                            "clienthostname:formatted_data"
                        ],
                        "template": "/ASDK.NS/ItemManagementService.asmx/GetItemsByNameAndType?name={0}&type=ComputerResource",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "format",
                    "warnings": {},
                    "x": -160,
                    "y": 200
                },
                "2": {
                    "data": {
                        "action": "get data",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "GetCompGuid",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "altiris uat"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "getcompguid",
                        "id": "2",
                        "parameters": {
                            "headers": "",
                            "location": "getclienthostnameuri:formatted_data",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "action",
                    "warnings": {},
                    "x": 160,
                    "y": 220
                },
                "20": {
                    "data": {
                        "advanced": {
                            "customName": "NotifyClientNotExist",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "approver": {
                            "type": "role",
                            "value": "Administrator"
                        },
                        "functionId": 2,
                        "functionName": "notifyclientnotexist",
                        "id": "20",
                        "message": "This client {0} not managed by Symantec Altiris. The playbook will be stop.",
                        "parameters": [
                            "clienthostname:formatted_data"
                        ],
                        "responseTime": 30.0,
                        "responses": [
                            {
                                "responseOptions": [],
                                "responsePrompt": "",
                                "responseType": "message"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {
                        "responses": [
                            {
                                "responsePrompt": "Questions cannot be empty."
                            }
                        ]
                    },
                    "id": "20",
                    "type": "prompt",
                    "warnings": {},
                    "x": -280,
                    "y": 900
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "CompGuid",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 2,
                        "functionName": "compguid",
                        "id": "3",
                        "parameters": [
                            "getcompguid:action_result.data.*.parsed_response_body.*.guid"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "format",
                    "warnings": {},
                    "x": -160,
                    "y": 480
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "CheckClientExist",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "getcompguid:action_result.data.*.parsed_response_body.*.guid",
                                        "value": "None"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "checkclientexist",
                        "id": "4",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "decision",
                    "warnings": {},
                    "x": -160,
                    "y": 720
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "TaskResourceStatus",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 8,
                        "functionName": "taskresourcestatus",
                        "id": "5",
                        "parameters": [
                            "gettaskresourcestatusresult:action_result.data.*.parsed_response_body.taskresourcestatusDetails.OutputProperties.*.Value"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "format",
                    "warnings": {},
                    "x": 320,
                    "y": 2760
                },
                "6": {
                    "data": {
                        "action": "get data",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "GetTaskResourceStatusResult",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "altiris uat"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "gettaskresourcestatusresult",
                        "id": "6",
                        "parameters": {
                            "headers": "",
                            "location": "taskresourcestatusuri:formatted_data",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "action",
                    "warnings": {},
                    "x": 320,
                    "y": 2520
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "approver": {
                            "type": "role",
                            "value": "Administrator"
                        },
                        "functionId": 4,
                        "functionName": "prompt_4",
                        "id": "7",
                        "message": "Task execution on target {0} has failure. Please contact CSOC-Platform for working with Symantec Altiris Administrator.",
                        "parameters": [
                            "compguid:formatted_data"
                        ],
                        "responseTime": 30.0,
                        "responses": [
                            {
                                "responseOptions": [],
                                "responsePrompt": "",
                                "responseType": "message"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {
                        "responses": [
                            {
                                "responsePrompt": "Questions cannot be empty."
                            }
                        ]
                    },
                    "id": "7",
                    "type": "prompt",
                    "warnings": {},
                    "x": 0,
                    "y": 2320
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "TaskResourceStatusURI",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 5,
                        "functionName": "taskresourcestatusuri",
                        "id": "8",
                        "parameters": [
                            "executedtaskguid:formatted_data",
                            "compguid:formatted_data"
                        ],
                        "template": "/ASDK.Task/TaskManagementService.asmx/Gettaskresourcestatus?taskInstanceGuid={0}&resourceGuid={1}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "format",
                    "warnings": {},
                    "x": 320,
                    "y": 2260
                },
                "9": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "gettaskstatus:action_result.data.*.parsed_response_body.*.taskstatusDetails.Status",
                                        "value": "Completed"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "decision_4",
                        "id": "9",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "decision",
                    "warnings": {},
                    "x": 0,
                    "y": 2180
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 138,
                "playbook_name": "ADGM-PLAYBOOK-HUNT-KILL-PROCESS-CALC",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "4.10.7.63984"
    },
    "create_time": "2025-03-27T15:14:52.698036+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}