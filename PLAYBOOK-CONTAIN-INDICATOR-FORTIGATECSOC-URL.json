{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'FilterMaliciousURL' block\n    FilterMaliciousURL(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 15,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1840,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 776
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ef46fbac-3387-409e-bc81-77bc74f1676b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bf009f57-6cd5-47b8-aa50-ac60a869629d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 777
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7a0a538e-dc30-465d-89b6-5f8cb1ddba04",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5d72ae2b-33d2-4157-8d2b-345632529b7d",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1eeae7b2-3192-49ed-b886-b0229d31b3d8",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1152
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "merge_url_result",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 518,
                        "line_start": 505,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 22,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 200,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1181
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8d25bb63-c19e-42b4-8121-9a0fc7fa2e25",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bf009f57-6cd5-47b8-aa50-ac60a869629d",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0a79c505-8f0b-47a1-94f5-25751dbeae6d",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1448
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3030d55e-b65a-4cae-8c6b-5a5d136e2ae0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5988d312-4072-4ef4-8f9f-ff95af188c50",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a6366479-1bce-4edc-bb58-6ca10449e28c",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1488
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8fcb7d7c-06ac-48e3-9d4c-603e92fa5535",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5c77a081-c218-4bba-8561-6d89ab495427",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0e57f529-9080-424e-bdb0-5d1c13427078",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1534
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_5() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addFailURLFormat')\n\n    note_title = \"Block URL Failure Report\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addFailURLFormat:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Block URL Failure Report",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0e57f529-9080-424e-bdb0-5d1c13427078",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 280,
                        "line_start": 268,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 5,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 200,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "add_note_5",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "warn",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1713
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "01950c2b-8f1f-4217-880b-ef1ab15f8091",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fd8d0f1b-3c87-449c-aff3-9d86d1e0b320",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1763
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9f1d6d46-5189-4a50-9797-e90ca6b9cd8c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0a79c505-8f0b-47a1-94f5-25751dbeae6d",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8e59e0e2-d3ee-431d-96d6-8e5e408dbcab",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1853
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1bfd04cb-805d-45a6-9193-ea44dce6a105",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4c1fe6df-acb5-4652-9f8c-4d72eb4f3048",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1357f2bd-981a-459b-a09f-5c0f3588002c",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1925
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9f02507d-0991-4978-b4bc-2424c3a1a918",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8e59e0e2-d3ee-431d-96d6-8e5e408dbcab",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "186289e4-e515-4a2f-8e35-925b19619f28",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1947
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4787eefc-69a9-4804-abf5-e8ff391a41be",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "186289e4-e515-4a2f-8e35-925b19619f28",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6479a788-68e9-4ec8-9eb1-4a80fcdc59fa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1948
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b7e450c0-0e5c-4ae9-b799-d1cf5f3894c2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6479a788-68e9-4ec8-9eb1-4a80fcdc59fa",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a9827079-80cd-4510-8dd5-e16246afdf00",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1949
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fc1a53a2-bf95-4d8d-95f5-202803077590",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a9827079-80cd-4510-8dd5-e16246afdf00",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4c1fe6df-acb5-4652-9f8c-4d72eb4f3048",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1950
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "41a532d3-d010-47df-a12b-c6d9ee38a52e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1357f2bd-981a-459b-a09f-5c0f3588002c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "58d26bb9-363d-49d3-bbd1-7505e61f7675",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1957
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7c6351a6-1ffc-4d3f-9c4e-9fa432caa701",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a6366479-1bce-4edc-bb58-6ca10449e28c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6eb312e6-d5e1-40a8-bd0f-e70bda428521",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1974
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "db4ce30b-4a20-49ba-aa75-246908fdf0d0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "58d26bb9-363d-49d3-bbd1-7505e61f7675",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5988d312-4072-4ef4-8f9f-ff95af188c50",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1976
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareNoteFormat"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareNoteFormat(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareNoteFormat() called')\n    \n    template = \"\"\"[\n%%\n{{\\\"device\\\" : \\\"DC1-APT-Seg-1\\\", \\\"body\\\" : {0}, \\\"status\\\" : \\\"{1}\\\", \\\"code\\\" : \\\"{10}\\\",\\\"reason\\\" : \\\"{11}\\\"}},\n{{\\\"device\\\" : \\\"DC2-APT-Seg-1\\\", \\\"body\\\" : {2}, \\\"status\\\" : \\\"{3}\\\", \\\"code\\\" : \\\"{12}\\\",\\\"reason\\\" : \\\"{13}\\\"}},\n{{\\\"device\\\" : \\\"DR1-APT-Seg-1\\\", \\\"body\\\" : {4}, \\\"status\\\" : \\\"{5}\\\", \\\"code\\\" : \\\"{14}\\\",\\\"reason\\\" : \\\"{15}\\\"}},\n{{\\\"device\\\" : \\\"DR2-APT-Seg-1\\\", \\\"body\\\" : {6}, \\\"status\\\" : \\\"{7}\\\", \\\"code\\\" : \\\"{16}\\\",\\\"reason\\\" : \\\"{17}\\\"}},\n{{\\\"device\\\" : \\\"DR2-APT-Seg-2\\\", \\\"body\\\" : {8}, \\\"status\\\" : \\\"{9}\\\", \\\"code\\\" : \\\"{18}\\\",\\\"reason\\\" : \\\"{19}\\\"}},\n%%\n]\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"postDC1_APT_Seg_1:action_result.parameter.body\",\n        \"postDC1_APT_Seg_1:action_result.status\",\n        \"postDC2_APT_Seg_1:action_result.parameter.body\",\n        \"postDC2_APT_Seg_1:action_result.status\",\n        \"postDR1_APT_Seg_1:action_result.parameter.body\",\n        \"postDR1_APT_Seg_1:action_result.status\",\n        \"postDR2_APT_Seg_1:action_result.parameter.body\",\n        \"postDR2_APT_Seg_1:action_result.status\",\n        \"postDR2_APT_Seg_2:action_result.parameter.body\",\n        \"postDR2_APT_Seg_2:action_result.status\",\n        \"postDC1_APT_Seg_1:action_result.summary.status_code\",\n        \"postDC1_APT_Seg_1:action_result.summary.reason\",\n        \"postDC2_APT_Seg_1:action_result.summary.status_code\",\n        \"postDC2_APT_Seg_1:action_result.summary.reason\",\n        \"postDR1_APT_Seg_1:action_result.summary.status_code\",\n        \"postDR1_APT_Seg_1:action_result.summary.reason\",\n        \"postDR2_APT_Seg_1:action_result.summary.status_code\",\n        \"postDR2_APT_Seg_1:action_result.summary.reason\",\n        \"postDR2_APT_Seg_2:action_result.summary.status_code\",\n        \"postDR2_APT_Seg_2:action_result.summary.reason\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareNoteFormat\", separator=\", \")\n\n    cf_local_sort_and_gen_markdown_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "postDR2_APT_Seg_2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareNoteFormat",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1357f2bd-981a-459b-a09f-5c0f3588002c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 496,
                        "line_end": 451,
                        "line_start": 408,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 32,
                        "order": 19,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 5,
                                "type": "",
                                "value": "postDC1_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "postDC1_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "postDC2_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "postDC2_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "postDR1_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "postDR1_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "postDR2_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 7,
                                "type": "",
                                "value": "postDR2_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 8,
                                "type": "",
                                "value": "postDR2_APT_Seg_2:action_result.parameter.body"
                            },
                            {
                                "position": 9,
                                "type": "",
                                "value": "postDR2_APT_Seg_2:action_result.status"
                            },
                            {
                                "position": 10,
                                "type": "",
                                "value": "postDC1_APT_Seg_1:action_result.summary.status_code"
                            },
                            {
                                "position": 11,
                                "type": "",
                                "value": "postDC1_APT_Seg_1:action_result.summary.reason"
                            },
                            {
                                "position": 12,
                                "type": "",
                                "value": "postDC2_APT_Seg_1:action_result.summary.status_code"
                            },
                            {
                                "position": 13,
                                "type": "",
                                "value": "postDC2_APT_Seg_1:action_result.summary.reason"
                            },
                            {
                                "position": 14,
                                "type": "",
                                "value": "postDR1_APT_Seg_1:action_result.summary.status_code"
                            },
                            {
                                "position": 15,
                                "type": "",
                                "value": "postDR1_APT_Seg_1:action_result.summary.reason"
                            },
                            {
                                "position": 16,
                                "type": "",
                                "value": "postDR2_APT_Seg_1:action_result.summary.status_code"
                            },
                            {
                                "position": 17,
                                "type": "",
                                "value": "postDR2_APT_Seg_1:action_result.summary.reason"
                            },
                            {
                                "position": 18,
                                "type": "",
                                "value": "postDR2_APT_Seg_2:action_result.summary.status_code"
                            },
                            {
                                "position": 19,
                                "type": "",
                                "value": "postDR2_APT_Seg_2:action_result.summary.reason"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -880,
                            "y": 700
                        },
                        "previous_function": "",
                        "previous_name": "prepareNoteFormat",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "[\n%%\n{{\"device\" : \"DC1-APT-Seg-1\", \"body\" : {0}, \"status\" : \"{1}\", \"code\" : \"{10}\",\"reason\" : \"{11}\"}},\n{{\"device\" : \"DC2-APT-Seg-1\", \"body\" : {2}, \"status\" : \"{3}\", \"code\" : \"{12}\",\"reason\" : \"{13}\"}},\n{{\"device\" : \"DR1-APT-Seg-1\", \"body\" : {4}, \"status\" : \"{5}\", \"code\" : \"{14}\",\"reason\" : \"{15}\"}},\n{{\"device\" : \"DR2-APT-Seg-1\", \"body\" : {6}, \"status\" : \"{7}\", \"code\" : \"{16}\",\"reason\" : \"{17}\"}},\n{{\"device\" : \"DR2-APT-Seg-2\", \"body\" : {8}, \"status\" : \"{9}\", \"code\" : \"{18}\",\"reason\" : \"{19}\"}},\n%%\n]",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1993
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "sort_and_gen_markdown"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_sort_and_gen_markdown_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_sort_and_gen_markdown_1() called')\n    \n    formatted_data_0 = [\n        [\n            phantom.get_format_data(name=\"prepareNoteFormat\"),\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in formatted_data_0:\n        parameters.append({\n            'resultList': item0[0],\n        })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/sort_and_gen_markdown\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/sort_and_gen_markdown', parameters=parameters, name='cf_local_sort_and_gen_markdown_1', callback=addNoteFormat)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/sort_and_gen_markdown",
                        "cfInputs": {
                            "resultList": {
                                "collectionType": "formatted_data",
                                "dataPath": "prepareNoteFormat:formatted_data",
                                "paramName": "item0[0]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "postDR2_APT_Seg_2",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 18,
                        "customFunction": "local/sort_and_gen_markdown",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "58d26bb9-363d-49d3-bbd1-7505e61f7675",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 481,
                        "line_start": 451,
                        "message": "Configuring now",
                        "name": "sort_and_gen_markdown",
                        "notes": "",
                        "number": 1,
                        "order": 20,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -880,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_sort_and_gen_markdown_1",
                        "resultList-0": "prepareNoteFormat:formatted_data",
                        "selectedCustomFunction": {
                            "description": "",
                            "draftMode": false,
                            "id": 265,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "sort_and_gen_markdown",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 265,
                                    "description": "",
                                    "id": 478,
                                    "input_type": "item",
                                    "name": "resultList",
                                    "placeholder": ""
                                }
                            ],
                            "name": "sort_and_gen_markdown",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "sort_and_gen_markdown",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 265,
                                    "data_path": "markdown",
                                    "description": "",
                                    "id": 280
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 1994
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addNoteFormat"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addNoteFormat(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addNoteFormat() called')\n    \n    template = \"\"\"{0}\nExecution Time : {1}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"cf_local_sort_and_gen_markdown_1:custom_function_result.data.markdown\",\n        \"postDC1_APT_Seg_1:action_result.data.*.response_headers.Date\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addNoteFormat\", separator=\", \")\n\n    add_note_4(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "sort_and_gen_markdown",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addNoteFormat",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5988d312-4072-4ef4-8f9f-ff95af188c50",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 251,
                        "line_end": 216,
                        "line_start": 198,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 28,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "cf_local_sort_and_gen_markdown_1:custom_function_result.data.markdown"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "postDC1_APT_Seg_1:action_result.data.*.response_headers.Date"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -880,
                            "y": 420
                        },
                        "previous_function": "",
                        "previous_name": "addNoteFormat",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "{0}\nExecution Time : {1}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1995
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6817702a-8a78-4dc3-89c9-0c084493ca93",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bb23f382-816f-4625-b9e9-a26507d5f7e5",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fd8d0f1b-3c87-449c-aff3-9d86d1e0b320",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2020
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "mergeResultFormat"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def mergeResultFormat(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('mergeResultFormat() called')\n    \n    template = \"\"\"[\n%%\n{{\\\"result_body\\\" : {5}, \\\"status\\\" : \\\"{0}\\\"}},\n{{\\\"result_body\\\" : {6}, \\\"status\\\" : \\\"{1}\\\"}},\n{{\\\"result_body\\\" : {7}, \\\"status\\\" : \\\"{2}\\\"}},\n{{\\\"result_body\\\" : {8}, \\\"status\\\" : \\\"{3}\\\"}},\n{{\\\"result_body\\\" : {9}, \\\"status\\\" : \\\"{4}\\\"}},\n%%\n]\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"postDC1_APT_Seg_1:action_result.status\",\n        \"postDC2_APT_Seg_1:action_result.status\",\n        \"postDR1_APT_Seg_1:action_result.status\",\n        \"postDR2_APT_Seg_1:action_result.status\",\n        \"postDR2_APT_Seg_2:action_result.status\",\n        \"postDC1_APT_Seg_1:action_result.parameter.body\",\n        \"postDC2_APT_Seg_1:action_result.parameter.body\",\n        \"postDR1_APT_Seg_1:action_result.parameter.body\",\n        \"postDR2_APT_Seg_1:action_result.parameter.body\",\n        \"postDR2_APT_Seg_2:action_result.parameter.body\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"mergeResultFormat\", separator=\", \")\n\n    artifactUpdateFormat(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "sort_and_gen_markdown",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "mergeResultFormat",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6eb312e6-d5e1-40a8-bd0f-e70bda428521",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 65,
                        "line_start": 32,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 21,
                        "order": 3,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "postDC1_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "postDC2_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "postDR1_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "postDR2_APT_Seg_1:action_result.status"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "postDR2_APT_Seg_2:action_result.status"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "postDC1_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "postDC2_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 7,
                                "type": "",
                                "value": "postDR1_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 8,
                                "type": "",
                                "value": "postDR2_APT_Seg_1:action_result.parameter.body"
                            },
                            {
                                "position": 9,
                                "type": "",
                                "value": "postDR2_APT_Seg_2:action_result.parameter.body"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -580,
                            "y": 280
                        },
                        "previous_function": "",
                        "previous_name": "mergeResultFormat",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "[\n%%\n{{\"result_body\" : {5}, \"status\" : \"{0}\"}},\n{{\"result_body\" : {6}, \"status\" : \"{1}\"}},\n{{\"result_body\" : {7}, \"status\" : \"{2}\"}},\n{{\"result_body\" : {8}, \"status\" : \"{3}\"}},\n{{\"result_body\" : {9}, \"status\" : \"{4}\"}},\n%%\n]",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2025
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "strip_url_prefix_n_generate_body"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_strip_url_prefix_n_generate_body_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_strip_url_prefix_n_generate_body_1() called')\n    \n    filtered_artifacts_data_0 = phantom.collect2(container=container, datapath=['filtered-data:FilterMaliciousURL:condition_1:artifact:*.cef.requestURL'])\n\n    parameters = []\n\n    for item0 in filtered_artifacts_data_0:\n        parameters.append({\n            'requestURLs': item0[0],\n        })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/strip_url_prefix_n_generate_body\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/strip_url_prefix_n_generate_body', parameters=parameters, name='cf_local_strip_url_prefix_n_generate_body_1', callback=postDC1_APT_Seg_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 278,
                        "callsback": true,
                        "cfDisplayPath": "local/strip_url_prefix_n_generate_body",
                        "cfInputs": {
                            "requestURLs": {
                                "collectionType": "filtered_artifacts_data",
                                "dataPath": "filtered-data:FilterMaliciousURL:condition_1:artifact:*.cef.requestURL",
                                "paramName": "item0[0]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 14,
                        "customFunction": "local/strip_url_prefix_n_generate_body",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0a79c505-8f0b-47a1-94f5-25751dbeae6d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 242,
                        "line_start": 216,
                        "message": "Configuring now",
                        "name": "strip_url_prefix_n_generate_body",
                        "notes": "",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1520,
                            "y": 140
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_strip_url_prefix_n_generate_body_1",
                        "requestURLs-0": "filtered-data:FilterMaliciousURL:condition_1:artifact:*.cef.requestURL",
                        "selectedCustomFunction": {
                            "description": "Strip \"http://\" and \"https://\" from input string  and generate body request for add web override category on fortigate",
                            "draftMode": false,
                            "id": 183,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "strip_url_prefix_n_generate_body",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 183,
                                    "description": "",
                                    "id": 340,
                                    "input_type": "item",
                                    "name": "requestURLs",
                                    "placeholder": "URL list"
                                }
                            ],
                            "name": "strip_url_prefix_n_generate_body",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "strip_url_prefix_n_generate_body",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 183,
                                    "data_path": "bodyFormat",
                                    "description": "processed URL in json body format",
                                    "id": 147
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATECSOC-URL",
                                        "draft_mode": false,
                                        "id": 4326,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIGATECSOC-URL",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 2031
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "21033dad-b467-43d7-99c9-80ff4ab155cf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6eb312e6-d5e1-40a8-bd0f-e70bda428521",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bb23f382-816f-4625-b9e9-a26507d5f7e5",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2033
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addURLEntryError"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addURLEntryError(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addURLEntryError() called')\n    \n    template = \"\"\"%% \n{{\n{0} this is\n}} \n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"cf_local_merge_url_result_1:custom_function_result.data.failArtifactList.*\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addURLEntryError\", separator=\", \")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addURLEntryError",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4b9d85e4-29b3-49b1-a19c-85270ed76d43",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 133,
                        "line_start": 115,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 25,
                        "order": 6,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "cf_local_merge_url_result_1:custom_function_result.data.failArtifactList.*"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -260,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "addURLEntryError",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "warn",
                        "template": "%% \n{{\n{0} this is\n}} \n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2061
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addFailURLFormat"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addFailURLFormat(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addFailURLFormat() called')\n    \n    template = \"\"\"%%\nURL : {0}  \nReason : {1}  \nStatus Code : {2}  \n```\n{3}\n```\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:FilterMaliciousURL:condition_1:artifact:*.cef.requestURL\",\n        \"postWebRatingAPTSeg1:action_result.summary.reason\",\n        \"postWebRatingAPTSeg1:action_result.summary.status_code\",\n        \"postWebRatingAPTSeg1:action_result.message\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addFailURLFormat\", separator=\", \")\n\n    add_note_5(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addFailURLFormat",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5c77a081-c218-4bba-8561-6d89ab495427",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 268,
                        "line_start": 242,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 29,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:FilterMaliciousURL:condition_1:artifact:*.cef.requestURL"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "postWebRatingAPTSeg1:action_result.summary.reason"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "postWebRatingAPTSeg1:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "postWebRatingAPTSeg1:action_result.message"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 200,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "addFailURLFormat",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "warn",
                        "template": "%%\nURL : {0}  \nReason : {1}  \nStatus Code : {2}  \n```\n{3}\n```\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2063
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "artifactUpdateFormat"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def artifactUpdateFormat(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('artifactUpdateFormat() called')\n    \n    template = \"\"\"[\n%%\n{{\n      \\\"artifact_id\\\" : {0} ,\n      \\\"cef\\\" : [{1}]\n}},\n%%\n]\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:FilterMaliciousURL:condition_1:artifact:*.id\",\n        \"filtered-data:FilterMaliciousURL:condition_1:artifact:*.cef\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"artifactUpdateFormat\", separator=\", \")\n\n    cf_local_merge_url_result_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "sort_and_gen_markdown",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "artifactUpdateFormat",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bb23f382-816f-4625-b9e9-a26507d5f7e5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 408,
                        "line_start": 384,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 30,
                        "order": 18,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:FilterMaliciousURL:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:FilterMaliciousURL:condition_1:artifact:*.cef"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -580,
                            "y": 420
                        },
                        "previous_function": "",
                        "previous_name": "artifactUpdateFormat",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "[\n%%\n{{\n      \"artifact_id\" : {0} ,\n      \"cef\" : [{1}]\n}},\n%%\n]",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2065
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "filtered-data:FilterMaliciousURL:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "addCEFContainResultTrue:formatted_data",
                            "cef_key": "id",
                            "cef_types_json": "",
                            "container_ids": "current",
                            "exact_match": true,
                            "label": "",
                            "limit_search": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": "",
                            "values": "artifact:*.id"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "filtered-data:FilterMaliciousURL:condition_1:artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "addCEFContainResultTrue:formatted_data",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "updateArtifactTrue"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def updateArtifactTrue(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('updateArtifactTrue() called')\n\n    # collect data for 'updateArtifactTrue' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:FilterMaliciousURL:condition_1:artifact:*.id', 'filtered-data:FilterMaliciousURL:condition_1:artifact:*.id'])\n    formatted_data_1 = phantom.get_format_data(name='addCEFContainResultTrue')\n\n    parameters = []\n    \n    # build parameters list for 'updateArtifactTrue' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': formatted_data_1,\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': filtered_artifacts_item_1[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"updateArtifactTrue\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "updateArtifactTrue",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1eeae7b2-3192-49ed-b886-b0229d31b3d8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 95,
                        "line_start": 65,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 2,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -20,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "updateArtifactTrue",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2066
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "merge_url_result"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_merge_url_result_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_merge_url_result_1() called')\n    \n    formatted_data_0 = [\n        [\n            phantom.get_format_data(name=\"mergeResultFormat\"),\n            phantom.get_format_data(name=\"artifactUpdateFormat\"),\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in formatted_data_0:\n        parameters.append({\n            'resultList': item0[0],\n            'artifactInfo': item0[1],\n        })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/merge_url_result\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/merge_url_result', parameters=parameters, name='cf_local_merge_url_result_1')\n\n    return",
                        "callback_code": "",
                        "callback_start": 419,
                        "callsback": true,
                        "cfDisplayPath": "local/merge_url_result",
                        "cfInputs": {
                            "artifactInfo": {
                                "collectionType": "formatted_data",
                                "dataPath": "artifactUpdateFormat:formatted_data",
                                "paramName": "item0[1]",
                                "type": "item"
                            },
                            "resultList": {
                                "collectionType": "formatted_data",
                                "dataPath": "mergeResultFormat:formatted_data",
                                "paramName": "item0[0]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "sort_and_gen_markdown",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 20,
                        "customFunction": "local/merge_url_result",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fd8d0f1b-3c87-449c-aff3-9d86d1e0b320",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 384,
                        "line_start": 352,
                        "message": "Configuring now",
                        "name": "merge_url_result",
                        "notes": "",
                        "number": 1,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -580,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_merge_url_result_1",
                        "selectedCustomFunction": {
                            "description": "",
                            "draftMode": false,
                            "id": 261,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "merge_url_result",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 261,
                                    "description": "",
                                    "id": 473,
                                    "input_type": "item",
                                    "name": "resultList",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "merge_url_result",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 261,
                                    "description": "",
                                    "id": 474,
                                    "input_type": "item",
                                    "name": "artifactInfo",
                                    "placeholder": ""
                                }
                            ],
                            "name": "merge_url_result",
                            "outputs": [],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATECSOC-URL",
                                        "draft_mode": false,
                                        "id": 4512,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIGATECSOC-URL",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 2067
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def FilterMaliciousURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FilterMaliciousURL() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.requestURL_malicious\", \"==\", True],\n        ],\n        name=\"FilterMaliciousURL:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        cf_local_strip_url_prefix_n_generate_body_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "FilterMaliciousURL",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bf009f57-6cd5-47b8-aa50-ac60a869629d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 32,
                        "line_start": 15,
                        "name": "filter",
                        "notes": "",
                        "number": 3,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.cef.requestURL_malicious",
                                        "value": "True"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1680,
                            "y": 140
                        },
                        "previous_function": "",
                        "previous_name": "FilterMaliciousURL",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2068
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                            "headers": "",
                            "location": "webfilter/ftgd-local-rating?vdom=dummy&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                                    "headers": "",
                                    "location": "webfilter/ftgd-local-rating?vdom=dummy&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "postDR2_APT_Seg_2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def postDR2_APT_Seg_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('postDR2_APT_Seg_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'postDR2_APT_Seg_2' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'postDR2_APT_Seg_2' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'body': custom_function_results_item_1[0],\n                'headers': \"\",\n                'location': \"webfilter/ftgd-local-rating?vdom=dummy&access_token=06sN8905r8186qNxpg70G89hjNHqNx\",\n                'verify_certificate': False,\n            })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=prepareNoteFormat, name=\"postDR2_APT_Seg_2\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "postDR2_APT_Seg_1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "postDR2_APT_Seg_2",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4c1fe6df-acb5-4652-9f8c-4d72eb4f3048",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 537,
                        "line_end": 505,
                        "line_start": 481,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 13,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1180,
                            "y": 700
                        },
                        "previous_function": "",
                        "previous_name": "postDR2_APT_Seg_2",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2070
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                            "headers": "",
                            "location": "webfilter/ftgd-local-rating?vdom=root&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                                    "headers": "",
                                    "location": "webfilter/ftgd-local-rating?vdom=root&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "postDR2_APT_Seg_1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def postDR2_APT_Seg_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('postDR2_APT_Seg_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'postDR2_APT_Seg_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'postDR2_APT_Seg_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'body': custom_function_results_item_1[0],\n                'headers': \"\",\n                'location': \"webfilter/ftgd-local-rating?vdom=root&access_token=06sN8905r8186qNxpg70G89hjNHqNx\",\n                'verify_certificate': False,\n            })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=postDR2_APT_Seg_2, name=\"postDR2_APT_Seg_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "postDR1_APT_Seg_1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "postDR2_APT_Seg_1",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a9827079-80cd-4510-8dd5-e16246afdf00",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 352,
                        "line_start": 328,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 12,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1180,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "postDR2_APT_Seg_1",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2071
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addCEFContainResultTr..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addCEFContainResultTrue(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addCEFContainResultTrue() called')\n    \n    template = \"\"\"%%\n{{\n\t\\\"requestURL_ContainResult\\\": \\\"True\\\"\n}}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"cf_local_merge_url_result_1:custom_function_result.data\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addCEFContainResultTrue\", separator=\", \")\n\n    updateArtifactTrue(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addCEFContainResultTrue",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5d72ae2b-33d2-4157-8d2b-345632529b7d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 115,
                        "line_start": 95,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 23,
                        "order": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "cf_local_merge_url_result_1:custom_function_result.data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -260,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "addCEFContainResultTrue",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "warn",
                        "template": "%%\n{{\n\t\"requestURL_ContainResult\": \"True\"\n}}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2075
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "cf_local_merge_url_result_1:custom_function_result.data.failArtifactList",
                            "artifact_json": "",
                            "cef_json": "addURLEntryError:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "cf_local_merge_url_result_1:custom_function_result.data.failArtifactList",
                                    "artifact_json": "",
                                    "cef_json": "addURLEntryError:formatted_data",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "addCEFContainResultFal..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addCEFContainResultFalse2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addCEFContainResultFalse2() called')\n\n    # collect data for 'addCEFContainResultFalse2' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_merge_url_result_1:custom_function_result.data.failArtifactList'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='addURLEntryError')\n\n    parameters = []\n    \n    # build parameters list for 'addCEFContainResultFalse2' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': formatted_data_1,\n                'severity': \"\",\n                'overwrite': \"\",\n                'artifact_id': custom_function_results_item_1[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"addCEFContainResultFalse2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addCEFContainResultFalse2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5edeef2e-3a97-44e4-882d-1e29d0efe84e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 161,
                        "line_start": 133,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 4,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -20,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "addCEFContainResultFalse2",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2076
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                            "headers": "",
                            "location": "webfilter/ftgd-local-rating?vdom=APT-Seg-1&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                                    "headers": "",
                                    "location": "webfilter/ftgd-local-rating?vdom=APT-Seg-1&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 113,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "113",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "postDC1_APT_Seg_1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def postDC1_APT_Seg_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('postDC1_APT_Seg_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'postDC1_APT_Seg_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'postDC1_APT_Seg_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'body': custom_function_results_item_1[0],\n                'headers': \"\",\n                'location': \"webfilter/ftgd-local-rating?vdom=APT-Seg-1&access_token=06sN8905r8186qNxpg70G89hjNHqNx\",\n                'verify_certificate': False,\n            })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=postDC2_APT_Seg_1, name=\"postDC1_APT_Seg_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 238,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "strip_url_prefix_n_generate_body",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "postDC1_APT_Seg_1",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8e59e0e2-d3ee-431d-96d6-8e5e408dbcab",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 198,
                        "line_start": 174,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 9,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1180,
                            "y": 140
                        },
                        "previous_function": "",
                        "previous_name": "postDC1_APT_Seg_1",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2078
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                            "headers": "",
                            "location": "webfilter/ftgd-local-rating?vdom=Internet&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                                    "headers": "",
                                    "location": "webfilter/ftgd-local-rating?vdom=Internet&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "postDR1_APT_Seg_1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def postDR1_APT_Seg_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('postDR1_APT_Seg_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'postDR1_APT_Seg_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'postDR1_APT_Seg_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'body': custom_function_results_item_1[0],\n                'headers': \"\",\n                'location': \"webfilter/ftgd-local-rating?vdom=Internet&access_token=06sN8905r8186qNxpg70G89hjNHqNx\",\n                'verify_certificate': False,\n            })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=postDR2_APT_Seg_1, name=\"postDR1_APT_Seg_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "postDC2_APT_Seg_1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "postDR1_APT_Seg_1",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6479a788-68e9-4ec8-9eb1-4a80fcdc59fa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 328,
                        "line_start": 304,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 11,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1180,
                            "y": 420
                        },
                        "previous_function": "",
                        "previous_name": "postDR1_APT_Seg_1",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2079
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_4() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addNoteFormat')\n\n    note_title = \"Playbook Summary: Block URL Result\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    mergeResultFormat(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addNoteFormat:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteNoteFormat_display": "markdown",
                                "addNoteTitle": "Playbook Summary: Block URL Result",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "sort_and_gen_markdown",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a6366479-1bce-4edc-bb58-6ca10449e28c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 174,
                        "line_start": 161,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 4,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -880,
                            "y": 280
                        },
                        "previous_function": "",
                        "previous_name": "add_note_4",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 2080
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                            "headers": "",
                            "location": "webfilter/ftgd-local-rating?vdom=APT-Seg-2&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*",
                                    "headers": "",
                                    "location": "webfilter/ftgd-local-rating?vdom=APT-Seg-2&access_token=06sN8905r8186qNxpg70G89hjNHqNx",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "postDC2_APT_Seg_1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def postDC2_APT_Seg_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('postDC2_APT_Seg_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'postDC2_APT_Seg_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_strip_url_prefix_n_generate_body_1:custom_function_result.data.bodyFormat.*'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'postDC2_APT_Seg_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'body': custom_function_results_item_1[0],\n                'headers': \"\",\n                'location': \"webfilter/ftgd-local-rating?vdom=APT-Seg-2&access_token=06sN8905r8186qNxpg70G89hjNHqNx\",\n                'verify_certificate': False,\n            })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=postDR1_APT_Seg_1, name=\"postDC2_APT_Seg_1\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "postDC1_APT_Seg_1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "postDC2_APT_Seg_1",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "186289e4-e515-4a2f-8e35-925b19619f28",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 304,
                        "line_start": 280,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 10,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1180,
                            "y": 280
                        },
                        "previous_function": "",
                        "previous_name": "postDC2_APT_Seg_1",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2081
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-08-31T07:07:21.345918+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}