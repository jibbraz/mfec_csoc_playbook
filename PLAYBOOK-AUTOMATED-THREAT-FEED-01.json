{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "import ipaddress\nURL_CONTAIN_FAILED = False",
            "description": "This playbook takes an indicator as input and enriches it from threat intelligence sources based on the indicator type.",
            "hash": "7e81aa29ffb78190ef19f422bacece6aaa5df294",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f7fdd6bc-a178-4ed7-86bd-8242e50f1983",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e7d1249-fc1d-4b42-b2e0-46c87f70f4f9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4f27bcb6-5ad2-4ab3-866c-c52080fb6049",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1996
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ebf32fbf-769c-4875-b865-359d4389dace",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8c508d4-082b-4fe9-802e-c69705042c79",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c9b906a9-b13b-4c50-8ae6-7bc2ff037c46",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2205
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ffabc82a-14d6-4221-bdf9-77eaa2bf9838",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "06934285-1d61-46a8-8af8-6d1074ba427d",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "38231c10-75e8-4605-b8cd-437bf8f1e154",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2655
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b8aa3586-b5bf-442d-8d76-812e9063683c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0d332c56-17ba-4a81-a2fc-77f1637ff5ab",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fffbf7e1-cca8-433a-acac-4f8d9c695ea5",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2731
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1dfc303e-5c52-4989-8fac-e008e5469e2d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fffbf7e1-cca8-433a-acac-4f8d9c695ea5",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0c12f457-acaa-4e2f-b2f2-10035c8d0fee",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2842
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "586e90f8-ec49-435c-a6b8-5cdc395630fd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fb01e996-a55a-4f88-8512-16546f764286",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a74ca34e-8621-4d95-bedd-ac74fd381960",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3096
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "670bf065-ac24-4028-9e80-5716d0328338",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7f56a8f2-a05a-4add-b338-1c5d3a97acc2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "965cb926-62bd-46a2-835a-81a64d95a348",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3120
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e0f6a4db-f433-414d-b172-473df1d548aa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "60060970-8c86-427d-b69e-77e52f5a9abb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d8627ced-5a48-4e7a-b038-12fa2e39c19d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3147
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6c4d7dd1-4456-4c9e-92f2-78941b1968d8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d47d9855-407b-4f17-ba0f-eedc537ecea0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "58fc3df2-8509-4950-a7d5-b4893cd185db",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3163
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "eada3268-53e1-469c-879f-95d05da5b90a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8627ced-5a48-4e7a-b038-12fa2e39c19d",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2a42c6f8-d9cc-4e36-9825-2fa2316a6b2a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3199
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "850c86eb-cf58-43d3-a56b-f8b175b7fd6d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8627ced-5a48-4e7a-b038-12fa2e39c19d",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aec10cfc-eeaf-4516-9657-e6447c4df4c9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3204
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c59ef749-e097-4ede-8767-81532701057b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "aec10cfc-eeaf-4516-9657-e6447c4df4c9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3206
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f92b9f73-ea3b-4ec1-ad7b-0ba0ce6326b8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "eb2ae9e7-bc42-4685-bba1-3182bba31da0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3211
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b0102f5c-c640-4fbf-a46f-57c319a214bd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8627ced-5a48-4e7a-b038-12fa2e39c19d",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "eb2ae9e7-bc42-4685-bba1-3182bba31da0",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3219
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8c26e4fa-64de-4a3c-8882-fc839edea2c3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8627ced-5a48-4e7a-b038-12fa2e39c19d",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aec10cfc-eeaf-4516-9657-e6447c4df4c9",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3220
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Add Malicious and NonContained Tags URL, Prompt URL Containment, Add Contained Tag URL, Add NonContained Tag URL, Add Malicious and Noncontained Tag IP, File Reputation on VT_V, Add Malicious and Contained IP, Add Malicious and Contained Tag Hash, Add Investigated and Malicious Tags Hash, Add Benign and Investigated Tag, Add Contained Tag IP, Prompt URL Containment, Add Benign Tag IP, Add NonContained Tag IP, Add Benign Tag Domain, URL Add Investigated and Benign Tags, Domain IoC Add Malicious Tag",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5ef985c8-0576-4193-873d-441f0282b295",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2416,
                        "line_start": 2403,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 104,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 4480,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 3233
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "babb1110-445b-40c1-8683-7dfd61a30e17",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2b18b832-11bf-4218-9be7-5b6fccc5ddb3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ae76c97c-078d-45ab-94a4-30d1623b5b13",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3347
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a6280b6f-4c3b-474c-b77d-e7bcfe09309d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "38231c10-75e8-4605-b8cd-437bf8f1e154",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c21784cb-4ec9-46e9-8578-3607eeabe374",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3625
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2afb7f00-0f05-41a4-972d-602e33944e66",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8c457e4a-bbc9-4940-8ee5-aed8ca147fca",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3647
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "afd5ba47-2101-471b-91e7-299bde1cf391",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a0deae7b-731f-4955-a361-5c74c1e00349",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3651
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "99b56592-5668-468a-a921-e133b4a43430",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a74ca34e-8621-4d95-bedd-ac74fd381960",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "434f32bc-4dac-4b59-9953-6deb13c0b818",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3674
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "522d8dbf-eac2-4a4c-9121-f55ec95f01f5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ca1b52d0-5d1d-41ea-81c1-e595520518f9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "51680913-ee30-4d2e-a7d1-acbb40c8daa6",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3684
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "da5d28c2-8bcc-4864-82e0-1152121fc93f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "037e2256-1517-4dd3-9013-0c9cd0ee25ad",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3493dec0-f497-4f50-baca-ba28e4eba335",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3695
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Email Content Hash"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Email_Content_Hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Email_Content_Hash() called')\n    \n    template = \"\"\"{0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Email_Content_Hash\", separator=\", \")\n\n    add_note_64(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Add Malicious and Contained Tag Hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Email Content Hash",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "58fc3df2-8509-4950-a7d5-b4893cd185db",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 820,
                        "line_start": 804,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 37,
                        "order": 32,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1740,
                            "y": 2520
                        },
                        "previous_function": "",
                        "previous_name": "Email_Content_Hash",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "{0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3706
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fd651384-a41f-476e-95a8-fe96d1ab74ca",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b071b810-4781-462b-98cd-8134e897e948",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "134e4046-d8fa-4e0d-a8bc-63f9f2c93f9e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3709
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Form Email File Hash"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Form_Email_File_Hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Form_Email_File_Hash() called')\n    \n    template = \"\"\"Hi SOC,\nBelow IOC File Hash have been taged as \\\" PhantomInvestigated\\\" and \\\"PhantomBenign\\\"\n%%\n{0}\n%%\nThanks\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Form_Email_File_Hash\", separator=\", \")\n\n    add_note_65(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Add Benign and Investigated Tag",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Form Email File Hash",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "134e4046-d8fa-4e0d-a8bc-63f9f2c93f9e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1063,
                        "line_start": 1042,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 52,
                        "order": 44,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 660,
                            "y": 2840
                        },
                        "previous_function": "",
                        "previous_name": "Form_Email_File_Hash",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Hi SOC,\nBelow IOC File Hash have been taged as \" PhantomInvestigated\" and \"PhantomBenign\"\n%%\n{0}\n%%\nThanks",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3712
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "evt_count",
                            "parse_only": "False",
                            "query": "Format_Hash_Containment_Query:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "evt_count",
                                    "parse_only": "False",
                                    "query": "Format_Hash_Containment_Query:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Run Hash Containment ..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Run_Hash_Containment_Query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Run_Hash_Containment_Query() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Run_Hash_Containment_Query' call\n    formatted_data_1 = phantom.get_format_data(name='Format_Hash_Containment_Query__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'Run_Hash_Containment_Query' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'query': formatted_part_1,\n            'command': \"tstats\",\n            'display': \"evt_count\",\n            'parse_only': False,\n        })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=decision_21, name=\"Run_Hash_Containment_Query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "File Reputation on VT_V",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Run Hash Containment Query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a74ca34e-8621-4d95-bedd-ac74fd381960",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 492,
                        "line_start": 469,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 8,
                        "order": 22,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 660,
                            "y": 2700
                        },
                        "previous_function": "",
                        "previous_name": "Run_Hash_Containment_Query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3716
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ac4e3b16-f4d9-48d5-a72a-427cd9379eb4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "31471b44-3d32-4901-93ac-0b1cefa7bb30",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f4a35827-68ff-4d32-bd8d-bbaf0ce41566",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3744
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1d86cbfb-b20b-44fb-b614-fd954ddf8ac7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "12c26ac6-6cbb-48b4-94e5-64f5bbe2ec0f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3799
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "519c1e1f-ba29-4352-97b8-6e825f67ac01",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6a806777-a88e-41fb-b58a-4339cb8c2ecf",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1159ca6f-9277-4250-87de-e9553c4ae383",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3829
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f28bb56a-71fd-4b55-95ae-0e0bb942b0d8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1159ca6f-9277-4250-87de-e9553c4ae383",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3832
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "46ab4392-b4e6-4ee0-bf1a-3a654ae73005",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "52f263cf-1de3-4eee-9cc1-fd7dfd37a178",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ebf2b356-05ac-4cb5-a248-9efc786d7a26",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 3980
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "512d5615-5add-4099-8728-cf2fff0b9a94",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ebf2b356-05ac-4cb5-a248-9efc786d7a26",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3982
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d9c1b813-cf85-44a4-82cb-15d3ca810759",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f4a35827-68ff-4d32-bd8d-bbaf0ce41566",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "81ab70bf-839c-4370-adc8-5d890d694f7a",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 3999
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6b651d8f-47d5-463c-b3d3-0a66dd6752fa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "81ab70bf-839c-4370-adc8-5d890d694f7a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0d332c56-17ba-4a81-a2fc-77f1637ff5ab",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4000
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0978e2f3-f650-4dd6-98b1-65830ceab54e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ae76c97c-078d-45ab-94a4-30d1623b5b13",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c430c5f7-b1f0-4b57-9c8f-4143df606db0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4016
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "29b66196-bb3b-4aba-b075-6a01267d1016",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c430c5f7-b1f0-4b57-9c8f-4143df606db0",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "06934285-1d61-46a8-8af8-6d1074ba427d",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4021
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "790cf7b9-c7dc-47b4-b1d3-670455e4e33f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "58fc3df2-8509-4950-a7d5-b4893cd185db",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "292251cb-d960-4949-9899-8b9e66005681",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4148
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c4e30360-865a-47d1-bc1c-595ed54e29c2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "134e4046-d8fa-4e0d-a8bc-63f9f2c93f9e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b5f40f34-21b4-44bb-b073-711317b62f28",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4157
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_65(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_65() called')\n\n    formatted_data_1 = phantom.get_format_data(name='Form_Email_File_Hash')\n\n    note_title = \"Benign File Hash IoC\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Form_Email_File_Hash:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Benign File Hash IoC",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Benign and Investigated Tag",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b5f40f34-21b4-44bb-b073-711317b62f28",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1425,
                        "line_start": 1413,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 65,
                        "order": 61,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2040,
                            "y": 2840
                        },
                        "previous_function": "",
                        "previous_name": "add_note_65",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 4158
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "990af33e-d537-4235-ac73-cdd791973b79",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "51680913-ee30-4d2e-a7d1-acbb40c8daa6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "824f8686-345a-478d-ad4a-c224c650406f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4159
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "96326413-8274-4211-bbf3-34b93467f20a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "292251cb-d960-4949-9899-8b9e66005681",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4163
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a2b6a7e8-871e-495b-a203-7ad80070a2db",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "824f8686-345a-478d-ad4a-c224c650406f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4164
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "29d1159f-f6ef-4551-a485-702e27862bfb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b5f40f34-21b4-44bb-b073-711317b62f28",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4165
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6e6f0f66-3f58-4661-b213-f58630079bdd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f77403a9-4aff-49ab-a787-da16877972d2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "29aa754a-caa4-40b8-bd76-300335ad58cc",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4224
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ec352b48-9bca-4705-87fd-5ee65850eda9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "096f0a1e-b08a-4a8a-b821-22c09203c043",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0f129b8d-3084-47ae-8540-c338bcbfed43",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4245
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8a395488-b339-4490-beeb-47ca1ceb4691",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0c12f457-acaa-4e2f-b2f2-10035c8d0fee",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9bea42ce-ea84-46db-98fb-e8eaad8524ca",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4342
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9f4b0c42-6f71-4333-a30b-414ca2d18f08",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bea42ce-ea84-46db-98fb-e8eaad8524ca",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "52f263cf-1de3-4eee-9cc1-fd7dfd37a178",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4346
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1d883136-0e70-4b19-89fa-41867493b52b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5c899621-dc21-489b-9fea-a5356a6c03f0",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "22768b02-9ab5-49ed-bec7-2f164322dccb",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4361
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5be70280-fc65-4c0c-9e2d-5bab68a4a522",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "21cbc070-ee70-4259-b13b-1fd1d1cb3d4d",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d2c0efb6-2131-4069-81e3-d992fed4d641",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4365
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0cbba20a-ff5b-4e44-a0a7-b30321b7f33e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "22768b02-9ab5-49ed-bec7-2f164322dccb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "962a77dd-59ca-4a94-b836-98dcfb3999a1",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4366
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fe46461e-5a2e-4c4c-915b-28ed5fc1ee50",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "962a77dd-59ca-4a94-b836-98dcfb3999a1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4368
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ca7fbfa4-b5a2-4b9a-8890-6d7d7605bdb9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "965cb926-62bd-46a2-835a-81a64d95a348",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2b544091-1109-4b91-aad5-da149c8eaef4",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4377
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1a5818b5-b138-420d-830f-a759ce2376af",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2b544091-1109-4b91-aad5-da149c8eaef4",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "12c26ac6-6cbb-48b4-94e5-64f5bbe2ec0f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4379
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5fbff3d0-742b-413d-ade4-17f1a0f75a45",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c21784cb-4ec9-46e9-8578-3607eeabe374",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ccd4b634-8c4f-4abf-9e8a-c558a1d4a092",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4383
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "12ab97fa-a529-42cb-a24f-c4cb1bb898a3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ccd4b634-8c4f-4abf-9e8a-c558a1d4a092",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a8ca6d3c-542e-42db-8343-ce65abb5e872",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4387
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d9f08e90-acf1-4a4f-bf84-1c673867bf92",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a8ca6d3c-542e-42db-8343-ce65abb5e872",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b50e51d2-fd7d-453b-8636-1b2241fab258",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4389
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "86975147-8d02-43b5-aa5b-8128554cd6ff",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2a42c6f8-d9cc-4e36-9825-2fa2316a6b2a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4392
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d27afc98-de62-4bab-a857-d8c7438db605",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "81ab70bf-839c-4370-adc8-5d890d694f7a",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4bc93f03-3d23-468c-aeba-4cf318b93ea6",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4398
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "72e7ab1e-4faf-4c9a-8a46-89a24a2ec339",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f77266f6-1f75-47ed-8771-96ba05e15297",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4402
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "79d5dcac-03b5-435f-98a2-4d51d22b40e2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c430c5f7-b1f0-4b57-9c8f-4143df606db0",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "208f28d2-e4c2-40a0-bd13-5355a0eec2d1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4406
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1a9898ab-65e6-4525-9d97-6e941b96df9d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "208f28d2-e4c2-40a0-bd13-5355a0eec2d1",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "36e6ca67-b3a8-4190-b053-890144c34122",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4408
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "be4e5bf0-8dcb-4c15-ab34-6be808f193ec",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3dab29a3-3a31-4e4b-a840-a4507e7ff2e8",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8c457e4a-bbc9-4940-8ee5-aed8ca147fca",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4416
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d6883aba-3898-4097-ae03-c905a5a9c34e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "07d490af-5d13-4469-9085-2efab3b4c93b",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a0deae7b-731f-4955-a361-5c74c1e00349",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4421
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7d3a395d-383e-4627-b428-ed919f3a0eae",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c8fa3c9e-8bc1-418f-ad2d-11b4ab0eee34",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6d8df4a0-dd31-4316-a8d7-3ff9dbf1d96b",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4485
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 39
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_39(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_39() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_28:condition_2:IP_Reputation_on_VT_v3:action_result.parameter.ip\", \"==\", \"filtered-data:filter_28:condition_2:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_39:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Benign_Tag_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "IP Reputation on VT v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4bc93f03-3d23-468c-aeba-4cf318b93ea6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1591,
                        "line_start": 1573,
                        "name": "filter",
                        "notes": "",
                        "number": 39,
                        "order": 71,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_28:condition_2:IP_Reputation_on_VT_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_2:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 280,
                            "y": 1000
                        },
                        "previous_function": "",
                        "previous_name": "filter_39",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4570
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1adf35b8-4607-4b25-84a4-69b54baba17f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8c508d4-082b-4fe9-802e-c69705042c79",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f77403a9-4aff-49ab-a787-da16877972d2",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4577
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_IP() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_IP\", separator=\", \")\n\n    IP_Reputation_on_VT_v3(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format IP",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "31471b44-3d32-4901-93ac-0b1cefa7bb30",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 160,
                        "line_start": 142,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 20,
                        "order": 7,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -460,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "Format_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 4583
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fd8919bf-edc9-4518-93a1-3b84daa139e3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d2c0efb6-2131-4069-81e3-d992fed4d641",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8f00c64d-5eda-45b2-9795-49047cb1dd51",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4609
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "65e0ac75-69a3-4260-8d6e-7bb67200f4f8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8f00c64d-5eda-45b2-9795-49047cb1dd51",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4619
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_68(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_68() called')\n\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_43:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value'])\n\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    note_title = \"Benign Domain IoC -- Umbrella and VT\"\n    note_content = filtered_results_item_1_0\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "filtered-data:filter_43:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Benign Domain IoC -- Umbrella and VT",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Benign Tag Domain",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6d8df4a0-dd31-4316-a8d7-3ff9dbf1d96b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1451,
                        "line_start": 1437,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 68,
                        "order": 63,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1020,
                            "y": 1620
                        },
                        "previous_function": "",
                        "previous_name": "add_note_68",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 4620
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4758a7af-f8b7-4340-b35b-f9150285f77b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6d8df4a0-dd31-4316-a8d7-3ff9dbf1d96b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4621
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "74d3498e-5499-42bd-91ff-de1075cd860b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4f27bcb6-5ad2-4ab3-866c-c52080fb6049",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9b9556c7-8456-4fef-b41e-2653f1c1ca58",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4699
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "56b5e4fb-4700-4d72-b8ea-1179495e2165",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4f27bcb6-5ad2-4ab3-866c-c52080fb6049",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "559a7f24-4f3a-4fac-aed3-dcaca1b67ffc",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4700
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c5cef89d-df6d-4b05-acee-18bb229ed28d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4f27bcb6-5ad2-4ab3-866c-c52080fb6049",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f6e45373-3585-4517-8ad8-11d69e0723e9",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4701
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 25
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Filter_IOC_File_Hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_IOC_File_Hash() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Fetch_Active_Threat_Feed:action_result.data.*.type\", \"==\", \"md5\"],\n        ],\n        name=\"Filter_IOC_File_Hash:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_File_Hash(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter IOC File Hash",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "289a33c6-eabb-44d3-b77c-6075151284d7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 386,
                        "line_end": 383,
                        "line_start": 365,
                        "name": "filter",
                        "notes": "",
                        "number": 25,
                        "order": 17,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Fetch_Active_Threat_Feed:action_result.data.*.type",
                                        "value": "md5"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -660,
                            "y": 2260
                        },
                        "previous_function": "",
                        "previous_name": "Filter_IOC_File_Hash",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4707
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 17
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Filter_IOC_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_IOC_IP() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Fetch_Active_Threat_Feed:action_result.data.*.type\", \"==\", \"ip\"],\n        ],\n        name=\"Filter_IOC_IP:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter IOC IP",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f6e45373-3585-4517-8ad8-11d69e0723e9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 319,
                        "line_end": 251,
                        "line_start": 233,
                        "name": "filter",
                        "notes": "",
                        "number": 17,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Fetch_Active_Threat_Feed:action_result.data.*.type",
                                        "value": "ip"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -660,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "Filter_IOC_IP",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4709
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 18
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Filter_IOC_Domain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_IOC_Domain() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Fetch_Active_Threat_Feed:action_result.data.*.type\", \"==\", \"domain\"],\n        ],\n        name=\"Filter_IOC_Domain:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_Domain(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter IOC Domain",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9b9556c7-8456-4fef-b41e-2653f1c1ca58",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 269,
                        "line_start": 251,
                        "name": "filter",
                        "notes": "",
                        "number": 18,
                        "order": 13,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Fetch_Active_Threat_Feed:action_result.data.*.type",
                                        "value": "domain"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -660,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Filter_IOC_Domain",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4710
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format VT Failure"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_VT_Failure(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_VT_Failure() called')\n    \n    template = \"\"\"IoC File Hash VirusTotal Failure\n%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_VT_Failure\", separator=\", \")\n\n    add_note_53(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "File Reputation on VT_V",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format VT Failure",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6a806777-a88e-41fb-b58a-4339cb8c2ecf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1355,
                        "line_end": 1212,
                        "line_start": 1193,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 54,
                        "order": 51,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 220,
                            "y": 2520
                        },
                        "previous_function": "",
                        "previous_name": "Format_VT_Failure",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "IoC File Hash VirusTotal Failure\n%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 4734
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0a2acc27-620e-443b-aa4a-80ff24bec160",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3493dec0-f497-4f50-baca-ba28e4eba335",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9bb6bbeb-d190-4417-b3e4-7a7c0564590e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4744
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f6efc8b7-2505-4f85-833f-9879b65dfb71",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bb6bbeb-d190-4417-b3e4-7a7c0564590e",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fb01e996-a55a-4f88-8512-16546f764286",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4749
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6e739299-2c30-4696-beb2-a20997aa6d6a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bb6bbeb-d190-4417-b3e4-7a7c0564590e",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6a806777-a88e-41fb-b58a-4339cb8c2ecf",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4751
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format Hash Containme..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_Hash_Containment_Query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_Hash_Containment_Query() called')\n    \n    template = \"\"\"%%\nsummariesonly=t count as evt_count from datamodel=Intrusion_Detection where Intrusion_Detection.sourcetype=\\\"fortinet:sandbox:syslog\\\" AND Intrusion_Detection.file_hash={0} AND Intrusion_Detection.action=\\\"blocked\\\" AND Intrusion_Detection.action=\\\"block\\\" AND Intrusion_Detection.action=\\\"denied\\\" earliest=-7d@d latest=now\n| fields evt_count\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_Hash_Containment_Query\", separator=\", \")\n\n    Run_Hash_Containment_Query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "File Reputation on VT_V",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format Hash Containment Query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fb01e996-a55a-4f88-8512-16546f764286",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 481,
                        "line_end": 469,
                        "line_start": 450,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 34,
                        "order": 21,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 2700
                        },
                        "previous_function": "",
                        "previous_name": "Format_Hash_Containment_Query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nsummariesonly=t count as evt_count from datamodel=Intrusion_Detection where Intrusion_Detection.sourcetype=\"fortinet:sandbox:syslog\" AND Intrusion_Detection.file_hash={0} AND Intrusion_Detection.action=\"blocked\" AND Intrusion_Detection.action=\"block\" AND Intrusion_Detection.action=\"denied\" earliest=-7d@d latest=now\n| fields evt_count\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 4753
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 44
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_44(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_44() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"File_Reputation_on_VT_V:action_result.summary.malicious\", \">\", 2],\n            [\"File_Reputation_on_VT_V:action_result.status\", \"==\", \"success\"],\n        ],\n        logical_operator='and',\n        name=\"filter_44:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_Hash_Containment_Query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        join_Email_Content(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"File_Reputation_on_VT_V:action_result.summary.malicious\", \"<=\", 2],\n            [\"File_Reputation_on_VT_V:action_result.status\", \"==\", \"success\"],\n        ],\n        logical_operator='and',\n        name=\"filter_44:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        filter_45(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    # collect filtered artifact ids for 'if' condition 3\n    matched_artifacts_3, matched_results_3 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"File_Reputation_on_VT_V:action_result.status\", \"==\", \"failed\"],\n        ],\n        name=\"filter_44:condition_3\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_3 or matched_results_3:\n        Format_VT_Failure(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_3, filtered_results=matched_results_3)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "File Reputation on VT_V",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9bb6bbeb-d190-4417-b3e4-7a7c0564590e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1790,
                        "line_start": 1741,
                        "name": "filter",
                        "notes": "",
                        "number": 44,
                        "order": 79,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "File_Reputation_on_VT_V:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "File_Reputation_on_VT_V:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "<=",
                                        "data_type": "",
                                        "param": "File_Reputation_on_VT_V:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "File_Reputation_on_VT_V:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "File_Reputation_on_VT_V:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 40,
                            "y": 2660
                        },
                        "previous_function": "",
                        "previous_name": "filter_44",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4759
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4e9b4dd0-04e8-49a4-9969-5131c6c1a488",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bb6bbeb-d190-4417-b3e4-7a7c0564590e",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4e3a94e9-7f03-406b-b016-541b5ecf6020",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4764
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 45
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_45(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_45() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_44:condition_2:File_Reputation_on_VT_V:action_result.parameter.hash\", \"==\", \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_45:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Benign_and_Investigated_Tag(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "File Reputation on VT_V",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4e3a94e9-7f03-406b-b016-541b5ecf6020",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1808,
                        "line_start": 1790,
                        "name": "filter",
                        "notes": "",
                        "number": 45,
                        "order": 80,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_44:condition_2:File_Reputation_on_VT_V:action_result.parameter.hash",
                                        "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 120,
                            "y": 2840
                        },
                        "previous_function": "",
                        "previous_name": "filter_45",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4769
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c27e6325-dcd9-4dcd-978c-3a202d621bfb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4e3a94e9-7f03-406b-b016-541b5ecf6020",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b071b810-4781-462b-98cd-8134e897e948",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4770
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_45:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "green"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_45:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomBenign",
                                    "tlp": "green"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Benign and Investig..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Benign_and_Investigated_Tag(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Benign_and_Investigated_Tag() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Benign_and_Investigated_Tag' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_45:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_45:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Benign_and_Investigated_Tag' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"green\",\n                'tags': \"PhantomInvestigated,PhantomBenign\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=Form_Email_File_Hash, name=\"Add_Benign_and_Investigated_Tag\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "File Reputation on VT_V",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Benign and Investigated Tag",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b071b810-4781-462b-98cd-8134e897e948",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1124,
                        "line_end": 1042,
                        "line_start": 1016,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 17,
                        "order": 43,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 2840
                        },
                        "previous_function": "",
                        "previous_name": "Add_Benign_and_Investigated_Tag",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4771
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "860445e1-37c8-4666-87f1-bed49d6af9be",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "434f32bc-4dac-4b59-9953-6deb13c0b818",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "801643fe-6c0e-47e4-9dbd-03c9798bb96c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4773
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 46
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_46(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_46() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash\", \"==\", \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_46:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Malicious_and_Contained_Tag_Hash(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run Hash Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "801643fe-6c0e-47e4-9dbd-03c9798bb96c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1826,
                        "line_start": 1808,
                        "name": "filter",
                        "notes": "",
                        "number": 46,
                        "order": 81,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash",
                                        "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1160,
                            "y": 2520
                        },
                        "previous_function": "",
                        "previous_name": "filter_46",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4776
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "500e0f13-1303-4d52-bcbe-6340c012e5e8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "801643fe-6c0e-47e4-9dbd-03c9798bb96c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d47d9855-407b-4f17-ba0f-eedc537ecea0",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4777
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6842089c-c64d-47a4-b19b-3e85ba285e10",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "434f32bc-4dac-4b59-9953-6deb13c0b818",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "351c2aa7-7ef4-47e4-b46e-b37aaf1db340",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4778
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 47
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_47(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_47() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash\", \"==\", \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_47:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Investigated_and_Malicious_Tags_Hash(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run Hash Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "351c2aa7-7ef4-47e4-b46e-b37aaf1db340",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1844,
                        "line_start": 1826,
                        "name": "filter",
                        "notes": "",
                        "number": 47,
                        "order": 82,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash",
                                        "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1160,
                            "y": 2680
                        },
                        "previous_function": "",
                        "previous_name": "filter_47",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4779
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "741554ba-0e61-488c-b4e2-0d7c8e79e20a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "351c2aa7-7ef4-47e4-b46e-b37aaf1db340",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca1b52d0-5d1d-41ea-81c1-e595520518f9",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4780
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 21
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_21(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_21() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Run_Hash_Containment_Query:action_result.data.*.evt_count\", \">\", 0],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_46(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    filter_47(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run Hash Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "434f32bc-4dac-4b59-9953-6deb13c0b818",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 996,
                        "line_start": 975,
                        "name": "decision",
                        "notes": "",
                        "number": 21,
                        "order": 41,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "Run_Hash_Containment_Query:action_result.data.*.evt_count",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 920,
                            "y": 2520
                        },
                        "previous_function": "",
                        "previous_name": "decision_21",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 4783
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0772a0bf-e7c6-4a1a-b82d-119b9773674f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "965cb926-62bd-46a2-835a-81a64d95a348",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2b544091-1109-4b91-aad5-da149c8eaef4",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4791
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "60228f32-fffd-4756-9a70-3caf22886731",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9b9556c7-8456-4fef-b41e-2653f1c1ca58",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d8c508d4-082b-4fe9-802e-c69705042c79",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4796
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 34
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_34(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_34() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip\", \"==\", \"filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_34:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Malicious_and_Contained_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run IP Query for VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9bea42ce-ea84-46db-98fb-e8eaad8524ca",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1487,
                        "line_start": 1469,
                        "name": "filter",
                        "notes": "",
                        "number": 34,
                        "order": 65,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip",
                                        "value": "filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1020,
                            "y": 920
                        },
                        "previous_function": "",
                        "previous_name": "filter_34",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4811
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Format_Domain:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_Domain:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.BitDefender",
                                        "data_type": "string",
                                        "example_values": [
                                            "searchengines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Comodo Valkyrie Verdict",
                                        "data_type": "string",
                                        "example_values": [
                                            "mobile communications"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Dr.Web",
                                        "data_type": "string",
                                        "example_values": [
                                            "social networks"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Forcepoint ThreatSeeker",
                                        "data_type": "string",
                                        "example_values": [
                                            "search engines and portals"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Sophos",
                                        "data_type": "string",
                                        "example_values": [
                                            "social networks"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.alphaMountain.ai",
                                        "data_type": "string",
                                        "example_values": [
                                            "Social Networking"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.sophos",
                                        "data_type": "string",
                                        "example_values": [
                                            "search engines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.creation_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            874296000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "27d40d40d29d40d1dc42d43d00041d4689ee210389f4f6b4b5b1b93f92252d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            90
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.expire",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1800
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.flag",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.minimum",
                                        "data_type": "numeric",
                                        "example_values": [
                                            60
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.priority",
                                        "data_type": "numeric",
                                        "example_values": [
                                            40
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.refresh",
                                        "data_type": "numeric",
                                        "example_values": [
                                            900
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.retry",
                                        "data_type": "numeric",
                                        "example_values": [
                                            900
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.rname",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns-admin.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.serial",
                                        "data_type": "numeric",
                                        "example_values": [
                                            357917103
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.tag",
                                        "data_type": "string",
                                        "example_values": [
                                            "issue"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.ttl",
                                        "data_type": "numeric",
                                        "example_values": [
                                            78
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "MX"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "alt3.aspmx.l.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613638555
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "811fa6e0af210a512fa773cf16fd62ecae6fdacab57fb71626791b9ad5bfb19841435e7480dba67b1fd17828204f05905379bccc98a7f39a037a5b4eb43f3bb54c51df02137b13abffc343b500319819854920af065afb70a3857657909b0d006de9b7aa2197fe94c2ccde7df14760dd8c5f87d5f89c3b1b835c81f06b727d5ea21fc04c0126ef1377cceb935ccedc969b6b503e5e3c783f0fb13f7dd465d67b807f9d268082449813eb0700e7bd472b238f8c551c07b3e130b88b7fb96799e6d9c1ac8b632603840eeb429e271856a94cd62f1d1bdfeda4f02ae0df7b1d0b80aceab4b73d137f4b4bec851555213fc540dc74defb81761304e3339062d65a60"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef0076007d3ef2f88fff88556824c2c0ca9e5289792bc50e78097f2e"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "98d1f86e10ebcf9bec609f18901ba0eb7d09fd2b"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/gsr2/GTS1O1.crt"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1o1core"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.certificate_policies",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.3.6.1.4.1.11129.2.5.3"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.crl_distribution_points",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://crl.pki.goog/GTS1O1core.crl"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.extended_key_usage",
                                        "data_type": "string",
                                        "example_values": [
                                            "serverAuth"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.key_usage",
                                        "data_type": "string",
                                        "example_values": [
                                            "ff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_alternative_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "yt.be"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "67bf0513cc1c9c4765c43f3fedd687cf88bcd93d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.C",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "GTS CA 1O1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.O",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Trust Services"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.OU",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "EC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.ec.oid",
                                        "data_type": "string",
                                        "example_values": [
                                            "secp256r1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.ec.pub",
                                        "data_type": "string",
                                        "example_values": [
                                            "0453d3053c10d8cc8d06a01c02171e8c2d91b355cc188112943a217edc2fe60e3592f329404573e124c077917dcf319f14a6a2c3e433ee695d60a7e9ba3883aa5b"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "c4ea98ea7e5e1f430200000000870182"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2441
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.C",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "*.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.L",
                                        "data_type": "string",
                                        "example_values": [
                                            "Mountain View"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.O",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test LLC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.ST",
                                        "data_type": "string",
                                        "example_values": [
                                            "California"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "c25b1dc8be5f679087ecd28fb5eae7b3985cf604"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "a29f9d0d85bd02b3150267ac5a820e4aadc9becc7b5884530a549e6d98dac4a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-04-13 07:57:08"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-01-19 07:57:09"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613638555
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613640948
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_update_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1568043544
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Alexa.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Alexa.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576161
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Cisco Umbrella.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Cisco Umbrella.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613489762
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Majestic.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Majestic.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576163
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Quantcast.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Quantcast.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1585755370
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Statvoo.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Statvoo.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576162
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.registrar",
                                        "data_type": "string",
                                        "example_values": [
                                            "MarkMonitor Inc."
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            256
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            104
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "Creation Date: 1997-09-15T04:00:00Z\nDNSSEC: unsigned\nDomain Name: TEST.COM\nDomain Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\nDomain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\nDomain Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\nDomain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited\nDomain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited\nDomain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited\nName Server: NS1.TEST.COM\nName Server: NS2.TEST.COM\nName Server: NS3.TEST.COM\nName Server: NS4.TEST.COM\nRegistrar Abuse Contact Email: abusecomplaints@markmonitor.com\nRegistrar Abuse Contact Phone: +1.2083895740\nRegistrar IANA ID: 292\nRegistrar URL: http://www.markmonitor.com\nRegistrar WHOIS Server: whois.markmonitor.com\nRegistrar: MarkMonitor Inc.\nRegistry Domain ID: 2138514_DOMAIN_COM-VRSN\nRegistry Expiry Date: 2028-09-14T04:00:00Z\nUpdated Date: 2019-09-09T15:39:04Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612787278
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/domains/test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            90
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 90, Malicious: 0, Suspicious: 0, Undetected: 8"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Domain Reputation on V..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Domain_Reputation_on_VT_v3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Domain_Reputation_on_VT_v3() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Domain_Reputation_on_VT_v3' call\n    formatted_data_1 = phantom.get_format_data(name='Format_Domain__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'Domain_Reputation_on_VT_v3' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'domain': formatted_part_1,\n        })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=join_filter_23, name=\"Domain_Reputation_on_VT_v3\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1318,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Domain Reputation on VT v3",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f77403a9-4aff-49ab-a787-da16877972d2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1181,
                        "line_start": 1161,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "",
                        "number": 4,
                        "order": 49,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -160,
                            "y": 1620
                        },
                        "previous_function": "",
                        "previous_name": "Domain_Reputation_on_VT_v3",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4848
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fcd77344-bf9e-4c13-96d4-952235f2ca68",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c9b906a9-b13b-4c50-8ae6-7bc2ff037c46",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "29aa754a-caa4-40b8-bd76-300335ad58cc",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4850
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e77eb0de-4d66-4eff-9715-6aa7fdfd4352",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "29aa754a-caa4-40b8-bd76-300335ad58cc",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ff4f7a82-eeda-4404-b4bb-893c7398fa5d",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4853
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f80a751f-0bbe-45ef-9d77-a0e9a90360bf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ff4f7a82-eeda-4404-b4bb-893c7398fa5d",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "096f0a1e-b08a-4a8a-b821-22c09203c043",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4857
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 23
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_23(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_23() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Domain_Reputation_on_VT_v3:action_result.summary.malicious\", \">\", 2],\n            [\"Domain_Reputation_on_Umbrella:action_result.summary.domain_status\", \"==\", \"MALICIOUS\"],\n        ],\n        logical_operator='or',\n        name=\"filter_23:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        filter_33(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        join_Email_Content(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Domain_Reputation_on_Umbrella:action_result.summary.domain_status\", \"!=\", \"MALICIOUS\"],\n            [\"Domain_Reputation_on_VT_v3:action_result.summary.malicious\", \"<=\", 2],\n        ],\n        logical_operator='and',\n        name=\"filter_23:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        filter_43(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation on VT v3, Domain Reputation on Umbrella",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "29aa754a-caa4-40b8-bd76-300335ad58cc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_filter_23(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_filter_23() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_filter_23_called'):\n        return\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['Domain_Reputation_on_Umbrella']):\n        \n        # save the state that the joined function has now been called\n        phantom.save_run_data(key='join_filter_23_called', value='filter_23')\n        \n        # call connected block \"filter_23\"\n        filter_23(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "Domain_Reputation_on_VT_v3"
                        ],
                        "join_start": 347,
                        "line_end": 365,
                        "line_start": 311,
                        "name": "filter",
                        "notes": "",
                        "number": 23,
                        "order": 16,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "Domain_Reputation_on_VT_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Domain_Reputation_on_Umbrella:action_result.summary.domain_status",
                                        "value": "MALICIOUS"
                                    }
                                ],
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Domain_Reputation_on_Umbrella:action_result.summary.domain_status",
                                        "value": "MALICIOUS"
                                    },
                                    {
                                        "comparison": "<=",
                                        "data_type": "",
                                        "param": "Domain_Reputation_on_VT_v3:action_result.summary.malicious",
                                        "value": "2"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 140,
                            "y": 1520
                        },
                        "previous_function": "",
                        "previous_name": "filter_23",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4861
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 33
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_33(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_33() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_23:condition_1:Domain_Reputation_on_VT_v3:action_result.parameter.domain\", \"==\", \"filtered-data:Filter_IOC_Domain:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_33:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Domain_IoC_Add_Malicious_Tag(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation on VT v3, Domain Reputation on Umbrella",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ff4f7a82-eeda-4404-b4bb-893c7398fa5d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1469,
                        "line_start": 1451,
                        "name": "filter",
                        "notes": "",
                        "number": 33,
                        "order": 64,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_23:condition_1:Domain_Reputation_on_VT_v3:action_result.parameter.domain",
                                        "value": "filtered-data:Filter_IOC_Domain:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 360,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "filter_33",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4862
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "974bc8fe-2c43-4fa5-9c99-3e8cb92087e3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "29aa754a-caa4-40b8-bd76-300335ad58cc",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a10caeb8-8f84-440d-a75b-825334d0a631",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4864
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "292f1a22-f434-46a5-b5e9-e9490a6d9e4c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a10caeb8-8f84-440d-a75b-825334d0a631",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c8fa3c9e-8bc1-418f-ad2d-11b4ab0eee34",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4866
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_43:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "amber"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_43:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomBenign",
                                    "tlp": "amber"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Benign Tag Domain"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Benign_Tag_Domain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Benign_Tag_Domain() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Benign_Tag_Domain' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_43:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_43:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Benign_Tag_Domain' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"amber\",\n                'tags': \"PhantomInvestigated,PhantomBenign\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=add_note_68, name=\"Add_Benign_Tag_Domain\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation on VT v3, Domain Reputation on Umbrella",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Benign Tag Domain",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c8fa3c9e-8bc1-418f-ad2d-11b4ab0eee34",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1914,
                        "line_end": 1729,
                        "line_start": 1703,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 25,
                        "order": 77,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 1620
                        },
                        "previous_function": "",
                        "previous_name": "Add_Benign_Tag_Domain",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4868
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_56(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_56() called')\n\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_33:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value'])\n\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    note_title = \"Umbrella Malicious IoC Domain\"\n    note_content = filtered_results_item_1_0\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "filtered-data:filter_33:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Umbrella Malicious IoC Domain",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Domain IoC Add Malicious Tag",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0f129b8d-3084-47ae-8540-c338bcbfed43",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1274,
                        "line_start": 1260,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 56,
                        "order": 54,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 820,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "add_note_56",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 4870
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "966bbb41-59b7-4473-ab85-9a791eb4e7ee",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f6e45373-3585-4517-8ad8-11d69e0723e9",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "31471b44-3d32-4901-93ac-0b1cefa7bb30",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4872
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b5e05be2-4973-4d97-967c-88940a08f8e0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "559a7f24-4f3a-4fac-aed3-dcaca1b67ffc",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2b18b832-11bf-4218-9be7-5b6fccc5ddb3",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4873
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0d1056ea-33c0-4529-a219-130e08ccc3e6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "289a33c6-eabb-44d3-b77c-6075151284d7",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "037e2256-1517-4dd3-9013-0c9cd0ee25ad",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4874
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'Fetch_Active_Threat_Feed' block\n    Fetch_Active_Threat_Feed(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e7d1249-fc1d-4b42-b2e0-46c87f70f4f9",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 25,
                        "line_start": 17,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1220,
                            "y": 1440
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 4876
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 16
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Filter_IOC_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_IOC_URL() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Fetch_Active_Threat_Feed:action_result.data.*.type\", \"==\", \"url\"],\n        ],\n        name=\"Filter_IOC_URL:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter IOC URL",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "559a7f24-4f3a-4fac-aed3-dcaca1b67ffc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 290,
                        "line_end": 233,
                        "line_start": 215,
                        "name": "filter",
                        "notes": "",
                        "number": 16,
                        "order": 11,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Fetch_Active_Threat_Feed:action_result.data.*.type",
                                        "value": "url"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -660,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "Filter_IOC_URL",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4882
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "24d8d6b0-cdd8-4725-8a89-3540547cd9cb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c430c5f7-b1f0-4b57-9c8f-4143df606db0",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d623b46-c037-4185-b7a6-ce2d0d9b5897",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 4884
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 28
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_28(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_28() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"IP_Reputation_on_VT_v3:action_result.summary.malicious\", \">\", 2],\n            [\"filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\", \"!=\", \"\"],\n        ],\n        logical_operator='and',\n        name=\"filter_28:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_IP_Containment_Query_on_VT(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        join_Email_Content(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"IP_Reputation_on_VT_v3:action_result.summary.malicious\", \"<=\", 2],\n            [\"filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\", \"!=\", \"\"],\n        ],\n        logical_operator='and',\n        name=\"filter_28:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        filter_39(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation on VT v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "81ab70bf-839c-4370-adc8-5d890d694f7a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1260,
                        "line_start": 1224,
                        "name": "filter",
                        "notes": "",
                        "number": 28,
                        "order": 53,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "IP_Reputation_on_VT_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "<=",
                                        "data_type": "",
                                        "param": "IP_Reputation_on_VT_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "filtered-data:Filter_IOC_IP:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 140,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "filter_28",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4889
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format Domain"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_Domain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_Domain() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_Domain:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_Domain\", separator=\", \")\n\n    Domain_Reputation_on_Umbrella(container=container)\n    Domain_Reputation_on_VT_v3(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format Domain",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d8c508d4-082b-4fe9-802e-c69705042c79",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 197,
                        "line_start": 178,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 22,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_Domain:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -460,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Format_Domain",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 4894
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "limit": "45",
                            "offset": "",
                            "order_by": "",
                            "query": "{\"q\":\"status=active AND tags=phantominput AND NOT tags=phantominvestigated\"}"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "limit": "45",
                                    "offset": "",
                                    "order_by": "",
                                    "query": "{\"q\":\"status=active AND tags=phantominput AND NOT tags=phantominvestigated\"}"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.offset",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.order_by",
                                        "data_type": "string",
                                        "example_values": [
                                            "itype",
                                            "value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "094074ec-3acc-4639-8eb9-982eb002a33b"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "67"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_org",
                                        "data_type": "string",
                                        "example_values": [
                                            "Domains By Proxy, LLC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Registration Private"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_email",
                                        "data_type": "string",
                                        "example_values": [
                                            "gfdf.com@domainsbyproxy.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_phone",
                                        "data_type": "string",
                                        "example_values": [
                                            "14806242599"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_address",
                                        "data_type": "string",
                                        "example_values": [
                                            "DomainsByProxy.com|14455 N. Hayden Road, Scottsdale, Arizona, UNITED STATES, 85260"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registration_created",
                                        "data_type": "string",
                                        "example_values": [
                                            "2004-06-18T18:16:16+00:00"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registration_updated",
                                        "data_type": "string",
                                        "example_values": [
                                            "2020-11-13T23:57:39+00:00"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string",
                                        "example_values": [
                                            "11426"
                                        ]
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-03-29T23:31:34.986Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-06-27T23:31:35.004Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            50630233146
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string",
                                        "example_values": [
                                            "actor_ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string",
                                        "example_values": [
                                            "35.293600"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string",
                                        "example_values": [
                                            "-80.735000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "smbd"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string",
                                        "example_values": [
                                            "imported by user 13487 Confirmed as false positive"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            25
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.maltype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "low"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-03-29T23:31:34.986Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test org"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2342
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string",
                                        "example_values": [
                                            "user-0c99mbe.test.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string",
                                        "example_values": [
                                            "/api/v2/intelligence/50630233146/"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_source.us"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric",
                                        "example_values": [
                                            50
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "falsepos"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "tpp"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "smbd"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "p2p"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1736852157
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "24.148.217.110"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.records_returned",
                                        "data_type": "numeric",
                                        "example_values": [
                                            950
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Records returned: 950"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Record limit",
                                        "key": "limit",
                                        "order": 3,
                                        "required": false
                                    },
                                    "offset": {
                                        "data_type": "numeric",
                                        "default": 0,
                                        "description": "Record offset (used with paging, when returning many results)",
                                        "key": "offset",
                                        "order": 2,
                                        "required": false
                                    },
                                    "order_by": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Field by which the query results will be ordered",
                                        "key": "order_by",
                                        "order": 1,
                                        "required": false
                                    },
                                    "query": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Search string in JSON format using the Anomali filter language (as seen on the advanced search page)",
                                        "key": "query",
                                        "order": 0,
                                        "required": true
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Fetch Active Threat Feed"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Fetch_Active_Threat_Feed(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Fetch_Active_Threat_Feed() called')\n\n    # collect data for 'Fetch_Active_Threat_Feed' call\n\n    parameters = []\n    \n    # build parameters list for 'Fetch_Active_Threat_Feed' call\n    parameters.append({\n        'limit': 45,\n        'query': \"{\\\"q\\\":\\\"status=active AND tags=phantominput AND NOT tags=phantominvestigated\\\"}\",\n        'offset': \"\",\n        'order_by': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['threatstream hybrid vm'], callback=Fetch_Active_Threat_Feed_callback, name=\"Fetch_Active_Threat_Feed\")\n\n    return",
                        "callback_code": "def Fetch_Active_Threat_Feed_callback(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('Fetch_Active_Threat_Feed_callback() called')\n    \n    Filter_IOC_Domain(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_IOC_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_IOC_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_IOC_File_Hash(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_start": 90,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Fetch Active Threat Feed",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4f27bcb6-5ad2-4ab3-866c-c52080fb6049",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 100,
                        "line_start": 71,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 2,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1080,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Fetch_Active_Threat_Feed",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4896
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_53(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_53() called')\n\n    formatted_data_1 = phantom.get_format_data(name='Format_VT_Failure')\n\n    note_title = \"Failure occurred on VirusTotal\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Format_VT_Failure:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Failure occurred on VirusTotal",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "File Reputation on VT_V",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1159ca6f-9277-4250-87de-e9553c4ae383",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1193,
                        "line_start": 1181,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 53,
                        "order": 50,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 2520
                        },
                        "previous_function": "",
                        "previous_name": "add_note_53",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 4909
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_38:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_38:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Malicious and Conta..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Malicious_and_Contained_Tags_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Malicious_and_Contained_Tags_URL() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Malicious_and_Contained_Tags_URL' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_38:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_38:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Malicious_and_Contained_Tags_URL' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomMalicious,PhantomContained\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=add_note_71, name=\"Add_Malicious_and_Contained_Tags_URL\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Run URL Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Malicious and Contained Tags URL",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a8ca6d3c-542e-42db-8343-ce65abb5e872",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 705,
                        "line_end": 409,
                        "line_start": 383,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 10,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1500,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "Add_Malicious_and_Contained_Tags_URL",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4922
                    },
                    {
                        "action": "file reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "hash": "Format_File_Hash:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "file reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "hash": "Format_File_Hash:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Hash",
                                        "column_order": 0,
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string",
                                        "example_values": [
                                            "e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.authentihash",
                                        "data_type": "string",
                                        "example_values": [
                                            "ad56160b465f7bd1e7568640397f01fc4f8819ce6f0c1415690ecee646464cec"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.creation_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1410950077
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.first_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612961082
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613635130
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "undetected"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CMC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_update",
                                        "data_type": "string",
                                        "example_values": [
                                            "20210218"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_version",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.10.2019.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.confirmed-timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.failure",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.type-unsupported",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            59
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613635210
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613635130
                                        ]
                                    },
                                    {
                                        "column_name": "File Description",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.attributes.magic",
                                        "data_type": "string",
                                        "example_values": [
                                            "a python2.7\\015script text executable"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.attributes.md5",
                                        "data_type": "string",
                                        "example_values": [
                                            "2e65153f2c49c91a0206ee7a8c00e659"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.meaningful_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "update_cr.py"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.names",
                                        "data_type": "string",
                                        "example_values": [
                                            "update_cr.py"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.entry_point",
                                        "data_type": "numeric",
                                        "example_values": [
                                            14768
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.imphash",
                                        "data_type": "string",
                                        "example_values": [
                                            "d7584447a5c5ca9b4a55946317137951"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.import_list.*.library_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMDLG32.dll"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.machine_type",
                                        "data_type": "numeric",
                                        "example_values": [
                                            332
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.chi2",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8137.34814453125
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.entropy",
                                        "data_type": "numeric",
                                        "example_values": [
                                            5.789552211761475
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.filetype",
                                        "data_type": "string",
                                        "example_values": [
                                            "Data"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.lang",
                                        "data_type": "string",
                                        "example_values": [
                                            "ENGLISH US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "c37bc8f6dbf81e8d88978836b23ee932ade6652ba798989bf20697afffd6113e"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "RT_BITMAP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_langs.ENGLISH US",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_langs.RUSSIAN",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_BITMAP",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_DIALOG",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_MANIFEST",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_MENU",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_VERSION",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.rich_pe_header_hash",
                                        "data_type": "string",
                                        "example_values": [
                                            "fa4dbca9180170710b3c245464efa483"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.chi2",
                                        "data_type": "numeric",
                                        "example_values": [
                                            292981.44
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.entropy",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6.75
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.flags",
                                        "data_type": "string",
                                        "example_values": [
                                            "rx"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.md5",
                                        "data_type": "string",
                                        "example_values": [
                                            "a13f88c3e0636712e10326c07d56b645"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            ".text"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.raw_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            54784
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.virtual_address",
                                        "data_type": "numeric",
                                        "example_values": [
                                            4096
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.virtual_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            54434
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1410950077
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_category.*.count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            30
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_category.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "trojan"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_name.*.count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            13
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_name.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "zbot"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.suggested_threat_label",
                                        "data_type": "string",
                                        "example_values": [
                                            "trojan.zbot/foreign"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.sandbox_verdicts.Tencent HABO.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.sha1",
                                        "data_type": "string",
                                        "example_values": [
                                            "6802169a19142292710254cde97df84e46dfe33a"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.signature_info.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "column_name": "Size",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.attributes.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6285
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.ssdeep",
                                        "data_type": "string",
                                        "example_values": [
                                            "192:MPv2vv/ybXAhgPpyN3ipdw0fRAdygi6OLxgUHzYu7ThPBLkv:pq7Mgg0/NdMu/1BLkv"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "python"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.times_submitted",
                                        "data_type": "numeric",
                                        "example_values": [
                                            13
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.tlsh",
                                        "data_type": "string",
                                        "example_values": [
                                            "T1F7D10E05AC5E941C47329D1EDD16FD1BEB0122B724296327B46CA2997FB0468C3E14FC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trid.*.file_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Unix-like shebang (var.1) (gen)"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trid.*.probability",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.type_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Python"
                                        ]
                                    },
                                    {
                                        "column_name": "File Extension",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.attributes.type_extension",
                                        "data_type": "string",
                                        "example_values": [
                                            "py"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.type_tag",
                                        "data_type": "string",
                                        "example_values": [
                                            "python"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.unique_sources",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.vhash",
                                        "data_type": "string",
                                        "example_values": [
                                            "025056657d755510804011z9005b9z25z12z3afz"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/files/e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "file"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            59
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 0, Malicious: 0, Suspicious: 0, Undetected: 59"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "hash": {
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "File hash to query",
                                        "key": "hash",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "File Reputation on VT_V"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def File_Reputation_on_VT_V(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('File_Reputation_on_VT_V() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'File_Reputation_on_VT_V' call\n    formatted_data_1 = phantom.get_format_data(name='Format_File_Hash__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'File_Reputation_on_VT_V' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'hash': formatted_part_1,\n        })\n\n    phantom.act(action=\"file reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=filter_44, name=\"File_Reputation_on_VT_V\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1090,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "File Reputation on VT_V",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3493dec0-f497-4f50-baca-ba28e4eba335",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1016,
                        "line_start": 996,
                        "message": "Configuring now",
                        "name": "file reputation",
                        "notes": "",
                        "number": 4,
                        "order": 42,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -220,
                            "y": 2260
                        },
                        "previous_function": "",
                        "previous_name": "File_Reputation_on_VT_V",
                        "required_params": {
                            "hash": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4934
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format File Hash"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_File_Hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_File_Hash() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_File_Hash\", separator=\", \")\n\n    File_Reputation_on_VT_V(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format File Hash",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "037e2256-1517-4dd3-9013-0c9cd0ee25ad",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 215,
                        "line_start": 197,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 23,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -480,
                            "y": 2260
                        },
                        "previous_function": "",
                        "previous_name": "Format_File_Hash",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 4935
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4f5e4a62-af0c-4f52-84c9-6babc810f9ab",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4f27bcb6-5ad2-4ab3-866c-c52080fb6049",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "289a33c6-eabb-44d3-b77c-6075151284d7",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4936
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_IP:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_IP:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.as_owner",
                                        "data_type": "string",
                                        "example_values": [
                                            "Orange"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.asn",
                                        "data_type": "numeric",
                                        "example_values": [
                                            3215
                                        ]
                                    },
                                    {
                                        "column_name": "Continent",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.attributes.continent",
                                        "data_type": "string",
                                        "example_values": [
                                            "EU"
                                        ]
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.attributes.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "FR"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "A domain seen in a CnC panel URL for the Oski malware resolved to this IP address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "benkow.cc"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1622592000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "CnC Panel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "29d3fd00029d29d00042d43d00041d598ac0c1012db967bb1ad0ff2491b3ae"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "a60f993e5b931eed2a66b7aef3c70912cd032acbd2c8791021a3c8cb90b38c579d5fa02d04e4e897b1762981b455d77cea92c56bcf902451a76148582a1e80acc1aeb2a0d72f7e8db8739f874e83a48553311eb3cfe48a0d065a309cedf35930ae3e2cb0d4dca8dba64dc7b5f707debac4f28ce313db8623e235790002b37a8dbc63c99276335c4a59faf1957d5384fc318c56b159e51213c21699e328821f64efc433d74372962d6d160f92b5f1dbbc4e8e11c74ce673e8c52f6270c40c1192cf7bf2bbf44660818b8999085388ac8949332f178b294d409334e8d70ca051a5a7ed53df82e58a46ee2c07afa08f0e0f9ea87311f1a8e79ad3406292e811a5c6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef007600eec095ee8d72640f92e3c3b91bc712a3696a097b4b6a1a14"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "8a747faf85cdee95cd3d9cd0e24614f371351d27"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/repo/certs/gts1c3.der"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1c3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "a8de321f3772284cf53c30f681f14bf6ed035cd9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.exponent",
                                        "data_type": "string",
                                        "example_values": [
                                            "010001"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.key_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2048
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.modulus",
                                        "data_type": "string",
                                        "example_values": [
                                            "00befdaf74bea72e3cb68a2a6bb74521f2ee951338a5d9f6a738f98996e2d72295009f544112aa918e99b93ab48f073322711b992887a46211dc853c48e2f22372419c8841221f3dad453289c2331d3b4c881c67660ecc5093bf601130a7aef9f54419ee8e64754c3b07125893af7dabf0bb0f7232d0226605620e12a4416fb22d5c9182394941b218009f6fe2d28d170a1042a0aa726eb9b052a84a57597a4b9a556be00c004ba024bd310d9e4faf17482b137f81b35f470ead7d7d9e418a6653799e9d04f9fd1d4b588809c0e2ac0680f406ba8f4358a143e3cacc7fe792ab9655cc73729dbcd3d7362a7ffe6f903942dc3d588c97917930a9b28b8561c9219b"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "25c739f93320b7b0a00000000f2c8e9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1509
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns.google"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "3336113948b043f8f258cceebe9eb7a8dd7d06de"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "5349f6e0344c78df40dfcfc2ecd6f83d01b4bcf1def8c548c87691211d904f05"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-10-04 03:52:55"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-07-12 03:52:56"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1628548284
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "column_name": "Network",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.attributes.network",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.0.0.0/12"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.regional_internet_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "RIPE NCC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "NetRange: 2.0.0.0 - 2.255.255.255\nCIDR: 2.0.0.0/8\nNetName: 2-RIPE\nNetHandle: NET-2-0-0-0-1\nParent: ()\nNetType: Allocated to RIPE NCC\nOriginAS: \nOrganization: RIPE Network Coordination Centre (RIPE)\nRegDate: 2009-09-29\nUpdated: 2009-09-30\nComment: These addresses have been further assigned to users in\nComment: the RIPE NCC region. Contact information can be found in\nComment: the RIPE database at http://www.ripe.net/whois\nRef: https://rdap.arin.net/registry/ip/2.0.0.0\nResourceLink: https://apps.db.ripe.net/search/query.html\nResourceLink: whois.ripe.net\nOrgName: RIPE Network Coordination Centre\nOrgId: RIPE\nAddress: P.O. Box 10096\nCity: Amsterdam\nStateProv: \nPostalCode: 1001EB\nCountry: NL\nRegDate: \nUpdated: 2013-07-29\nRef: https://rdap.arin.net/registry/entity/RIPE\nReferralServer: whois://whois.ripe.net\nResourceLink: https://apps.db.ripe.net/search/query.html\nOrgAbuseHandle: ABUSE3850-ARIN\nOrgAbuseName: Abuse Contact\nOrgAbusePhone: +31205354444 \nOrgAbuseEmail: abuse@ripe.net\nOrgAbuseRef: https://rdap.arin.net/registry/entity/ABUSE3850-ARIN\nOrgTechHandle: RNO29-ARIN\nOrgTechName: RIPE NCC Operations\nOrgTechPhone: +31 20 535 4444 \nOrgTechEmail: hostmaster@ripe.net\nOrgTechRef: https://rdap.arin.net/registry/entity/RNO29-ARIN\ninetnum: 2.3.0.0 - 2.3.7.255\nnetname: IP2000-ADSL-BAS\ndescr: POP CLE\ncountry: FR\nadmin-c: WITR1-RIPE\ntech-c: WITR1-RIPE\nstatus: ASSIGNED PA\nremarks: for hacking, spamming or security problems send mail to\nremarks: abuse@orange.fr\nmnt-by: FT-BRX\ncreated: 2017-07-27T08:58:11Z\nlast-modified: 2017-07-27T08:58:11Z\nsource: RIPE\nrole: Wanadoo France Technical Role\naddress: FRANCE TELECOM/SCR\naddress: 48 rue Camille Desmoulins\naddress: 92791 ISSY LES MOULINEAUX CEDEX 9\naddress: FR\nphone: +33 1 58 88 50 00\nabuse-mailbox: abuse@orange.fr\nadmin-c: BRX1-RIPE\ntech-c: BRX1-RIPE\nnic-hdl: WITR1-RIPE\nmnt-by: FT-BRX\ncreated: 2001-12-04T17:57:08Z\nlast-modified: 2013-07-16T14:09:50Z\nsource: RIPE # Filtered\nroute: 2.3.0.0/16\ndescr: France Telecom Orange\norigin: AS3215\nmnt-by: RAIN-TRANSPAC\nmnt-by: FT-BRX\ncreated: 2012-11-22T09:32:05Z\nlast-modified: 2012-11-22T09:32:05Z\nsource: RIPE\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/ip_addresses/2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip_address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 86, Malicious: 0, Suspicious: 0, Undetected: 11"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation on VT v3"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_on_VT_v3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_on_VT_v3() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'IP_Reputation_on_VT_v3' call\n    formatted_data_1 = phantom.get_format_data(name='Format_IP__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_on_VT_v3' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'ip': formatted_part_1,\n        })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=filter_28, name=\"IP_Reputation_on_VT_v3\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1603,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "IP Reputation on VT v3",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f4a35827-68ff-4d32-bd8d-bbaf0ce41566",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1083,
                        "line_start": 1063,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "",
                        "number": 8,
                        "order": 45,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -160,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_on_VT_v3",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4941
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9e95c744-46c7-4c7e-a981-32694f814310",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "229b46e1-42c5-40fe-b5f2-e5d35ad23192",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8a5f47e7-f9a2-4b3e-9c3d-cf7ddf72b1b8",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4945
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "633e27c5-a844-4b12-81cd-c245dd9ffe84",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c430c5f7-b1f0-4b57-9c8f-4143df606db0",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "229b46e1-42c5-40fe-b5f2-e5d35ad23192",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4954
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1b0d03bb-7399-4f4c-a2fd-7a873c12f3b8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bb6bbeb-d190-4417-b3e4-7a7c0564590e",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "229b46e1-42c5-40fe-b5f2-e5d35ad23192",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4956
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "77cdeccf-ed03-4937-a9ce-b1922f0988e5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "29aa754a-caa4-40b8-bd76-300335ad58cc",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "229b46e1-42c5-40fe-b5f2-e5d35ad23192",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4958
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "61b874ce-303c-410b-bae7-c88761d13a58",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "81ab70bf-839c-4370-adc8-5d890d694f7a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "229b46e1-42c5-40fe-b5f2-e5d35ad23192",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4959
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 43
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_43(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_43() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_23:condition_2:Domain_Reputation_on_VT_v3:action_result.parameter.domain\", \"==\", \"filtered-data:Filter_IOC_Domain:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_43:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Benign_Tag_Domain(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation on VT v3, Domain Reputation on Umbrella",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a10caeb8-8f84-440d-a75b-825334d0a631",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1703,
                        "line_start": 1685,
                        "name": "filter",
                        "notes": "",
                        "number": 43,
                        "order": 76,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_23:condition_2:Domain_Reputation_on_VT_v3:action_result.parameter.domain",
                                        "value": "filtered-data:Filter_IOC_Domain:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 360,
                            "y": 1620
                        },
                        "previous_function": "",
                        "previous_name": "filter_43",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4960
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "423c55c7-b030-423e-9347-0af2015dee4b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "36e6ca67-b3a8-4190-b053-890144c34122",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4962
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f60cfef7-5243-46ad-8077-dd8e70cb0417",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0f129b8d-3084-47ae-8540-c338bcbfed43",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 4963
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Email Content"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Email_Content(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Email_Content() called')\n    \n    template = \"\"\"Malicious IOC URLs:\n%%\n{0}\n%%\n\nMalicious IOC IPs:\n%%\n{1}\n%%\n\nMalicious IOC Domains:\n%%\n{2}\n%%\n\nMalicious IOC Hashs\n%%\n{3}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url\",\n        \"filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip\",\n        \"filtered-data:filter_23:condition_1:Domain_Reputation_on_VT_v3:action_result.parameter.domain\",\n        \"filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Email_Content\", separator=\", \")\n\n    Notify_SoC_Team_via_Email(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3, File Reputation on VT_V, Domain Reputation on VT v3, Domain Reputation on Umbrella, IP Reputation on VT v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Email Content",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "229b46e1-42c5-40fe-b5f2-e5d35ad23192",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_Email_Content(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_Email_Content() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['URL_Reputation_on_VT_v3', 'File_Reputation_on_VT_V', 'Domain_Reputation_on_VT_v3', 'Domain_Reputation_on_Umbrella', 'IP_Reputation_on_VT_v3']):\n        \n        # call connected block \"Email_Content\"\n        Email_Content(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 657,
                        "line_end": 668,
                        "line_start": 620,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 36,
                        "order": 27,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "filtered-data:filter_23:condition_1:Domain_Reputation_on_VT_v3:action_result.parameter.domain"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "filtered-data:filter_44:condition_1:File_Reputation_on_VT_V:action_result.parameter.hash"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -220,
                            "y": 2440
                        },
                        "previous_function": "",
                        "previous_name": "Email_Content",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Malicious IOC URLs:\n%%\n{0}\n%%\n\nMalicious IOC IPs:\n%%\n{1}\n%%\n\nMalicious IOC Domains:\n%%\n{2}\n%%\n\nMalicious IOC Hashs\n%%\n{3}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 4965
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format URL"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_URL() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_URL\", separator=\", \")\n\n    URL_Reputation_on_VT_v3(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format URL",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2b18b832-11bf-4218-9be7-5b6fccc5ddb3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 840,
                        "line_end": 178,
                        "line_start": 160,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 21,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -480,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "Format_URL",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 4968
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 40
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_40(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_40() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_29:condition_2:URL_Reputation_on_VT_v3:action_result.parameter.url\", \"==\", \"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_40:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        URL_Add_Investigated_and_Benign_Tags(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "208f28d2-e4c2-40a0-bd13-5355a0eec2d1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1635,
                        "line_start": 1617,
                        "name": "filter",
                        "notes": "",
                        "number": 40,
                        "order": 73,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_29:condition_2:URL_Reputation_on_VT_v3:action_result.parameter.url",
                                        "value": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 220,
                            "y": 2060
                        },
                        "previous_function": "",
                        "previous_name": "filter_40",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4971
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_47:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_47:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Investigated and Ma..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Investigated_and_Malicious_Tags_Hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Investigated_and_Malicious_Tags_Hash() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Investigated_and_Malicious_Tags_Hash' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_47:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_47:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Investigated_and_Malicious_Tags_Hash' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomMalicious,PhantomNonContained\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=Format_Email_to_SOC, name=\"Add_Investigated_and_Malicious_Tags_Hash\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Run Hash Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Investigated and Malicious Tags Hash",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ca1b52d0-5d1d-41ea-81c1-e595520518f9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 538,
                        "line_start": 512,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 11,
                        "order": 24,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1420,
                            "y": 2680
                        },
                        "previous_function": "",
                        "previous_name": "Add_Investigated_and_Malicious_Tags_Hash",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 4972
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 37
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_37(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_37() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip\", \"==\", \"filtered-data:filter_28:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_37:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Malicious_and_Noncontained_Tag_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2b544091-1109-4b91-aad5-da149c8eaef4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1541,
                        "line_start": 1523,
                        "name": "filter",
                        "notes": "",
                        "number": 37,
                        "order": 68,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": 920
                        },
                        "previous_function": "",
                        "previous_name": "filter_37",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 4998
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_61(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_61() called')\n\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_34:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip'])\n\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    note_title = \"Investigated and Bening IoC IP\"\n    note_content = filtered_results_item_1_0\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "filtered-data:filter_34:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Investigated and Bening IoC IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Malicious and Contained IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ebf2b356-05ac-4cb5-a248-9efc786d7a26",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1340,
                        "line_start": 1326,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 61,
                        "order": 57,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1680,
                            "y": 920
                        },
                        "previous_function": "",
                        "previous_name": "add_note_61",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5009
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_34:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_34:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Malicious and Conta..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Malicious_and_Contained_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Malicious_and_Contained_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Malicious_and_Contained_IP' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_34:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_34:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Malicious_and_Contained_IP' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomMalicious,PhantomContained\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=add_note_61, name=\"Add_Malicious_and_Contained_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Run IP Query for VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Malicious and Contained IP",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "52f263cf-1de3-4eee-9cc1-fd7dfd37a178",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1326,
                        "line_start": 1300,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 22,
                        "order": 56,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1320,
                            "y": 920
                        },
                        "previous_function": "",
                        "previous_name": "Add_Malicious_and_Contained_IP",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5010
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_33:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomMalicious,PhantomInvestigated",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_33:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomMalicious,PhantomInvestigated",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Domain IoC Add Malicio..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Domain_IoC_Add_Malicious_Tag(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Domain_IoC_Add_Malicious_Tag() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Domain_IoC_Add_Malicious_Tag' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_33:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_33:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Domain_IoC_Add_Malicious_Tag' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomMalicious,PhantomInvestigated\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=add_note_56, name=\"Domain_IoC_Add_Malicious_Tag\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1440,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation on VT v3, Domain Reputation on Umbrella",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Domain IoC Add Malicious Tag",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "096f0a1e-b08a-4a8a-b821-22c09203c043",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1631,
                        "line_end": 1300,
                        "line_start": 1274,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 21,
                        "order": 55,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Domain_IoC_Add_Malicious_Tag",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5011
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 19
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_19(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_19() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Run_URL_Containment_Query:action_result.data.*.evt_count\", \">\", 0],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_38(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    join_filter_42(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run URL Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c21784cb-4ec9-46e9-8578-3607eeabe374",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 911,
                        "line_start": 890,
                        "name": "decision",
                        "notes": "",
                        "number": 19,
                        "order": 37,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "Run_URL_Containment_Query:action_result.data.*.evt_count",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 940,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "decision_19",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5018
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Format_Domain:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "Cisco Umbrella Investigate",
                        "appid": "5fc14867-8c8e-4cc2-8198-641df784bf1a",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "whois domain",
                                    "ip reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Cisco Umbrella Investigate",
                                "app_version": "1.0.1",
                                "appid": "5fc14867-8c8e-4cc2-8198-641df784bf1a",
                                "asset_name": "ktb-umbrella-asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_Domain:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 55,
                                "loaded": false,
                                "missing": false,
                                "name": "ktb-umbrella-asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Domain",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "testdomain.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Categories",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "Search Engines",
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.category_info.content_categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Search Engines"
                                        ]
                                    },
                                    {
                                        "column_name": "Security Categories",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.category_info.security_categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.category_info.status",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1,
                                            -1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.indicator",
                                        "data_type": "string",
                                        "example_values": [
                                            "Geo Popularity Score",
                                            "Keyword Score",
                                            "Lexical"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.normalized_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2,
                                            60,
                                            100
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -3.610878170000002,
                                            0.09264255482489717,
                                            0.606
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.relative_links.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            4289
                                        ]
                                    },
                                    {
                                        "column_name": "Risk Score",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.risk_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.asn_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -0.03286849936319416,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.attack",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "DGA Score",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.security_info.dga_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            -15.55033332819711
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.entropy",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1.91829583405449,
                                            2.75
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.fastflux",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.found",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.0001,
                                            0.1429
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity_normalized",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity_normalized.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.0003299100640734098,
                                            0.009745995689748824
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geoscore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            0.002894054671255598
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.handlings.normal",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.ks_test",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            0.2846253137451792
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.pagerank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            60.32995,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.perplexity",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.1878675610437336,
                                            1.122248102917671
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.popularity",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.prefix_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -0.1054320152441063,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.rip_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -3.051340626556875,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.securerank2",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            -0.004050008137296145
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.tld_geodiversity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.tld_geodiversity.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.01008192795884705
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.status_desc",
                                        "data_type": "string",
                                        "example_values": [
                                            "SAFE",
                                            "MALICIOUS"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.attacks",
                                        "data_type": "string",
                                        "example_values": [
                                            "Rig"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.period.begin",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.period.end",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.threatTypes",
                                        "data_type": "string",
                                        "example_values": [
                                            "Exploit Kit"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1428593707849,
                                            1496547887014
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.summary.domain_status",
                                        "data_type": "string",
                                        "example_values": [
                                            "SAFE",
                                            "MALICIOUS"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.risk_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_co_occurances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_relative_links",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_tag_info",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1,
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total co occurances: 0, Domain status: SAFE, Total tag info: 1, Total relative links: 100",
                                            "Total co occurances: 0\nDomain status: MALICIOUS\nTotal tag info: 2\nTotal relative links: 0"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Cisco Umbrella Investigate",
                                "product_vendor": "Cisco",
                                "targets": "55",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Domain Reputation on U...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Domain_Reputation_on_Umbrella(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Domain_Reputation_on_Umbrella() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Domain_Reputation_on_Umbrella' call\n    formatted_data_1 = phantom.get_format_data(name='Format_Domain__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'Domain_Reputation_on_Umbrella' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'domain': formatted_part_1,\n        })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['ktb-umbrella-asset'], callback=join_filter_23, name=\"Domain_Reputation_on_Umbrella\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Domain Reputation on Umbrella",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c9b906a9-b13b-4c50-8ae6-7bc2ff037c46",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 221,
                        "line_end": 45,
                        "line_start": 25,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "",
                        "number": 3,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -160,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Domain_Reputation_on_Umbrella",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5022
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format Email to SOC"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_Email_to_SOC(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_Email_to_SOC() called')\n    \n    template = \"\"\"Below Malicious File Hash are NOT being contained:\n%%\n{0}\n\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_Email_to_SOC\", separator=\", \")\n\n    add_note_66(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Add Investigated and Malicious Tags Hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format Email to SOC",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "51680913-ee30-4d2e-a7d1-acbb40c8daa6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 512,
                        "line_start": 492,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 35,
                        "order": 23,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_File_Hash:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1760,
                            "y": 2680
                        },
                        "previous_function": "",
                        "previous_name": "Format_Email_to_SOC",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Below Malicious File Hash are NOT being contained:\n%%\n{0}\n\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 5026
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_66(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_66() called')\n\n    formatted_data_1 = phantom.get_format_data(name='Format_Email_to_SOC')\n\n    note_title = \"NonContained File Hash IoC\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Format_Email_to_SOC:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "NonContained File Hash IoC",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Investigated and Malicious Tags Hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "824f8686-345a-478d-ad4a-c224c650406f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1437,
                        "line_start": 1425,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 66,
                        "order": 62,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2040,
                            "y": 2680
                        },
                        "previous_function": "",
                        "previous_name": "add_note_66",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5027
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_36:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomNonContained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_36:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomNonContained,PhantomMalicious",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add NonContained Tag IP"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_NonContained_Tag_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_NonContained_Tag_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_NonContained_Tag_IP' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_36:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_36:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_NonContained_Tag_IP' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomNonContained,PhantomMalicious\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=add_note_74, name=\"Add_NonContained_Tag_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1360,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add NonContained Tag IP",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d2c0efb6-2131-4069-81e3-d992fed4d641",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1109,
                        "line_start": 1083,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 18,
                        "order": 46,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3060,
                            "y": 1300
                        },
                        "previous_function": "",
                        "previous_name": "Add_NonContained_Tag_IP",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5037
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_46:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_46:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Malicious and Conta..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Malicious_and_Contained_Tag_Hash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Malicious_and_Contained_Tag_Hash() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Malicious_and_Contained_Tag_Hash' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_46:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_46:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Malicious_and_Contained_Tag_Hash' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomMalicious,PhantomContained\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=Email_Content_Hash, name=\"Add_Malicious_and_Contained_Tag_Hash\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Run Hash Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Malicious and Contained Tag Hash",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d47d9855-407b-4f17-ba0f-eedc537ecea0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 804,
                        "line_start": 778,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 13,
                        "order": 31,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1420,
                            "y": 2520
                        },
                        "previous_function": "",
                        "previous_name": "Add_Malicious_and_Contained_Tag_Hash",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5059
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format IP Containment ..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_IP_Containment_Query_on_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_IP_Containment_Query_on_VT() called')\n    \n    template = \"\"\"%%\nsummariesonly=t count as evt_count from datamodel=Network_Traffic where Network_Traffic.sourcetype=\\\"pan:traffic\\\" AND Network_Traffic.action=\\\"deny\\\" AND ( Network_Traffic.dest_ip=\\\"{0}\\\" OR Network_Traffic.src_ip=\\\"{0}\\\" )\nearliest=-7d@d latest=now\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_IP_Containment_Query_on_VT\", separator=\", \")\n\n    Run_IP_Query_for_VT(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation on VT v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format IP Containment Query on VT",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0d332c56-17ba-4a81-a2fc-77f1637ff5ab",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 388,
                        "line_end": 288,
                        "line_start": 269,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 26,
                        "order": 14,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 300,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "Format_IP_Containment_Query_on_VT",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nsummariesonly=t count as evt_count from datamodel=Network_Traffic where Network_Traffic.sourcetype=\"pan:traffic\" AND Network_Traffic.action=\"deny\" AND ( Network_Traffic.dest_ip=\"{0}\" OR Network_Traffic.src_ip=\"{0}\" )\nearliest=-7d@d latest=now\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 5061
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "evt_count",
                            "parse_only": "False",
                            "query": "Format_IP_Containment_Query_on_VT:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "evt_count",
                                    "parse_only": "False",
                                    "query": "Format_IP_Containment_Query_on_VT:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Run IP Query for VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Run_IP_Query_for_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Run_IP_Query_for_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Run_IP_Query_for_VT' call\n    formatted_data_1 = phantom.get_format_data(name='Format_IP_Containment_Query_on_VT__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'Run_IP_Query_for_VT' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'query': formatted_part_1,\n            'command': \"tstats\",\n            'display': \"evt_count\",\n            'parse_only': False,\n        })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=decision_13, name=\"Run_IP_Query_for_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 445,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "IP Reputation on VT v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Run IP Query for VT",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fffbf7e1-cca8-433a-acac-4f8d9c695ea5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 311,
                        "line_start": 288,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 7,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "Run_IP_Query_for_VT",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5062
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_39:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "green"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_39:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomBenign",
                                    "tlp": "green"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Benign Tag IP"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Benign_Tag_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Benign_Tag_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Benign_Tag_IP' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_39:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_39:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Benign_Tag_IP' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"green\",\n                'tags': \"PhantomInvestigated,PhantomBenign\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], name=\"Add_Benign_Tag_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "IP Reputation on VT v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Benign Tag IP",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f77266f6-1f75-47ed-8771-96ba05e15297",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1617,
                        "line_start": 1591,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 24,
                        "order": 72,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 1000
                        },
                        "previous_function": "",
                        "previous_name": "Add_Benign_Tag_IP",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5063
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "901be737-4d4e-43d8-9660-77844cdbd01e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3a2667f7-181b-4c88-8f96-23275f450857",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "075c721e-2d18-4c66-be7b-36593b5d2021",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5068
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "82ecb9eb-8fca-41f7-b406-62235e515028",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "075c721e-2d18-4c66-be7b-36593b5d2021",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d51666c7-9a59-4b92-8785-980eff3dfb02",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5071
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7ecf54eb-b7e7-4ddc-83fb-64a31b9b88ed",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "075c721e-2d18-4c66-be7b-36593b5d2021",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "21cbc070-ee70-4259-b13b-1fd1d1cb3d4d",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5080
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "78e35a02-4316-4a1a-b4aa-a7d60195b6ea",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d51666c7-9a59-4b92-8785-980eff3dfb02",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5c899621-dc21-489b-9fea-a5356a6c03f0",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5088
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "33537568-2bfa-42f5-82c0-8a5a6d37fcc0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4bc93f03-3d23-468c-aeba-4cf318b93ea6",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f77266f6-1f75-47ed-8771-96ba05e15297",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5091
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_71(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_71() called')\n\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_38:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url'])\n\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    note_title = \"Already contained URL IoC\"\n    note_content = filtered_results_item_1_0\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "filtered-data:filter_38:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Already contained URL IoC",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Malicious and Contained Tags URL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b50e51d2-fd7d-453b-8636-1b2241fab258",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1573,
                        "line_start": 1559,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 71,
                        "order": 70,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1780,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "add_note_71",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5095
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 15
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_15(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_15() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Prompt_Block_IP:action_result.summary.responses.0\", \"==\", \"Yes\"],\n            [\"Prompt_Block_IP:action_result.status\", \"==\", \"success\"],\n        ],\n        logical_operator='and')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Get_total_amount_of_IP_address(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Prompt_Block_IP:action_result.summary.responses.0\", \"==\", \"No\"],\n            [\"Prompt_Block_IP:action_result.status\", \"==\", \"success\"],\n        ],\n        logical_operator='and')\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        filter_37(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 3\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Prompt_Block_IP:action_result.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 3 matched\n    if matched:\n        filter_37(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "965cb926-62bd-46a2-835a-81a64d95a348",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 620,
                        "line_start": 572,
                        "name": "decision",
                        "notes": "",
                        "number": 15,
                        "order": 26,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_Block_IP:action_result.summary.responses.0",
                                        "value": "Yes"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_Block_IP:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_Block_IP:action_result.summary.responses.0",
                                        "value": "No"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_Block_IP:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_Block_IP:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1880,
                            "y": 1160
                        },
                        "previous_function": "",
                        "previous_name": "decision_15",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5099
                    },
                    {
                        "action": "url reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "url": "Format_URL:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "url reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "url": "Format_URL:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "URL",
                                        "column_order": 0,
                                        "contains": [
                                            "url",
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://www.test123.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "searchengines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Dr.Web",
                                        "data_type": "string",
                                        "example_values": [
                                            "e-mail"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.alphaMountain.ai",
                                        "data_type": "string",
                                        "example_values": [
                                            "File Sharing/Storage, Search Engines/Portals"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.first_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399455
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399455
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            78
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_final_url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_content_length",
                                        "data_type": "numeric",
                                        "example_values": [
                                            154896
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_content_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "e84603534b9c77669d1ebc821aed90fb34e31b587a4df32eba708193b25770d9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_cookies.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_headers.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "same-origin-allow-popups; report-to=\"TestUi\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399456
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399455
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.times_submitted",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.ScoreCard Research Beacon.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "7241469"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.ScoreCard Research Beacon.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1627544121
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.ScoreCard Research Beacon.*.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://sb.scorecardresearch.com/p?c1=2&c2=7241469&c7=https%3A%2F%2Fin.yahoo.com%2F&c5=97684142&cv=2.0&cj=1&c14=-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.Yahoo Dot Tags.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1627544121
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.Yahoo Dot Tags.*.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://s.yimg.com/rq/darla/4-6-0/js/g-r-min.js"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "e0583d78eb4bea4078dce1d89e9eaabd7be7b6a8630f88b70a725c607cdce063"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/urls/e0583d78eb4bea4078dce1d89e9eaabd7be7b6a8630f88b70a725c607cdce063"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "url"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            80
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "column_name": "Scan ID",
                                        "column_order": 1,
                                        "contains": [
                                            "virustotal scan id"
                                        ],
                                        "data_path": "action_result.summary.scan_id",
                                        "data_type": "string",
                                        "example_values": [
                                            9
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            9
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Scan id: u-8d63a6cc87718dd52151f0e6fea2ff6fbf12d68a11046ba4ea3258546906c74f-1613644669, Harmless: 74, Malicious: 0, Suspicious: 0, Undetected: 9"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "url": {
                                        "contains": [
                                            "url",
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "URL to query",
                                        "key": "url",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "URL Reputation on VT_v3"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def URL_Reputation_on_VT_v3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('URL_Reputation_on_VT_v3() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'URL_Reputation_on_VT_v3' call\n    formatted_data_1 = phantom.get_format_data(name='Format_URL__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'URL_Reputation_on_VT_v3' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'url': formatted_part_1,\n        })\n\n    phantom.act(action=\"url reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=filter_29, name=\"URL_Reputation_on_VT_v3\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1098,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Fetch Active Threat Feed",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "URL Reputation on VT_v3",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ae76c97c-078d-45ab-94a4-30d1623b5b13",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 890,
                        "line_start": 870,
                        "message": "Configuring now",
                        "name": "url reputation",
                        "notes": "",
                        "number": 2,
                        "order": 36,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -160,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "URL_Reputation_on_VT_v3",
                        "required_params": {
                            "url": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5101
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 29
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_29(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_29() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"URL_Reputation_on_VT_v3:action_result.summary.malicious\", \">\", 2],\n            [\"URL_Reputation_on_VT_v3:action_result.status\", \"==\", \"success\"],\n        ],\n        logical_operator='and',\n        name=\"filter_29:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_URL_Containment_Query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        join_Email_Content(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"URL_Reputation_on_VT_v3:action_result.summary.malicious\", \"<=\", 2],\n            [\"URL_Reputation_on_VT_v3:action_result.status\", \"==\", \"success\"],\n        ],\n        logical_operator='and',\n        name=\"filter_29:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        filter_40(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    # collect filtered artifact ids for 'if' condition 3\n    matched_artifacts_3, matched_results_3 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"URL_Reputation_on_VT_v3:action_result.status\", \"==\", \"failed\"],\n        ],\n        name=\"filter_29:condition_3\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_3 or matched_results_3:\n        add_note_77(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_3, filtered_results=matched_results_3)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c430c5f7-b1f0-4b57-9c8f-4143df606db0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1389,
                        "line_start": 1340,
                        "name": "filter",
                        "notes": "",
                        "number": 29,
                        "order": 58,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "URL_Reputation_on_VT_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "URL_Reputation_on_VT_v3:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "<=",
                                        "data_type": "",
                                        "param": "URL_Reputation_on_VT_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "URL_Reputation_on_VT_v3:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "URL_Reputation_on_VT_v3:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 140,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "filter_29",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 5102
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format URL Containmen..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_URL_Containment_Query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_URL_Containment_Query() called')\n    \n    template = \"\"\"%%\nsummariesonly=t count as evt_count from datamodel=Web where (Web.url=\\\"{0}\\\") AND Web.sourcetype!=\\\"stream:http\\\"  AND Web.action=\\\"blocked\\\" earliest=-2d@d latest=now\n| fields evt_count\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_URL_Containment_Query\", separator=\", \")\n\n    Run_URL_Containment_Query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format URL Containment Query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "06934285-1d61-46a8-8af8-6d1074ba427d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 174,
                        "line_end": 119,
                        "line_start": 100,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 19,
                        "order": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 360,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "Format_URL_Containment_Query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nsummariesonly=t count as evt_count from datamodel=Web where (Web.url=\"{0}\") AND Web.sourcetype!=\"stream:http\"  AND Web.action=\"blocked\" earliest=-2d@d latest=now\n| fields evt_count\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 5103
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_77(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_77() called')\n\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_29:condition_3:URL_Reputation_on_VT_v3:action_result.parameter.url'])\n\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    note_title = \"IoC URL VT Failure\"\n    note_content = filtered_results_item_1_0\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "filtered-data:filter_29:condition_3:URL_Reputation_on_VT_v3:action_result.parameter.url",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "IoC URL VT Failure",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d623b46-c037-4185-b7a6-ce2d0d9b5897",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1858,
                        "line_start": 1844,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 77,
                        "order": 83,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 360,
                            "y": 1940
                        },
                        "previous_function": "",
                        "previous_name": "add_note_77",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5104
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_40:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "green"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_40:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomBenign",
                                    "tlp": "green"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "URL Add Investigated an...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def URL_Add_Investigated_and_Benign_Tags(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('URL_Add_Investigated_and_Benign_Tags() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'URL_Add_Investigated_and_Benign_Tags' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_40:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_40:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'URL_Add_Investigated_and_Benign_Tags' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"green\",\n                'tags': \"PhantomInvestigated,PhantomBenign\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], name=\"URL_Add_Investigated_and_Benign_Tags\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "URL Add Investigated and Benign Tags",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "36e6ca67-b3a8-4190-b053-890144c34122",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 91,
                        "line_end": 71,
                        "line_start": 45,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 4,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 360,
                            "y": 2060
                        },
                        "previous_function": "",
                        "previous_name": "URL_Add_Investigated_and_Benign_Tags",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5105
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "evt_count",
                            "parse_only": "False",
                            "query": "Format_URL_Containment_Query:formatted_data.*"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "evt_count",
                                    "parse_only": "False",
                                    "query": "Format_URL_Containment_Query:formatted_data.*"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Run URL Containment Q...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Run_URL_Containment_Query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Run_URL_Containment_Query() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Run_URL_Containment_Query' call\n    formatted_data_1 = phantom.get_format_data(name='Format_URL_Containment_Query__as_list')\n\n    parameters = []\n    \n    # build parameters list for 'Run_URL_Containment_Query' call\n    for formatted_part_1 in formatted_data_1:\n        parameters.append({\n            'query': formatted_part_1,\n            'command': \"tstats\",\n            'display': \"evt_count\",\n            'parse_only': False,\n        })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=decision_19, name=\"Run_URL_Containment_Query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 251,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Run URL Containment Query",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "38231c10-75e8-4605-b8cd-437bf8f1e154",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 643,
                        "line_end": 142,
                        "line_start": 119,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 3,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 660,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "Run_URL_Containment_Query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5106
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Malicious and NonC...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Malicious_and_NonContained_Tags_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Malicious_and_NonContained_Tags_URL() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Malicious_and_NonContained_Tags_URL' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Malicious_and_NonContained_Tags_URL' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomMalicious,PhantomNonContained\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], name=\"Add_Malicious_and_NonContained_Tags_URL\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1393,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Malicious and NonContained Tags URL",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "aec10cfc-eeaf-4516-9657-e6447c4df4c9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 856,
                        "line_start": 830,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 14,
                        "order": 34,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1780,
                            "y": 2120
                        },
                        "previous_function": "",
                        "previous_name": "Add_Malicious_and_NonContained_Tags_URL",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5108
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 17
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_17(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_17() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Prompt_URL_Containment:action_result.status\", \"==\", \"success\"],\n            [\"Prompt_URL_Containment:action_result.summary.responses.0\", \"==\", \"Yes\"],\n        ],\n        logical_operator='and')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Format_URL_for_Note(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Prompt_URL_Containment:action_result.status\", \"==\", \"success\"],\n            [\"Prompt_URL_Containment:action_result.summary.responses.0\", \"==\", \"No\"],\n        ],\n        logical_operator='and')\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        Add_Malicious_and_NonContained_Tags_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        add_note_41(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 3\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Prompt_URL_Containment:action_result.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 3 matched\n    if matched:\n        add_note_40(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        Add_Malicious_and_NonContained_Tags_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "Prompt URL Containment",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d8627ced-5a48-4e7a-b038-12fa2e39c19d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 778,
                        "line_start": 728,
                        "name": "decision",
                        "notes": "",
                        "number": 17,
                        "order": 30,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_URL_Containment:action_result.status",
                                        "value": "success"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_URL_Containment:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_URL_Containment:action_result.status",
                                        "value": "success"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_URL_Containment:action_result.summary.responses.0",
                                        "value": "No"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Prompt_URL_Containment:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 1980
                        },
                        "previous_function": "",
                        "previous_name": "decision_17",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "warn",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5109
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_64(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_64() called')\n\n    formatted_data_1 = phantom.get_format_data(name='Email_Content_Hash')\n\n    note_title = \"Malicious File Hash IoC\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Email_Content_Hash:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Malicious File Hash IoC",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Malicious and Contained Tag Hash",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "292251cb-d960-4949-9899-8b9e66005681",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1413,
                        "line_start": 1401,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 64,
                        "order": 60,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2040,
                            "y": 2520
                        },
                        "previous_function": "",
                        "previous_name": "add_note_64",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5128
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1768ca11-97a1-4e94-acb0-cbfdf6b5f1b5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fb29f301-1659-4ff2-a43d-68fa9f51eabf",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ff2a5848-39b4-4f9d-aa8d-f3ad460ea862",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5131
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ccf1e717-b7ab-4c4f-8bb6-0e8821345c50",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ff2a5848-39b4-4f9d-aa8d-f3ad460ea862",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8b464e65-9222-4af0-b6f9-8788eea30052",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5133
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "aa29bc06-a949-4f5d-acc5-155f9d975e83",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8b464e65-9222-4af0-b6f9-8788eea30052",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "94dd89fa-641f-4a5d-8946-9bef3e90eb2b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5136
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4caaafe5-e6b4-46d0-891f-11350f0a60c6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "94dd89fa-641f-4a5d-8946-9bef3e90eb2b",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ba702d6c-4caf-441b-97bf-1d4010f6d9c4",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5139
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "51baee1a-85dc-4e86-89e1-bcce3ea090de",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ba702d6c-4caf-441b-97bf-1d4010f6d9c4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9bebb563-dacf-46be-b15f-c8b1ef8250ab",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5141
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "42b6c59c-1a2f-49be-9d86-ffbe3ee950b1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bebb563-dacf-46be-b15f-c8b1ef8250ab",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e975c1e6-37ca-44cc-9ce9-6b0ef2326cf0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5143
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "40b33b86-233a-4136-a3c3-c0da081ef97f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e975c1e6-37ca-44cc-9ce9-6b0ef2326cf0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "88a2b0fa-6898-4d28-901d-432d5bd62300",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5145
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "487354e0-b42e-4884-a525-dd90c3708714",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "88a2b0fa-6898-4d28-901d-432d5bd62300",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0e831670-43b8-4f7f-b0ef-62317a43190b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5158
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8e5c405f-d157-41c7-88e6-ec79edc5c60e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0e831670-43b8-4f7f-b0ef-62317a43190b",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2143a29d-d41f-442b-94df-8b125013489a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5160
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a22a0aab-9b4c-4375-bd9b-5dc2c238fed7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0e831670-43b8-4f7f-b0ef-62317a43190b",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0515f7ee-22a2-47fd-b0c6-6973d693d58e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5164
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4b352fff-b049-4613-a732-0db02c9f7490",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0515f7ee-22a2-47fd-b0c6-6973d693d58e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0167ed73-93ff-440f-99aa-114a0ca3be96",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5167
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a0910726-1b2e-4b63-a8d8-d29e4a3f36a3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2143a29d-d41f-442b-94df-8b125013489a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0515f7ee-22a2-47fd-b0c6-6973d693d58e",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5169
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "840a0fdb-55d7-47bc-861a-b468206f9fc7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0167ed73-93ff-440f-99aa-114a0ca3be96",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4c6440aa-658a-46b9-a6ba-126db6061ebb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5179
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6ecd7eb7-6aad-4f60-9986-1be6d43fb01b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4c6440aa-658a-46b9-a6ba-126db6061ebb",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ff2a5848-39b4-4f9d-aa8d-f3ad460ea862",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5182
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1659600e-5a0e-4c30-beff-7a64888ffc5c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4c6440aa-658a-46b9-a6ba-126db6061ebb",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "09b50273-3aae-4787-b0a0-68e1113993d1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5183
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "deb7aca4-11c5-435d-8692-d7db6d443689",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "09b50273-3aae-4787-b0a0-68e1113993d1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c90bd4c5-7c3d-47d3-97d3-7fbffbeea942",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5185
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Get containment status"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Get_containment_status(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_containment_status() called')\n    \n    input_parameter_0 = \"\"\n\n    Get_containment_status__is_contain_failed = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    Get_containment_status__is_contain_failed = URL_CONTAIN_FAILED\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Get_containment_status:is_contain_failed', value=json.dumps(Get_containment_status__is_contain_failed))\n    decision_31(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def Get_containment_status(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_containment_status() called')\n    \n    input_parameter_0 = \"\"\n\n    Get_containment_status__is_contain_failed = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    Get_containment_status__is_contain_failed = URL_CONTAIN_FAILED\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Get_containment_status:is_contain_failed', value=json.dumps(Get_containment_status__is_contain_failed))\n\n    return",
                        "custom_join": "",
                        "custom_name": "Get containment status",
                        "description": "Get containment status",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "09b50273-3aae-4787-b0a0-68e1113993d1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2316,
                        "line_start": 2292,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Get containment status",
                        "number": 8,
                        "order": 100,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "is_contain_failed"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5000,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Get_containment_status",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    Get_containment_status__is_contain_failed = URL_CONTAIN_FAILED\n\n",
                        "warn": false,
                        "z": 5189
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "701fe067-65c7-48b5-9bf7-3ce6a66aa357",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c90bd4c5-7c3d-47d3-97d3-7fbffbeea942",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aad9ad21-1458-42f3-823b-40b1742510e8",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5198
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7cd409ae-40d3-4309-b14d-b84d5ffa1110",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c90bd4c5-7c3d-47d3-97d3-7fbffbeea942",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3dab29a3-3a31-4e4b-a840-a4507e7ff2e8",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5199
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "928d8152-ce05-45c4-a548-d0367c3d770e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c90bd4c5-7c3d-47d3-97d3-7fbffbeea942",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "07d490af-5d13-4469-9085-2efab3b4c93b",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5202
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a72fbce3-d29e-44c3-8dce-b161c2c5f633",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c90bd4c5-7c3d-47d3-97d3-7fbffbeea942",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3bd3f036-d73d-465e-afb6-4d69529fcfaf",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5203
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Get total amount of IP ad..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Get_total_amount_of_IP_address(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_total_amount_of_IP_address() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    Get_total_amount_of_IP_address__total_num_of_ip = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    import ipaddress\n    ipaddress_list = set(filtered_results_item_1_0)\n    success, message, iplist = phantom.get_list(list_name='Firepower - IP to contain')\n    for ip in iplist:\n        try:\n            ipaddress.ip_address(ip[0])\n            phantom.debug(f\"Current IP: {ip[0]}\")\n            ipaddress_list.add(ip[0])\n        except:\n            continue\n    Get_total_amount_of_IP_address__total_num_of_ip = len(ipaddress_list)\n    phantom.debug(f\"Total IP in the list + to be added: {Get_total_amount_of_IP_address__total_num_of_ip}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Get_total_amount_of_IP_address:total_num_of_ip', value=json.dumps(Get_total_amount_of_IP_address__total_num_of_ip))\n    decision_26(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def Get_total_amount_of_IP_address(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_total_amount_of_IP_address() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    Get_total_amount_of_IP_address__total_num_of_ip = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    import ipaddress\n    ipaddress_list = set(filtered_results_item_1_0)\n    success, message, iplist = phantom.get_list(list_name='Firepower - IP to contain')\n    for ip in iplist:\n        try:\n            ipaddress.ip_address(ip[0])\n            phantom.debug(f\"Current IP: {ip[0]}\")\n            ipaddress_list.add(ip[0])\n        except:\n            continue\n    Get_total_amount_of_IP_address__total_num_of_ip = len(ipaddress_list)\n    phantom.debug(f\"Total IP in the list + to be added: {Get_total_amount_of_IP_address__total_num_of_ip}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Get_total_amount_of_IP_address:total_num_of_ip', value=json.dumps(Get_total_amount_of_IP_address__total_num_of_ip))\n    decision_26(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Get total amount of IP address",
                        "description": "Get total amount of IP address",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3a2667f7-181b-4c88-8f96-23275f450857",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1935,
                        "line_start": 1900,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Get total amount of IP address",
                        "number": 2,
                        "order": 85,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "total_num_of_ip"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "Get_total_amount_of_IP_address",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    import ipaddress\n    ipaddress_list = set(filtered_results_item_1_0)\n    success, message, iplist = phantom.get_list(list_name='Firepower - IP to contain')\n    for ip in iplist:\n        try:\n            ipaddress.ip_address(ip[0])\n            phantom.debug(f\"Current IP: {ip[0]}\")\n            ipaddress_list.add(ip[0])\n        except:\n            continue\n    Get_total_amount_of_IP_address__total_num_of_ip = len(ipaddress_list)\n    phantom.debug(f\"Total IP in the list + to be added: {Get_total_amount_of_IP_address__total_num_of_ip}\")\n\n",
                        "warn": false,
                        "z": 5216
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 36
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_36(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_36() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip\", \"==\", \"filtered-data:filter_28:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_36:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_NonContained_Tag_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "21cbc070-ee70-4259-b13b-1fd1d1cb3d4d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1649,
                        "line_end": 1523,
                        "line_start": 1505,
                        "name": "filter",
                        "notes": "",
                        "number": 36,
                        "order": 67,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2860,
                            "y": 1300
                        },
                        "previous_function": "",
                        "previous_name": "filter_36",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 5219
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_35:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomContained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_35:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomContained,PhantomMalicious",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Contained Tag IP"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Contained_Tag_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Contained_Tag_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Contained_Tag_IP' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_35:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_35:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Contained_Tag_IP' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomContained,PhantomMalicious\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], callback=add_note_63, name=\"Add_Contained_Tag_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Contained Tag IP",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "22768b02-9ab5-49ed-bec7-2f164322dccb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1135,
                        "line_start": 1109,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 19,
                        "order": 47,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3060,
                            "y": 1160
                        },
                        "previous_function": "",
                        "previous_name": "Add_Contained_Tag_IP",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5221
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 35
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_35(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_35() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip\", \"==\", \"filtered-data:filter_28:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_35:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Contained_Tag_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5c899621-dc21-489b-9fea-a5356a6c03f0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1505,
                        "line_start": 1487,
                        "name": "filter",
                        "notes": "",
                        "number": 35,
                        "order": 66,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2860,
                            "y": 1160
                        },
                        "previous_function": "",
                        "previous_name": "filter_35",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 5222
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 26
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_26(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_26() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Get_total_amount_of_IP_address:custom_function:total_num_of_ip\", \"<=\", 20],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Add_malicious_IP_to_custom_list(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    filter_36(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "075c721e-2d18-4c66-be7b-36593b5d2021",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1956,
                        "line_start": 1935,
                        "name": "decision",
                        "notes": "",
                        "number": 26,
                        "order": 86,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "<=",
                                        "data_type": "",
                                        "param": "Get_total_amount_of_IP_address:custom_function:total_num_of_ip",
                                        "value": "20"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2320,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "decision_26",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5223
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 31
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_31(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_31() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Get_containment_status:custom_function:is_contain_failed\", \"==\", False],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        add_note_51(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        filter_41(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    join_filter_42(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    add_note_54(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c90bd4c5-7c3d-47d3-97d3-7fbffbeea942",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2339,
                        "line_start": 2316,
                        "name": "decision",
                        "notes": "",
                        "number": 31,
                        "order": 101,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "Get_containment_status:custom_function:is_contain_failed",
                                        "value": "False"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5260,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "decision_31",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "warn",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5225
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ea7a237c-15ef-4076-9e49-98c578e2a28f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0c12f457-acaa-4e2f-b2f2-10035c8d0fee",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "91f7afad-cc29-457f-8e03-8bfd54dc85d3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 5238
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d5e880da-65bd-4912-b5c0-9d5edc280fb0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "91f7afad-cc29-457f-8e03-8bfd54dc85d3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "76533909-4281-4a51-bc21-96fae853f92f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5242
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 13
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_13(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_13() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Run_IP_Query_for_VT:action_result.data.*.evt_count\", \">\", 0],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_34(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Format_IP_for_Note(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run IP Query for VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0c12f457-acaa-4e2f-b2f2-10035c8d0fee",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 430,
                        "line_start": 409,
                        "name": "decision",
                        "notes": "",
                        "number": 13,
                        "order": 19,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "Run_IP_Query_for_VT:action_result.data.*.evt_count",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 820,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "decision_13",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5244
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format IoC IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Format_IoC_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_IoC_IP() called')\n    \n    template = \"\"\"Below Malicious IPs are NOT being contained and will be prompted to SoC Admin to decide whether executing containment:\n%%\n{0}\n\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_IoC_IP\", separator=\", \")\n\n    Prompt_Block_IP(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run IP Query for VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format IoC IP",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "76533909-4281-4a51-bc21-96fae853f92f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 614,
                        "line_end": 450,
                        "line_start": 430,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 33,
                        "order": 20,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1200,
                            "y": 1220
                        },
                        "previous_function": "",
                        "previous_name": "Format_IoC_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Below Malicious IPs are NOT being contained and will be prompted to SoC Admin to decide whether executing containment:\n%%\n{0}\n\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 5247
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_37:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_37:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Malicious and Nonc..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Malicious_and_Noncontained_Tag_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Malicious_and_Noncontained_Tag_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Malicious_and_Noncontained_Tag_IP' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_37:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_37:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Malicious_and_Noncontained_Tag_IP' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomMalicious,PhantomNonContained\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], name=\"Add_Malicious_and_Noncontained_Tag_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Malicious and Noncontained Tag IP",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "12c26ac6-6cbb-48b4-94e5-64f5bbe2ec0f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1161,
                        "line_start": 1135,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 20,
                        "order": 48,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2480,
                            "y": 920
                        },
                        "previous_function": "",
                        "previous_name": "Add_Malicious_and_Noncontained_Tag_IP",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5249
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_63(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_63() called')\n\n    Format_IP_for_Note__ip_list_markdown = json.loads(phantom.get_run_data(key='Format_IP_for_Note:ip_list_markdown'))\n\n    note_title = \"IP address successfully added to the list waiting to contain\"\n    note_content = Format_IP_for_Note__ip_list_markdown\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Format_IP_for_Note:custom_function:ip_list_markdown",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "IP address successfully added to the list waiting to contain",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add Contained Tag IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "962a77dd-59ca-4a94-b836-98dcfb3999a1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [
                            "Run_IP_Containment_for_VT",
                            "Add_Contained_Tag_IP"
                        ],
                        "join_start": 1501,
                        "line_end": 1401,
                        "line_start": 1389,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 63,
                        "order": 59,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3380,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "add_note_63",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5252
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_74(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_74() called')\n\n    Format_IP_for_Note__ip_list_markdown = json.loads(phantom.get_run_data(key='Format_IP_for_Note:ip_list_markdown'))\n\n    note_title = \"Failed to contain IP address due to amount exceeded\"\n    note_content = Format_IP_for_Note__ip_list_markdown\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Format_IP_for_Note:custom_function:ip_list_markdown",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Failed to contain IP address due to amount exceeded",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Add NonContained Tag IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8f00c64d-5eda-45b2-9795-49047cb1dd51",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1741,
                        "line_start": 1729,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 74,
                        "order": 78,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 4020,
                            "y": 880
                        },
                        "previous_function": "",
                        "previous_name": "add_note_74",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5253
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:filter_41:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomContained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:filter_41:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomContained,PhantomMalicious",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add Contained Tag URL"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_Contained_Tag_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_Contained_Tag_URL() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_Contained_Tag_URL' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_41:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:filter_41:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_Contained_Tag_URL' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomContained,PhantomMalicious\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], name=\"Add_Contained_Tag_URL\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add Contained Tag URL",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8c457e4a-bbc9-4940-8ee5-aed8ca147fca",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 937,
                        "line_start": 911,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 15,
                        "order": 38,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5620,
                            "y": 2300
                        },
                        "previous_function": "",
                        "previous_name": "Add_Contained_Tag_URL",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5258
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dadbf1d7-e279-442a-aae6-c419898c63f3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "351843a8-bb87-4782-9b38-27803be050ce",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fb29f301-1659-4ff2-a43d-68fa9f51eabf",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5263
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_51(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_51() called')\n\n    Format_URL_for_Note__url_list_markdown = json.loads(phantom.get_run_data(key='Format_URL_for_Note:url_list_markdown'))\n\n    note_title = \"URL successfully blocked on FortiGate \"\n    note_content = Format_URL_for_Note__url_list_markdown\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Format_URL_for_Note:custom_function:url_list_markdown",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "URL successfully blocked on FortiGate ",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "aad9ad21-1458-42f3-823b-40b1742510e8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 975,
                        "line_start": 963,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 51,
                        "order": 40,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5620,
                            "y": 2180
                        },
                        "previous_function": "",
                        "previous_name": "add_note_51",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "warn",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5269
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_54(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_54() called')\n\n    Format_URL_for_Note__url_list_markdown = json.loads(phantom.get_run_data(key='Format_URL_for_Note:url_list_markdown'))\n\n    note_title = \"URL IoC Failed to be blocked on FortiGate\"\n    note_content = Format_URL_for_Note__url_list_markdown\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Format_URL_for_Note:custom_function:url_list_markdown",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "URL IoC Failed to be blocked on FortiGate",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3bd3f036-d73d-465e-afb6-4d69529fcfaf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1224,
                        "line_start": 1212,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 54,
                        "order": 52,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5480,
                            "y": 2720
                        },
                        "previous_function": "",
                        "previous_name": "add_note_54",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "warn",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5270
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_40(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_40() called')\n\n    note_title = \"Can not get approval for Containment Action\"\n    note_content = \"Can not get approval for Containment Action\"\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "Can not get approval for Containment Action",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Can not get approval for Containment Action",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": false,
                        "connection_name": "Prompt URL Containment",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2a42c6f8-d9cc-4e36-9825-2fa2316a6b2a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 830,
                        "line_start": 820,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 40,
                        "order": 33,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1780,
                            "y": 2000
                        },
                        "previous_function": "",
                        "previous_name": "add_note_40",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "warn",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5272
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_41(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_41() called')\n\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value'])\n\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    note_title = \"Containment Action is Not Approved\"\n    note_content = filtered_results_item_1_0\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Containment Action is Not Approved",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": false,
                        "connection_name": "Prompt URL Containment",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "eb2ae9e7-bc42-4685-bba1-3182bba31da0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 870,
                        "line_start": 856,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 41,
                        "order": 35,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1780,
                            "y": 2360
                        },
                        "previous_function": "",
                        "previous_name": "add_note_41",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "warn",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 5273
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "99737aa0-13b9-4f3e-bd31-2628840d8006",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8627ced-5a48-4e7a-b038-12fa2e39c19d",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "351843a8-bb87-4782-9b38-27803be050ce",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5275
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1e459431-a820-4304-93b1-5b23629ac17a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "76533909-4281-4a51-bc21-96fae853f92f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7f56a8f2-a05a-4add-b338-1c5d3a97acc2",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5277
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "18ab794b-a66f-4546-a978-d460ac89554d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "965cb926-62bd-46a2-835a-81a64d95a348",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3a2667f7-181b-4c88-8f96-23275f450857",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5278
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 30
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_30(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_30() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Remove_the_top_URL_from_the_array:custom_function:url_count\", \">\", 0],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        join_decision_27(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Get_containment_status(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4c6440aa-658a-46b9-a6ba-126db6061ebb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2289,
                        "line_start": 2268,
                        "name": "decision",
                        "notes": "",
                        "number": 30,
                        "order": 99,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "Remove_the_top_URL_from_the_array:custom_function:url_count",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 4780,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "decision_30",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "warn",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5296
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Flag contain failed"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Flag_contain_failed(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Flag_contain_failed() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    URL_CONTAIN_FAILED = True\n    phantom.debug(\"failed detected\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_Delete_the_created_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "def Flag_contain_failed(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Flag_contain_failed() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    URL_CONTAIN_FAILED = True\n    phantom.debug(\"failed detected\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_Delete_the_created_artifact(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Flag contain failed",
                        "description": "Flag contain failed",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2143a29d-d41f-442b-94df-8b125013489a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2198,
                        "line_start": 2177,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Flag contain failed",
                        "number": 5,
                        "order": 96,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3960,
                            "y": 2400
                        },
                        "previous_function": "",
                        "previous_name": "Flag_contain_failed",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    URL_CONTAIN_FAILED = True\n    phantom.debug(\"failed detected\")\n\n",
                        "warn": false,
                        "z": 5307
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 28
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_28(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_28() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Get_the_top_URL_from_the_array:custom_function:top_url\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Prepare_URL_artifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment, Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "94dd89fa-641f-4a5d-8946-9bef3e90eb2b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2068,
                        "line_start": 2050,
                        "name": "decision",
                        "notes": "",
                        "number": 28,
                        "order": 90,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Get_the_top_URL_from_the_array:custom_function:top_url",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2800,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "decision_28",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "warn",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5323
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "artifact_scope": "all",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Delete the created artifact"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Delete_the_created_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Delete_the_created_artifact() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    artifacts = phantom.collect(container, 'artifacts:*', scope='all')\n    # phantom.debug(artifacts)\n    for artifact in artifacts:\n        result = phantom.delete_artifact(artifact_id=artifact[\"id\"])\n        phantom.debug('phantom.delete_artifact results: {} '.format(result))\n        \n    ####\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Remove_the_top_URL_from_the_array(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "def Delete_the_created_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Delete_the_created_artifact() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    artifacts = phantom.collect(container, 'artifacts:*', scope='all')\n    # phantom.debug(artifacts)\n    for artifact in artifacts:\n        result = phantom.delete_artifact(artifact_id=artifact[\"id\"])\n        phantom.debug('phantom.delete_artifact results: {} '.format(result))\n        \n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Remove_the_top_URL_from_the_array(container=container)\n\n    return",
                        "custom_join": "def join_Delete_the_created_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_Delete_the_created_artifact() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    #if phantom.completed(action_names=['Sleep']):\n        \n    # call connected block \"Delete_the_created_artifact\"\n    Delete_the_created_artifact(container=container, handle=handle)\n    \n    return",
                        "custom_name": "Delete the created artifact",
                        "description": "Delete the created artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": true,
                        "id": "0515f7ee-22a2-47fd-b0c6-6973d693d58e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 2225,
                        "legacy": true,
                        "line_end": 2236,
                        "line_start": 2201,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Delete the created artifact",
                        "number": 6,
                        "order": 97,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 4220,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Delete_the_created_artifact",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    artifacts = phantom.collect(container, 'artifacts:*', scope='all')\n    # phantom.debug(artifacts)\n    for artifact in artifacts:\n        result = phantom.delete_artifact(artifact_id=artifact[\"id\"])\n        phantom.debug('phantom.delete_artifact results: {} '.format(result))\n        \n    ####",
                        "warn": false,
                        "z": 5337
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "artifact_scope": "all",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 29
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_29(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_29() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.requestURL_ContainResult\", \"==\", True],\n        ],\n        scope=\"all\")\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        join_Delete_the_created_artifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Flag_contain_failed(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0e831670-43b8-4f7f-b0ef-62317a43190b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2174,
                        "line_start": 2152,
                        "name": "decision",
                        "notes": "",
                        "number": 29,
                        "order": 95,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.cef.requestURL_ContainResult",
                                        "value": "True"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 4020,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "decision_29",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "warn",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5340
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 27
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_27(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_27() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [1, \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Get_the_top_URL_from_the_array(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment, Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "def join_decision_27(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_decision_27() called')\n    \n    # if the joined function has already been called, do nothing\n    #if phantom.get_run_data(key='join_decision_27_called'):\n    #    return\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    #if phantom.completed(action_names=['Run_URL_Containment_Query']):\n        \n    # save the state that the joined function has now been called\n    phantom.save_run_data(key='join_decision_27_called', value='decision_27')\n        \n    # call connected block \"decision_27\"\n    decision_27(container=container, handle=handle)\n    \n    return",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": true,
                        "id": "ff2a5848-39b4-4f9d-aa8d-f3ad460ea862",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_decision_27(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_decision_27() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['Run_URL_Containment_Query', 'Sleep']):\n        \n        # call connected block \"decision_27\"\n        decision_27(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "Sleep"
                        ],
                        "join_start": 2003,
                        "line_end": 2021,
                        "line_start": 1985,
                        "name": "decision",
                        "notes": "",
                        "number": 27,
                        "order": 88,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "1",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2340,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "decision_27",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "warn",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 5342
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 38
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_38(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_38() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url\", \"==\", \"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_38:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Malicious_and_Contained_Tags_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run URL Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ccd4b634-8c4f-4abf-9e8a-c558a1d4a092",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1559,
                        "line_start": 1541,
                        "name": "filter",
                        "notes": "",
                        "number": 38,
                        "order": 69,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url",
                                        "value": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1200,
                            "y": 1800
                        },
                        "previous_function": "",
                        "previous_name": "filter_38",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 5343
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Format IP for Note"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_IP_for_Note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_IP_for_Note() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    Format_IP_for_Note__ip_list_markdown = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    output = \"\"\n    \n    for ip in filtered_results_item_1_0:\n        output += f\"- `{ip}`\\n\"\n        \n    Format_IP_for_Note__ip_list_markdown = output\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Format_IP_for_Note:ip_list_markdown', value=json.dumps(Format_IP_for_Note__ip_list_markdown))\n    Format_IoC_IP(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run IP Query for VT",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def Format_IP_for_Note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_IP_for_Note() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    Format_IP_for_Note__ip_list_markdown = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    output = \"\"\n    \n    for ip in filtered_results_item_1_0:\n        output += f\"- `{ip}`\\n\"\n        \n    Format_IP_for_Note__ip_list_markdown = output\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Format_IP_for_Note:ip_list_markdown', value=json.dumps(Format_IP_for_Note__ip_list_markdown))\n    Format_IoC_IP(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Format IP for Note",
                        "description": "Format IP for Note",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "91f7afad-cc29-457f-8e03-8bfd54dc85d3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2371,
                        "line_start": 2342,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Format IP for Note",
                        "number": 9,
                        "order": 102,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "ip_list_markdown"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 940,
                            "y": 1220
                        },
                        "previous_function": "",
                        "previous_name": "Format_IP_for_Note",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    output = \"\"\n    \n    for ip in filtered_results_item_1_0:\n        output += f\"- `{ip}`\\n\"\n        \n    Format_IP_for_Note__ip_list_markdown = output\n\n",
                        "warn": false,
                        "z": 5351
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Format URL for Note"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_URL_for_Note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_URL_for_Note() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    Format_URL_for_Note__url_list_markdown = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    output = \"\"\n    \n    for url in filtered_results_item_1_0:\n        output += f\"- `{url}`\\n\"\n        \n    Format_URL_for_Note__url_list_markdown = output\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Format_URL_for_Note:url_list_markdown', value=json.dumps(Format_URL_for_Note__url_list_markdown))\n    Collect_all_URL(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def Format_URL_for_Note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_URL_for_Note() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    Format_URL_for_Note__url_list_markdown = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    output = \"\"\n    \n    for url in filtered_results_item_1_0:\n        output += f\"- `{url}`\\n\"\n        \n    Format_URL_for_Note__url_list_markdown = output\n    \n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Format_URL_for_Note:url_list_markdown', value=json.dumps(Format_URL_for_Note__url_list_markdown))\n    Collect_all_URL(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Format URL for Note",
                        "description": "Format URL for Note",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "351843a8-bb87-4782-9b38-27803be050ce",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2403,
                        "line_start": 2374,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Format URL for Note",
                        "number": 10,
                        "order": 103,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "url_list_markdown"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1780,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Format_URL_for_Note",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    output = \"\"\n    \n    for url in filtered_results_item_1_0:\n        output += f\"- `{url}`\\n\"\n        \n    Format_URL_for_Note__url_list_markdown = output\n    \n    ",
                        "warn": false,
                        "z": 5352
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Collect all URL"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Collect_all_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Collect_all_URL() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    # Reinitial Global Variables to ensure it will get reseted every runtime\n    URL_CONTAIN_FAILED = False\n    \n    phantom.save_run_data(value=json.dumps(filtered_results_item_1_0), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    phantom.debug(filtered_results_item_1_0)\n    phantom.debug('---')\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_decision_27(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 9,
                        "custom_callback": "",
                        "custom_code": "def Collect_all_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Collect_all_URL() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    # Reinitial Global Variables to ensure it will get reseted every runtime\n    URL_CONTAIN_FAILED = False\n    \n    phantom.save_run_data(value=json.dumps(filtered_results_item_1_0), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    phantom.debug(filtered_results_item_1_0)\n    phantom.debug('---')\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_decision_27(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Collect all URL",
                        "description": "Collect all URL",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fb29f301-1659-4ff2-a43d-68fa9f51eabf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1985,
                        "line_start": 1959,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "URL to contain",
                        "number": 3,
                        "order": 87,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2040,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Collect_all_URL",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    # Reinitial Global Variables to ensure it will get reseted every runtime\n    URL_CONTAIN_FAILED = False\n    \n    phantom.save_run_data(value=json.dumps(filtered_results_item_1_0), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    phantom.debug(filtered_results_item_1_0)\n    phantom.debug('---')\n\n",
                        "warn": false,
                        "z": 5353
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Get the top URL from the..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Get_the_top_URL_from_the_array(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_the_top_URL_from_the_array() called')\n    \n    input_parameter_0 = \"\"\n\n    Get_the_top_URL_from_the_array__top_url = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Starting loop with: {URL_LIST_TO_CONTAIN}\")\n    if len(URL_LIST_TO_CONTAIN) > 0:\n        Get_the_top_URL_from_the_array__top_url = URL_LIST_TO_CONTAIN[0]\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Get_the_top_URL_from_the_array:top_url', value=json.dumps(Get_the_top_URL_from_the_array__top_url))\n    decision_28(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment, Sleep, Sleep",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def Get_the_top_URL_from_the_array(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Get_the_top_URL_from_the_array() called')\n    \n    input_parameter_0 = \"\"\n\n    Get_the_top_URL_from_the_array__top_url = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Starting loop with: {URL_LIST_TO_CONTAIN}\")\n    if len(URL_LIST_TO_CONTAIN) > 0:\n        Get_the_top_URL_from_the_array__top_url = URL_LIST_TO_CONTAIN[0]\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Get_the_top_URL_from_the_array:top_url', value=json.dumps(Get_the_top_URL_from_the_array__top_url))\n    decision_28(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Get the top URL from the array",
                        "description": "Get the top URL from the array",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8b464e65-9222-4af0-b6f9-8788eea30052",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2050,
                        "line_start": 2024,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Get the top IP",
                        "number": 4,
                        "order": 89,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "top_url"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2540,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Get_the_top_URL_from_the_array",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Starting loop with: {URL_LIST_TO_CONTAIN}\")\n    if len(URL_LIST_TO_CONTAIN) > 0:\n        Get_the_top_URL_from_the_array__top_url = URL_LIST_TO_CONTAIN[0]\n\n",
                        "warn": false,
                        "z": 5354
                    },
                    {
                        "action": "add artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "cef_dictionary": "Prepare_URL_artifact:formatted_data",
                            "cef_name": "",
                            "cef_value": "",
                            "container_id": "",
                            "contains": "",
                            "label": "event",
                            "name": "User created artifact",
                            "run_automation": "False",
                            "source_data_identifier": "Get_the_top_URL_from_the_array:custom_function:top_url"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "cef_dictionary": "Prepare_URL_artifact:formatted_data",
                                    "cef_name": "",
                                    "cef_value": "",
                                    "container_id": "",
                                    "contains": "",
                                    "label": "event",
                                    "name": "User created artifact",
                                    "run_automation": "False",
                                    "source_data_identifier": "Get_the_top_URL_from_the_array:custom_function:top_url"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_dictionary",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"test_key\": \"test_value\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_path": "action_result.parameter.cef_value",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1234
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.contains",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "event"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact_demo"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.run_automation",
                                        "data_type": "string",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_data_identifier",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.existing_artifact_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.failed",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            123
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.artifact_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            12345
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.container_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1234
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://10.1.1.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact id: 12345, Container id: 1234, Server: https://10.1.1.10"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "cef_dictionary": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "CEF JSON",
                                        "key": "cef_dictionary",
                                        "order": 6,
                                        "required": false
                                    },
                                    "cef_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "CEF Name",
                                        "key": "cef_name",
                                        "order": 4,
                                        "required": false,
                                        "value_list": [
                                            "",
                                            "act",
                                            "app",
                                            "applicationProtocol",
                                            "baseEventCount",
                                            "bytesIn",
                                            "bytesOut",
                                            "cat",
                                            "cn1",
                                            "cn1Label",
                                            "cn2",
                                            "cn2Label",
                                            "cn3",
                                            "cn3Label",
                                            "cnt",
                                            "cs1",
                                            "cs1Label",
                                            "cs2",
                                            "cs2Label",
                                            "cs3",
                                            "cs3Label",
                                            "cs4",
                                            "cs4Label",
                                            "cs5",
                                            "cs5Label",
                                            "cs6",
                                            "cs6Label",
                                            "destinationAddress",
                                            "destinationDnsDomain",
                                            "destinationHostName",
                                            "destinationMacAddress",
                                            "destinationNtDomain",
                                            "destinationPort",
                                            "destinationProcessName",
                                            "destinationServiceName",
                                            "destinationTranslatedAddress",
                                            "destinationTranslatedPort",
                                            "destinationUserId",
                                            "destinationUserName",
                                            "destinationUserPrivileges",
                                            "deviceAction",
                                            "deviceAddress",
                                            "deviceCustomDate1",
                                            "deviceCustomDate1Label",
                                            "deviceCustomDate2",
                                            "deviceCustomDate2Label",
                                            "deviceCustomNumber1",
                                            "deviceCustomNumber1Label",
                                            "deviceCustomNumber2",
                                            "deviceCustomNumber2Label",
                                            "deviceCustomNumber3",
                                            "deviceCustomNumber3Label",
                                            "deviceCustomString1",
                                            "deviceCustomString1Label",
                                            "deviceCustomString2",
                                            "deviceCustomString2Label",
                                            "deviceCustomString3",
                                            "deviceCustomString3Label",
                                            "deviceCustomString4",
                                            "deviceCustomString4Label",
                                            "deviceCustomString5",
                                            "deviceCustomString5Label",
                                            "deviceCustomString6",
                                            "deviceCustomString6Label",
                                            "deviceDirection",
                                            "deviceDnsDomain",
                                            "deviceEventCategory",
                                            "deviceExternalId",
                                            "deviceFacility",
                                            "deviceHostname",
                                            "deviceInboundInterface",
                                            "deviceMacAddress",
                                            "deviceOutboundInterface",
                                            "deviceProcessName",
                                            "deviceTranslatedAddress",
                                            "dhost",
                                            "dmac",
                                            "dntdom",
                                            "dpriv",
                                            "dproc",
                                            "dpt",
                                            "dst",
                                            "duid",
                                            "duser",
                                            "dvc",
                                            "dvchost",
                                            "end",
                                            "endTime",
                                            "eventOutcome",
                                            "externalId",
                                            "fileCreateTime",
                                            "fileHash",
                                            "fileHashMd5",
                                            "fileHashSha1",
                                            "fileHashSha256",
                                            "fileHashSha512",
                                            "fileId",
                                            "fileModificationTime",
                                            "fileName",
                                            "filePath",
                                            "filePermission",
                                            "fileSize",
                                            "fileType",
                                            "fname",
                                            "fsize",
                                            "in",
                                            "message",
                                            "msg",
                                            "oldfileCreateTime",
                                            "oldfileHash",
                                            "oldfileId",
                                            "oldfileModificationTime",
                                            "oldfileName",
                                            "oldfilePath",
                                            "oldfilePermission",
                                            "oldfileType",
                                            "oldfsize",
                                            "out",
                                            "outcome",
                                            "proto",
                                            "receiptTime",
                                            "request",
                                            "requestClientApplication",
                                            "requestCookies",
                                            "requestMethod",
                                            "requestURL",
                                            "rt",
                                            "shost",
                                            "smac",
                                            "sntdom",
                                            "sourceAddress",
                                            "sourceDnsDomain",
                                            "sourceHostName",
                                            "sourceMacAddress",
                                            "sourceNtDomain",
                                            "sourcePort",
                                            "sourceServiceName",
                                            "sourceTranslatedAddress",
                                            "sourceTranslatedPort",
                                            "sourceUserId",
                                            "sourceUserName",
                                            "sourceUserPrivileges",
                                            "spriv",
                                            "spt",
                                            "src",
                                            "start",
                                            "startTime",
                                            "suid",
                                            "suser",
                                            "transportProtocol"
                                        ]
                                    },
                                    "cef_value": {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Value",
                                        "key": "cef_value",
                                        "order": 5,
                                        "primary": true,
                                        "required": false
                                    },
                                    "container_id": {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Numeric container ID for the new artifact",
                                        "key": "container_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "contains": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Data type for each CEF field",
                                        "key": "contains",
                                        "order": 7,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": "event",
                                        "description": "Artifact label (default: event)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": "User created artifact",
                                        "description": "Name of the new artifact",
                                        "key": "name",
                                        "order": 0,
                                        "required": false
                                    },
                                    "run_automation": {
                                        "data_type": "boolean",
                                        "default": true,
                                        "description": "Run automation on newly created artifact(s) (default: true)",
                                        "key": "run_automation",
                                        "order": 8,
                                        "required": false
                                    },
                                    "source_data_identifier": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Source Data Idenitifier",
                                        "key": "source_data_identifier",
                                        "order": 3,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add URL artifact"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_URL_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_URL_artifact() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Get_the_top_URL_from_the_array__top_url = json.loads(phantom.get_run_data(key='Get_the_top_URL_from_the_array:top_url'))\n    # collect data for 'Add_URL_artifact' call\n    formatted_data_1 = phantom.get_format_data(name='Prepare_URL_artifact')\n\n    parameters = []\n    \n    # build parameters list for 'Add_URL_artifact' call\n    parameters.append({\n        'name': \"User created artifact\",\n        'label': \"event\",\n        'cef_name': \"\",\n        'contains': \"\",\n        'cef_value': \"\",\n        'container_id': \"\",\n        'cef_dictionary': formatted_data_1,\n        'run_automation': False,\n        'source_data_identifier': Get_the_top_URL_from_the_array__top_url,\n    })\n\n    phantom.act(action=\"add artifact\", parameters=parameters, assets=['phantom asset'], callback=FortiGate_Block_URL, name=\"Add_URL_artifact\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 2108,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment, Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add URL artifact",
                        "delay": 0,
                        "description": "Add URL artifact",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9bebb563-dacf-46be-b15f-c8b1ef8250ab",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2118,
                        "line_start": 2090,
                        "message": "Configuring now",
                        "name": "add artifact",
                        "notes": "Add URL artifact",
                        "number": 1,
                        "order": 92,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3220,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Add_URL_artifact",
                        "required_params": {
                            "source_data_identifier": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5356
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "artifact_scope": "all",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Remove the top URL fro..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Remove_the_top_URL_from_the_array(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Remove_the_top_URL_from_the_array() called')\n    \n    input_parameter_0 = \"\"\n\n    Remove_the_top_URL_from_the_array__url_count = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Before popping: {URL_LIST_TO_CONTAIN}\")\n    URL_LIST_TO_CONTAIN.pop(0)\n    phantom.debug(f\"After popping: {URL_LIST_TO_CONTAIN}\")\n    phantom.save_run_data(value=json.dumps(URL_LIST_TO_CONTAIN), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    \n    Remove_the_top_URL_from_the_array__url_count = len(URL_LIST_TO_CONTAIN)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Remove_the_top_URL_from_the_array:url_count', value=json.dumps(Remove_the_top_URL_from_the_array__url_count))\n    decision_30(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def Remove_the_top_URL_from_the_array(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Remove_the_top_URL_from_the_array() called')\n    \n    input_parameter_0 = \"\"\n\n    Remove_the_top_URL_from_the_array__url_count = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Before popping: {URL_LIST_TO_CONTAIN}\")\n    URL_LIST_TO_CONTAIN.pop(0)\n    phantom.debug(f\"After popping: {URL_LIST_TO_CONTAIN}\")\n    phantom.save_run_data(value=json.dumps(URL_LIST_TO_CONTAIN), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    \n    Remove_the_top_URL_from_the_array__url_count = len(URL_LIST_TO_CONTAIN)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Remove_the_top_URL_from_the_array:url_count', value=json.dumps(Remove_the_top_URL_from_the_array__url_count))\n    decision_30(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Remove the top URL from the array",
                        "description": "Remove the top URL from the array",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0167ed73-93ff-440f-99aa-114a0ca3be96",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2268,
                        "line_start": 2239,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Remove the top URL from the array",
                        "number": 7,
                        "order": 98,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "url_count"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 4480,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Remove_the_top_URL_from_the_array",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Before popping: {URL_LIST_TO_CONTAIN}\")\n    URL_LIST_TO_CONTAIN.pop(0)\n    phantom.debug(f\"After popping: {URL_LIST_TO_CONTAIN}\")\n    phantom.save_run_data(value=json.dumps(URL_LIST_TO_CONTAIN), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    \n    Remove_the_top_URL_from_the_array__url_count = len(URL_LIST_TO_CONTAIN)\n\n",
                        "warn": false,
                        "z": 5358
                    },
                    {
                        "action": "no op",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "sleep_seconds": "120"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "artifact_scope": "all",
                        "assets": [
                            {
                                "action": "no op",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "sleep_seconds": "120"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.sleep_seconds",
                                        "data_type": "numeric",
                                        "example_values": [
                                            15
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Slept for 15 seconds"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "sleep_seconds": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Sleep for this many seconds",
                                        "key": "sleep_seconds",
                                        "order": 0,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Sleep"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Sleep(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Sleep() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Sleep' call\n\n    parameters = []\n    \n    # build parameters list for 'Sleep' call\n    parameters.append({\n        'sleep_seconds': 120,\n    })\n\n    phantom.act(action=\"no op\", parameters=parameters, assets=['phantom asset'], callback=decision_29, name=\"Sleep\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "FortiGate Block URL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Sleep",
                        "delay": "0",
                        "description": "Sleep",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "88a2b0fa-6898-4d28-901d-432d5bd62300",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2152,
                        "line_start": 2134,
                        "message": "Configuring now",
                        "name": "no op",
                        "notes": "Sleep",
                        "number": 1,
                        "order": 94,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3760,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Sleep",
                        "required_params": {
                            "sleep_seconds": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5360
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "bcc": "",
                            "body": "Email_Content:formatted_data",
                            "cc": "",
                            "from": "no-reply-phantom@ktbcs.co.th",
                            "headers": "",
                            "subject": "Malicious URL are NOT being contained",
                            "to": "security-infra@ktbcs.co.th"
                        },
                        "angle": 0,
                        "app": "SMTP",
                        "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "send email",
                                "actions": [
                                    "send htmlemail",
                                    "send rawemail",
                                    "send email",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SMTP",
                                "app_version": "2.1.3",
                                "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                                "asset_name": "smtp asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attachments": "",
                                    "bcc": "",
                                    "body": "Email_Content:formatted_data",
                                    "cc": "",
                                    "from": "no-reply-phantom@ktbcs.co.th",
                                    "headers": "",
                                    "subject": "Malicious URL are NOT being contained",
                                    "to": "security-infra@ktbcs.co.th"
                                },
                                "has_app": true,
                                "id": 6,
                                "loaded": false,
                                "missing": false,
                                "name": "smtp asset",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string",
                                        "example_values": [
                                            "ab2b2ccfba08ea538ef22f521caa01c3c2b17ccf"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.bcc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test1@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test body"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.cc",
                                        "data_type": "string",
                                        "example_values": [
                                            "test2@testdomain.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string",
                                        "example_values": [
                                            "sender@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Subject\": \"Test1\", \"To\": \"test3@testdomain.com\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string",
                                        "example_values": [
                                            "receiver@testdomain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Email sent"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attachments": {
                                        "allow_list": true,
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault IDs of files to attach",
                                        "key": "attachments",
                                        "order": 6,
                                        "primary": true,
                                        "required": false
                                    },
                                    "bcc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on bcc line",
                                        "key": "bcc",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    },
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message body",
                                        "key": "body",
                                        "order": 5,
                                        "required": true
                                    },
                                    "cc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on cc line",
                                        "key": "cc",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "from": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "From field",
                                        "key": "from",
                                        "order": 0,
                                        "primary": true,
                                        "required": false
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Custom email headers (formatted as JSON)",
                                        "key": "headers",
                                        "order": 7,
                                        "required": false
                                    },
                                    "subject": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message Subject",
                                        "key": "subject",
                                        "order": 4,
                                        "required": false
                                    },
                                    "to": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses",
                                        "key": "to",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "targets": "6",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Notify SoC Team via Em..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Notify_SoC_Team_via_Email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Notify_SoC_Team_via_Email() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Notify_SoC_Team_via_Email' call\n    formatted_data_1 = phantom.get_format_data(name='Email_Content')\n\n    parameters = []\n    \n    # build parameters list for 'Notify_SoC_Team_via_Email' call\n    parameters.append({\n        'cc': \"\",\n        'to': \"security-infra@ktbcs.co.th\",\n        'bcc': \"\",\n        'body': formatted_data_1,\n        'from': \"no-reply-phantom@ktbcs.co.th\",\n        'headers': \"\",\n        'subject': \"Malicious URL are NOT being contained\",\n        'attachments': \"\",\n    })\n\n    phantom.act(action=\"send email\", parameters=parameters, assets=['smtp asset'], name=\"Notify_SoC_Team_via_Email\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "URL Reputation on VT_v3, File Reputation on VT_V, Domain Reputation on VT v3, Domain Reputation on Umbrella, IP Reputation on VT v3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Notify SoC Team via Email",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8a5f47e7-f9a2-4b3e-9c3d-cf7ddf72b1b8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 726,
                        "line_end": 694,
                        "line_start": 668,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "",
                        "number": 3,
                        "order": 28,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -240,
                            "y": 2820
                        },
                        "previous_function": "",
                        "previous_name": "Notify_SoC_Team_via_Email",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5362
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "Tier2 Analyst",
                        "approver_display": "Tier2 Analyst",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Prompt_Block_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Prompt_Block_IP() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"Tier2 Analyst\"\n    message = \"\"\"***WARNING*** \nDo you want to proceed with containment?\n\nAttacker Info:\nSource Address = {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Format_IoC_IP:formatted_data\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"list\",\n                \"choices\": [\n                    \"Yes\",\n                    \"No\",\n                ]\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=5, name=\"Prompt_Block_IP\", separator=\", \", parameters=parameters, response_types=response_types, callback=decision_15)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "Run IP Query for VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Prompt Block IP",
                        "delimiter": ", ",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7f56a8f2-a05a-4add-b338-1c5d3a97acc2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 759,
                        "line_end": 572,
                        "line_start": 538,
                        "message": "***WARNING*** \nDo you want to proceed with containment?\n\nAttacker Info:\nSource Address = {0}",
                        "name": "prompt",
                        "notes": "",
                        "number": 1,
                        "order": 25,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Format_IoC_IP:formatted_data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1540,
                            "y": 1220
                        },
                        "previous_function": "",
                        "previous_name": "Prompt_Block_IP",
                        "respond_in": "5",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Yes/No",
                                "response_options": [
                                    "Yes",
                                    "No"
                                ],
                                "response_prompt": "",
                                "response_type": "list"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 5369
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 41
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_41(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_41() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url\", \"==\", \"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_41:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_Contained_Tag_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3dab29a3-3a31-4e4b-a840-a4507e7ff2e8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1653,
                        "line_start": 1635,
                        "name": "filter",
                        "notes": "",
                        "number": 41,
                        "order": 74,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url",
                                        "value": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5440,
                            "y": 2320
                        },
                        "previous_function": "",
                        "previous_name": "filter_41",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "warn",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 5371
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "975e8306-4e84-4e1d-8563-d0f313457c08",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c21784cb-4ec9-46e9-8578-3607eeabe374",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "07d490af-5d13-4469-9085-2efab3b4c93b",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 5375
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 42
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_42(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_42() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url\", \"==\", \"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value\"],\n        ],\n        name=\"filter_42:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_NonContained_Tag_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep, Run URL Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "07d490af-5d13-4469-9085-2efab3b4c93b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_filter_42(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_filter_42() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_filter_42_called'):\n        return\n\n    # no callbacks to check, call connected block \"filter_42\"\n    phantom.save_run_data(key='join_filter_42_called', value='filter_42', auto=True)\n\n    filter_42(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "Run_URL_Containment_Query",
                            "Sleep"
                        ],
                        "join_start": 1671,
                        "line_end": 1685,
                        "line_start": 1653,
                        "name": "filter",
                        "notes": "",
                        "number": 42,
                        "order": 75,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_29:condition_1:URL_Reputation_on_VT_v3:action_result.parameter.url",
                                        "value": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.value"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5460,
                            "y": 2540
                        },
                        "previous_function": "",
                        "previous_name": "filter_42",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 5376
                    },
                    {
                        "action": "tag observable",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "id": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomNoncontained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "tag observable",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "id": "filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id",
                                    "source_user_id": "33862",
                                    "tags": "PhantomInvestigated,PhantomNoncontained,PhantomMalicious",
                                    "tlp": "red"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "51590754288"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "test_tag"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_path": "action_result.parameter.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red",
                                            "white"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Tag ID",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "9x2",
                                            "nyj"
                                        ]
                                    },
                                    {
                                        "column_name": "Tag",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag_test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "16783"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully tagged Observable"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "id": {
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Intelligence ID",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "source_user_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of user to associate with tag",
                                        "key": "source_user_id",
                                        "order": 1,
                                        "required": true
                                    },
                                    "tags": {
                                        "contains": [
                                            "threatstream tags"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to associate with this Observable",
                                        "key": "tags",
                                        "order": 2,
                                        "primary": true,
                                        "required": true
                                    },
                                    "tlp": {
                                        "contains": [
                                            "threatstream tlp"
                                        ],
                                        "data_type": "string",
                                        "default": "red",
                                        "description": "TLP to assign to each tag",
                                        "key": "tlp",
                                        "order": 3,
                                        "primary": true,
                                        "required": false,
                                        "value_list": [
                                            "white",
                                            "green",
                                            "amber",
                                            "red"
                                        ]
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Add NonContained Tag ..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Add_NonContained_Tag_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_NonContained_Tag_URL() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Add_NonContained_Tag_URL' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.data.*.id\", \"filtered-data:Filter_IOC_URL:condition_1:Fetch_Active_Threat_Feed:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'Add_NonContained_Tag_URL' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'tlp': \"red\",\n                'tags': \"PhantomInvestigated,PhantomNoncontained,PhantomMalicious\",\n                'source_user_id': 33862,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"tag observable\", parameters=parameters, assets=['threatstream hybrid vm'], name=\"Add_NonContained_Tag_URL\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Sleep, Sleep, Run URL Containment Query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Add NonContained Tag URL",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a0deae7b-731f-4955-a361-5c74c1e00349",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 963,
                        "line_start": 937,
                        "message": "Configuring now",
                        "name": "tag observable",
                        "notes": "",
                        "number": 16,
                        "order": 39,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 5620,
                            "y": 2560
                        },
                        "previous_function": "",
                        "previous_name": "Add_NonContained_Tag_URL",
                        "required_params": {
                            "id": true,
                            "source_user_id": true,
                            "tags": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 5377
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "Tier2 Analyst",
                        "approver_display": "Tier2 Analyst",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Prompt_URL_Containment(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Prompt_URL_Containment() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = \"Tier2 Analyst\"\n    message = \"\"\"***WARNING*** \nDo you want to proceed with containment?\n\nMalicious URL :\nURL = {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"URL_Reputation_on_VT_v3:action_result.parameter.url\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"list\",\n                \"choices\": [\n                    \"Yes\",\n                    \"No\",\n                ]\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=5, name=\"Prompt_URL_Containment\", separator=\", \", parameters=parameters, response_types=response_types, callback=decision_17)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1186,
                        "callsback": true,
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Prompt URL Containment",
                        "delimiter": ", ",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "60060970-8c86-427d-b69e-77e52f5a9abb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 728,
                        "line_start": 694,
                        "message": "***WARNING*** \nDo you want to proceed with containment?\n\nMalicious URL :\nURL = {0}",
                        "name": "prompt",
                        "notes": "",
                        "number": 2,
                        "order": 29,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "URL_Reputation_on_VT_v3:action_result.parameter.url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1020,
                            "y": 1980
                        },
                        "previous_function": "",
                        "previous_name": "Prompt_URL_Containment",
                        "respond_in": "5",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Yes/No",
                                "response_options": [
                                    "Yes",
                                    "No"
                                ],
                                "response_prompt": "",
                                "response_type": "list"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "warn",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 5378
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".playbook": {
                                "text": "FortiGate Block URL"
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "Playbook"
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_code_dark_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "# read-only block view not available",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": false,
                        "connection_name": "Add URL artifact",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def FortiGate_Block_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FortiGate_Block_URL() called')\n    \n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n\n    # call playbook \"local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATECSOC-URL\", returns the playbook_run_id\n    playbook_run_id = phantom.playbook(playbook=\"local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATEKTBCS-URL\", container=container, name=f\"FortiGate_Block_URL_{len(URL_LIST_TO_CONTAIN)}\", callback=Sleep)\n\n    return",
                        "custom_join": "",
                        "custom_name": "FortiGate Block URL",
                        "description": "FortiGate Block URL",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e975c1e6-37ca-44cc-9ce9-6b0ef2326cf0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2131,
                        "line_start": 2121,
                        "message": "Configuring now",
                        "name": "test-nploywon-mfec-dummy-block-url",
                        "notes": "FortiGate Block URL",
                        "number": 1,
                        "order": 93,
                        "outPorts": [
                            "out"
                        ],
                        "playbook": "local/test-nploywon-mfec-dummy-block-url",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3500,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "FortiGate_Block_URL",
                        "scmName": "local",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "callplaybook",
                        "status": "warn",
                        "title": "Playbook",
                        "type": "coa.CallPlaybook",
                        "warn": false,
                        "z": 5379
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Prepare URL artifact"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Prepare_URL_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Prepare_URL_artifact() called')\n    \n    template = \"\"\"{{\\\"requestURL\\\": \\\"{0}\\\", \\\"requestURL_malicious\\\": \\\"True\\\"}}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Get_the_top_URL_from_the_array:custom_function:top_url\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Prepare_URL_artifact\", separator=\", \")\n\n    Add_URL_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt URL Containment, Sleep, Sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Prepare URL artifact",
                        "delimiter": ", ",
                        "description": "Prepare URL artifact",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ba702d6c-4caf-441b-97bf-1d4010f6d9c4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2087,
                        "line_start": 2071,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Prepare URL artifact",
                        "number": 55,
                        "order": 91,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Get_the_top_URL_from_the_array:custom_function:top_url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2940,
                            "y": 2240
                        },
                        "previous_function": "",
                        "previous_name": "Prepare_URL_artifact",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "warn",
                        "template": "{{\"requestURL\": \"{0}\", \"requestURL_malicious\": \"True\"}}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 5380
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add malicious IP to cust..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_malicious_IP_to_custom_list(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_malicious_IP_to_custom_list() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    IP_LIST_NAMES = [ \n        \"Firepower - IP to contain\",\n        #\"Fortigate - Src IP to contain\",\n        #\"Fortigate - Dest IP to contain\",\n        \"Fortimanager - Dest IP to contain\",\n        \"Fortimanager - Src IP to contain\",\n        \"PaloAlto - Dest IP to contain\",\n        \"PaloAlto - Src IP to contain\"\n    ]\n    \n    for IP_LIST_NAME in IP_LIST_NAMES:\n        for ip in filtered_results_item_1_0:\n            success, message, num_of_matching_row = phantom.check_list(list_name=IP_LIST_NAME, value=ip, case_sensitive=True, substring=False)\n            if num_of_matching_row == 0:\n                phantom.add_list(list_name=IP_LIST_NAME, values=[ip])\n                phantom.debug(f\"List: `{IP_LIST_NAME}`, IP: {ip}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    filter_35(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Prompt Block IP",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 9,
                        "custom_callback": "",
                        "custom_code": "def Add_malicious_IP_to_custom_list(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_malicious_IP_to_custom_list() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    IP_LIST_NAMES = [ \n        \"Firepower - IP to contain\",\n        #\"Fortigate - Src IP to contain\",\n        #\"Fortigate - Dest IP to contain\",\n        \"Fortimanager - Dest IP to contain\",\n        \"Fortimanager - Src IP to contain\",\n        \"PaloAlto - Dest IP to contain\",\n        \"PaloAlto - Src IP to contain\"\n    ]\n    \n    for IP_LIST_NAME in IP_LIST_NAMES:\n        for ip in filtered_results_item_1_0:\n            success, message, num_of_matching_row = phantom.check_list(list_name=IP_LIST_NAME, value=ip, case_sensitive=True, substring=False)\n            if num_of_matching_row == 0:\n                phantom.add_list(list_name=IP_LIST_NAME, values=[ip])\n                phantom.debug(f\"List: `{IP_LIST_NAME}`, IP: {ip}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    filter_35(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add malicious IP to custom list",
                        "description": "Add malicious IP to custom list",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d51666c7-9a59-4b92-8785-980eff3dfb02",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1897,
                        "line_start": 1861,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add IP to custom list",
                        "number": 1,
                        "order": 84,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_28:condition_1:IP_Reputation_on_VT_v3:action_result.parameter.ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2460,
                            "y": 1140
                        },
                        "previous_function": "",
                        "previous_name": "Add_malicious_IP_to_custom_list",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n\n    IP_LIST_NAMES = [ \n        \"Firepower - IP to contain\",\n        #\"Fortigate - Src IP to contain\",\n        #\"Fortigate - Dest IP to contain\",\n        \"Fortimanager - Dest IP to contain\",\n        \"Fortimanager - Src IP to contain\",\n        \"PaloAlto - Dest IP to contain\",\n        \"PaloAlto - Src IP to contain\"\n    ]\n    \n    for IP_LIST_NAME in IP_LIST_NAMES:\n        for ip in filtered_results_item_1_0:\n            success, message, num_of_matching_row = phantom.check_list(list_name=IP_LIST_NAME, value=ip, case_sensitive=True, substring=False)\n            if num_of_matching_row == 0:\n                phantom.add_list(list_name=IP_LIST_NAME, values=[ip])\n                phantom.debug(f\"List: `{IP_LIST_NAME}`, IP: {ip}\")\n\n",
                        "warn": false,
                        "z": 5381
                    }
                ]
            },
            "notes": "Inputs:\nTriggered by parent playbook.\n\nInteractions:\nPhantom, VirusTotal, Splunk, Anomali ThreatStream\n\nActions:\nFile Reputation, URL Reputation, IP Reputation, Domain Reputation, Run Query, Update artifact, Add note\nArtifacts:\nP1: Perform enrichment tasks on the indicatorsFilter out deviceHostname"
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-10-05T04:02:48.985977+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}