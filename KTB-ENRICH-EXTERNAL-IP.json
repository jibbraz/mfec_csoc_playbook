{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "import ipaddress",
            "description": "USE CASE: This playbook will perform enrichment tasks on the indicators",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'cf_local_Set_last_automated_action_1' block\n    cf_local_Set_last_automated_action_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e7d1249-fc1d-4b42-b2e0-46c87f70f4f9",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 24,
                        "line_start": 16,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -740,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "90cbcfd5-3b82-46a7-9eb1-a93458211543",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6152a89f-026e-4f15-9054-b42ae1e9cf5a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "662c7804-75e1-4b4e-9ab1-ec7298744974",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 54
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation ext IP TS, WhoIS ext IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5ef985c8-0576-4193-873d-441f0282b295",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 387,
                        "line_start": 374,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 11,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2180,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1299
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "80d7483c-412f-469a-a0cd-ec829aa85afd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e7d1249-fc1d-4b42-b2e0-46c87f70f4f9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2374
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3dc1066b-93c1-435d-8699-35fec84dd0cb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2cd3ce47-6ea3-439f-978f-f3bf233c5c71",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2377
                    },
                    {
                        ".scmName/text": "local",
                        "Container_id-0": "container:id",
                        "a_status-1": "Enriched",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "Set_last_automated_acti..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_Set_last_automated_action_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_Set_last_automated_action_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"Enriched\",\n        ],\n    ]\n\n    parameters = []\n\n    literal_values_0_0 = [item[0] for item in literal_values_0]\n    container_property_0_0 = [item[0] for item in container_property_0]\n\n    parameters.append({\n        'a_status': literal_values_0_0,\n        'Container_id': container_property_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/Set_last_automated_action\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/Set_last_automated_action', parameters=parameters, name='cf_local_Set_last_automated_action_1', callback=Filter_out_external_ip)\n\n    return",
                        "callback_code": "",
                        "callback_start": 2649,
                        "callsback": true,
                        "cfDisplayPath": "local/Set_last_automated_action",
                        "cfInputs": {
                            "Container_id": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            },
                            "a_status": {
                                "collectionType": "literal_values",
                                "dataPath": "Enriched",
                                "paramName": "literal_values_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 26,
                        "customFunction": "local/Set_last_automated_action",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 239,
                        "line_start": 201,
                        "message": "Configuring now",
                        "name": "Set_last_automated_action",
                        "notes": "",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -480,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_Set_last_automated_action_1",
                        "selectedCustomFunction": {
                            "description": "set custom field last_automated_action",
                            "draftMode": false,
                            "id": 111,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 111,
                                    "description": "",
                                    "id": 205,
                                    "input_type": "list",
                                    "name": "Container_id",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [],
                                    "custom_function": 111,
                                    "description": "",
                                    "id": 206,
                                    "input_type": "list",
                                    "name": "a_status",
                                    "placeholder": ""
                                }
                            ],
                            "name": "Set_last_automated_action",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [],
                                    "custom_function": 111,
                                    "data_path": "res",
                                    "description": "",
                                    "id": 97
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-ALERT-ATTIVO-01",
                                        "draft_mode": false,
                                        "id": 3007,
                                        "name": "PLAYBOOK-INVESTIGATE-ALERT-ATTIVO-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/test update filed",
                                        "draft_mode": false,
                                        "id": 2171,
                                        "name": "test update filed",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INCIDENT-CLOUD-01",
                                        "draft_mode": false,
                                        "id": 2620,
                                        "name": "PLAYBOOK-CONTAIN-INCIDENT-CLOUD-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/01-Contain-Approve-Playbook",
                                        "draft_mode": false,
                                        "id": 3148,
                                        "name": "01-Contain-Approve-Playbook",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB -Triage Playbook for Attivo Label",
                                        "draft_mode": false,
                                        "id": 3167,
                                        "name": "KTB -Triage Playbook for Attivo Label",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/02-Master Malware",
                                        "draft_mode": false,
                                        "id": 3294,
                                        "name": "02-Master Malware",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-ALERT-SPLUNK-AD-01",
                                        "draft_mode": false,
                                        "id": 3201,
                                        "name": "PLAYBOOK-INVESTIGATE-ALERT-SPLUNK-AD-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-DATA-01",
                                        "draft_mode": false,
                                        "id": 3232,
                                        "name": "PLAYBOOK-INVESTIGATE-DATA-01",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 2513
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_external_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_external_ip() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.external_ip\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_external_ip:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        IP_Reputation_ext_IP_VT(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        WhoIS_ext_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out external_ip",
                        "description": "Filter out external_ip",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2cd3ce47-6ea3-439f-978f-f3bf233c5c71",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 46,
                        "line_start": 27,
                        "name": "filter",
                        "notes": "Filter out external_ip",
                        "number": 2,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.external_ip",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_external_ip",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2520
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4de20893-73c0-42e3-a67b-8d9ff8b3f44e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2cd3ce47-6ea3-439f-978f-f3bf233c5c71",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6152a89f-026e-4f15-9054-b42ae1e9cf5a",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2521
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "924a4309-56f8-4c20-b532-3510ffdf20d1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "662c7804-75e1-4b4e-9ab1-ec7298744974",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a179a447-70cf-47b0-8141-f70983b83f0c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2532
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 32
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_32(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_32() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [1, \"==\", 1],\n        ],\n        name=\"filter_32:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Collect_all_results_ext_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation ext IP TS, WhoIS ext IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a179a447-70cf-47b0-8141-f70983b83f0c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_filter_32(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_filter_32() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['IP_Reputation_ext_IP_TS', 'WhoIS_ext_IP']):\n        \n        # call connected block \"filter_32\"\n        filter_32(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 257,
                        "line_end": 268,
                        "line_start": 239,
                        "name": "filter",
                        "notes": "",
                        "number": 32,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "1",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 980,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "filter_32",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2538
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "08698041-38f1-4380-a409-f05b80ede9e9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a179a447-70cf-47b0-8141-f70983b83f0c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "40710b23-daea-4ff2-a277-d09d4b4e8004",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2539
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.as_owner",
                                        "data_type": "string",
                                        "example_values": [
                                            "Orange"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.asn",
                                        "data_type": "numeric",
                                        "example_values": [
                                            3215
                                        ]
                                    },
                                    {
                                        "column_name": "Continent",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.attributes.continent",
                                        "data_type": "string",
                                        "example_values": [
                                            "EU"
                                        ]
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.attributes.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "FR"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "A domain seen in a CnC panel URL for the Oski malware resolved to this IP address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "benkow.cc"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1622592000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "CnC Panel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "29d3fd00029d29d00042d43d00041d598ac0c1012db967bb1ad0ff2491b3ae"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "a60f993e5b931eed2a66b7aef3c70912cd032acbd2c8791021a3c8cb90b38c579d5fa02d04e4e897b1762981b455d77cea92c56bcf902451a76148582a1e80acc1aeb2a0d72f7e8db8739f874e83a48553311eb3cfe48a0d065a309cedf35930ae3e2cb0d4dca8dba64dc7b5f707debac4f28ce313db8623e235790002b37a8dbc63c99276335c4a59faf1957d5384fc318c56b159e51213c21699e328821f64efc433d74372962d6d160f92b5f1dbbc4e8e11c74ce673e8c52f6270c40c1192cf7bf2bbf44660818b8999085388ac8949332f178b294d409334e8d70ca051a5a7ed53df82e58a46ee2c07afa08f0e0f9ea87311f1a8e79ad3406292e811a5c6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef007600eec095ee8d72640f92e3c3b91bc712a3696a097b4b6a1a14"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "8a747faf85cdee95cd3d9cd0e24614f371351d27"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/repo/certs/gts1c3.der"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1c3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "a8de321f3772284cf53c30f681f14bf6ed035cd9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.exponent",
                                        "data_type": "string",
                                        "example_values": [
                                            "010001"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.key_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2048
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.modulus",
                                        "data_type": "string",
                                        "example_values": [
                                            "00befdaf74bea72e3cb68a2a6bb74521f2ee951338a5d9f6a738f98996e2d72295009f544112aa918e99b93ab48f073322711b992887a46211dc853c48e2f22372419c8841221f3dad453289c2331d3b4c881c67660ecc5093bf601130a7aef9f54419ee8e64754c3b07125893af7dabf0bb0f7232d0226605620e12a4416fb22d5c9182394941b218009f6fe2d28d170a1042a0aa726eb9b052a84a57597a4b9a556be00c004ba024bd310d9e4faf17482b137f81b35f470ead7d7d9e418a6653799e9d04f9fd1d4b588809c0e2ac0680f406ba8f4358a143e3cacc7fe792ab9655cc73729dbcd3d7362a7ffe6f903942dc3d588c97917930a9b28b8561c9219b"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "25c739f93320b7b0a00000000f2c8e9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1509
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns.google"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "3336113948b043f8f258cceebe9eb7a8dd7d06de"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "5349f6e0344c78df40dfcfc2ecd6f83d01b4bcf1def8c548c87691211d904f05"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-10-04 03:52:55"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-07-12 03:52:56"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1628548284
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "column_name": "Network",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.attributes.network",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.0.0.0/12"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.regional_internet_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "RIPE NCC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "NetRange: 2.0.0.0 - 2.255.255.255\nCIDR: 2.0.0.0/8\nNetName: 2-RIPE\nNetHandle: NET-2-0-0-0-1\nParent: ()\nNetType: Allocated to RIPE NCC\nOriginAS: \nOrganization: RIPE Network Coordination Centre (RIPE)\nRegDate: 2009-09-29\nUpdated: 2009-09-30\nComment: These addresses have been further assigned to users in\nComment: the RIPE NCC region. Contact information can be found in\nComment: the RIPE database at http://www.ripe.net/whois\nRef: https://rdap.arin.net/registry/ip/2.0.0.0\nResourceLink: https://apps.db.ripe.net/search/query.html\nResourceLink: whois.ripe.net\nOrgName: RIPE Network Coordination Centre\nOrgId: RIPE\nAddress: P.O. Box 10096\nCity: Amsterdam\nStateProv: \nPostalCode: 1001EB\nCountry: NL\nRegDate: \nUpdated: 2013-07-29\nRef: https://rdap.arin.net/registry/entity/RIPE\nReferralServer: whois://whois.ripe.net\nResourceLink: https://apps.db.ripe.net/search/query.html\nOrgAbuseHandle: ABUSE3850-ARIN\nOrgAbuseName: Abuse Contact\nOrgAbusePhone: +31205354444 \nOrgAbuseEmail: abuse@ripe.net\nOrgAbuseRef: https://rdap.arin.net/registry/entity/ABUSE3850-ARIN\nOrgTechHandle: RNO29-ARIN\nOrgTechName: RIPE NCC Operations\nOrgTechPhone: +31 20 535 4444 \nOrgTechEmail: hostmaster@ripe.net\nOrgTechRef: https://rdap.arin.net/registry/entity/RNO29-ARIN\ninetnum: 2.3.0.0 - 2.3.7.255\nnetname: IP2000-ADSL-BAS\ndescr: POP CLE\ncountry: FR\nadmin-c: WITR1-RIPE\ntech-c: WITR1-RIPE\nstatus: ASSIGNED PA\nremarks: for hacking, spamming or security problems send mail to\nremarks: abuse@orange.fr\nmnt-by: FT-BRX\ncreated: 2017-07-27T08:58:11Z\nlast-modified: 2017-07-27T08:58:11Z\nsource: RIPE\nrole: Wanadoo France Technical Role\naddress: FRANCE TELECOM/SCR\naddress: 48 rue Camille Desmoulins\naddress: 92791 ISSY LES MOULINEAUX CEDEX 9\naddress: FR\nphone: +33 1 58 88 50 00\nabuse-mailbox: abuse@orange.fr\nadmin-c: BRX1-RIPE\ntech-c: BRX1-RIPE\nnic-hdl: WITR1-RIPE\nmnt-by: FT-BRX\ncreated: 2001-12-04T17:57:08Z\nlast-modified: 2013-07-16T14:09:50Z\nsource: RIPE # Filtered\nroute: 2.3.0.0/16\ndescr: France Telecom Orange\norigin: AS3215\nmnt-by: RAIN-TRANSPAC\nmnt-by: FT-BRX\ncreated: 2012-11-22T09:32:05Z\nlast-modified: 2012-11-22T09:32:05Z\nsource: RIPE\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/ip_addresses/2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip_address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 86, Malicious: 0, Suspicious: 0, Undetected: 11"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation ext IP VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_ext_IP_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_ext_IP_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'IP_Reputation_ext_IP_VT' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip', 'filtered-data:Filter_out_external_ip:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_ext_IP_VT' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'ip': filtered_artifacts_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=IP_Reputation_ext_IP_TS, name=\"IP_Reputation_ext_IP_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "IP Reputation ext IP VT",
                        "delay": "0",
                        "description": "IP Reputation ext IP VT",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6152a89f-026e-4f15-9054-b42ae1e9cf5a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 72,
                        "line_start": 49,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation ext IP VT",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 200,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_ext_IP_VT",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2541
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b8269bca-ffc3-4f15-8bd5-e62381570188",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "40710b23-daea-4ff2-a277-d09d4b4e8004",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "96d330a2-65d6-4b0a-9cdb-8309a0caea84",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2551
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "31566e9d-c17f-4dd6-a5a7-41cf444384fb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "96d330a2-65d6-4b0a-9cdb-8309a0caea84",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2bfdd9c0-e36a-4593-9d28-9ea0e5fb3552",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2555
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update ext IP artifact"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_ext_IP_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_ext_IP_artifact() called')\n    \n    Collect_all_results_ext_IP__all_results_ext_IP = json.loads(phantom.get_run_data(key='Collect_all_results_ext_IP:all_results_ext_IP'))\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    data = Collect_all_results_ext_IP__all_results_ext_IP\n    malicious_artifact_list = []\n    \n    for artifact in data:\n        if data[artifact]['ts']['threat_types'] != [] or (data[artifact]['vt']['summary_malicious'] != None and data[artifact]['vt']['summary_malicious'] > 2):\n            malicious_artifact_list.append(artifact)\n    \n    parameters = []\n    cef_json = {\"external_ip_malicious\" : \"True\"}\n    for artifact in malicious_artifact_list:\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': artifact,\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n        \n    if malicious_artifact_list:\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ext_ip\")\n\n    parameters = []\n    for artifact in malicious_artifact_list:\n        parameters.append({\n            'artifact_id': artifact,\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n    \n    if malicious_artifact_list:\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation ext IP TS, WhoIS ext IP",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "def Update_ext_IP_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_ext_IP_artifact() called')\n    \n    Collect_all_results_ext_IP__all_results_ext_IP = json.loads(phantom.get_run_data(key='Collect_all_results_ext_IP:all_results_ext_IP'))\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    data = Collect_all_results_ext_IP__all_results_ext_IP\n    malicious_artifact_list = []\n    \n    for artifact in data:\n        if data[artifact]['ts']['threat_types'] != [] or (data[artifact]['vt']['summary_malicious'] != None and data[artifact]['vt']['summary_malicious'] > 2):\n            malicious_artifact_list.append(artifact)\n    \n    parameters = []\n    cef_json = {\"external_ip_malicious\" : \"True\"}\n    for artifact in malicious_artifact_list:\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': artifact,\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n        \n    if malicious_artifact_list:\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ext_ip\")\n\n    parameters = []\n    for artifact in malicious_artifact_list:\n        parameters.append({\n            'artifact_id': artifact,\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n    \n    if malicious_artifact_list:\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update ext IP artifact",
                        "description": "Update ext IP artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2bfdd9c0-e36a-4593-9d28-9ea0e5fb3552",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 201,
                        "line_start": 148,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update ext IP artifact",
                        "number": 4,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "Collect_all_results_ext_IP:custom_function:all_results_ext_IP"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1840,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Update_ext_IP_artifact",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    data = Collect_all_results_ext_IP__all_results_ext_IP\n    malicious_artifact_list = []\n    \n    for artifact in data:\n        if data[artifact]['ts']['threat_types'] != [] or (data[artifact]['vt']['summary_malicious'] != None and data[artifact]['vt']['summary_malicious'] > 2):\n            malicious_artifact_list.append(artifact)\n    \n    parameters = []\n    cef_json = {\"external_ip_malicious\" : \"True\"}\n    for artifact in malicious_artifact_list:\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': artifact,\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n        \n    if malicious_artifact_list:\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ext_ip\")\n\n    parameters = []\n    for artifact in malicious_artifact_list:\n        parameters.append({\n            'artifact_id': artifact,\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n    \n    if malicious_artifact_list:\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n",
                        "warn": false,
                        "z": 2556
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5544ae49-ef21-4bd9-beb3-354a3c65a216",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2bfdd9c0-e36a-4593-9d28-9ea0e5fb3552",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2558
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "77b79560-a082-4dc6-94a0-9351ead4011e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2cd3ce47-6ea3-439f-978f-f3bf233c5c71",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d9ef0595-2502-4ea3-887f-65313dd0e506",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2560
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0d5b1fdd-d1a6-47bb-9a5e-1d8188dbddaa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d9ef0595-2502-4ea3-887f-65313dd0e506",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a179a447-70cf-47b0-8141-f70983b83f0c",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2565
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note ext IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_ext_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_ext_IP() called')\n    \n    Collect_all_results_ext_IP__all_results_ext_IP = json.loads(phantom.get_run_data(key='Collect_all_results_ext_IP:all_results_ext_IP'))\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    data = Collect_all_results_ext_IP__all_results_ext_IP\n    content = \"\"\n    for artifact in data:\n        content += f\"Source IP address: {data[artifact]['ts']['ip']}\\n\\n\"\n        content += f\"**VirusTotal IP Reputation**\\n\" \n        content += f\"- Malicious count: {data[artifact]['vt']['summary_malicious']}\\n\\n\"\n        content += f\"- Summary: {'N/A' if data[artifact]['vt']['summary_malicious'] == None else 'MALICIOUS' if data[artifact]['vt']['summary_malicious'] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"**ThreatStream IP Repuation**\\n\"\n        content += f\"- Threat type: {', '.join(data[artifact]['ts']['threat_types']) if data[artifact]['ts']['threat_types'] != [] else '-'}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if len(data[artifact]['ts']['threat_types']) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"**WhoIS IP**\\n\"\n        content += f\"- Summary: {data[artifact]['whois_ts']['summary']}\\n\\n\"\n        content += \"---\\n\"\n        \n    #phantom.debug(filtered_artifacts_item_1_1[0])\n    #phantom.debug(str(results_item_1_0[0]))\n    #phantom.debug(str(results_item_2_0[0]))\n    #phantom.debug(str(results_item_3_0[0]))\n    \n    note_title = \"External IP Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_ext_IP_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation ext IP TS, WhoIS ext IP",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "def Add_note_ext_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_ext_IP() called')\n    \n    Collect_all_results_ext_IP__all_results_ext_IP = json.loads(phantom.get_run_data(key='Collect_all_results_ext_IP:all_results_ext_IP'))\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    data = Collect_all_results_ext_IP__all_results_ext_IP\n    content = \"\"\n    for artifact in data:\n        content += f\"Source IP address: {data[artifact]['ts']['ip']}\\n\\n\"\n        content += f\"**VirusTotal IP Reputation**\\n\" \n        content += f\"- Malicious count: {data[artifact]['vt']['summary_malicious']}\\n\\n\"\n        content += f\"- Summary: {'N/A' if data[artifact]['vt']['summary_malicious'] == None else 'MALICIOUS' if data[artifact]['vt']['summary_malicious'] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"**ThreatStream IP Repuation**\\n\"\n        content += f\"- Threat type: {', '.join(data[artifact]['ts']['threat_types']) if data[artifact]['ts']['threat_types'] != [] else '-'}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if len(data[artifact]['ts']['threat_types']) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"**WhoIS IP**\\n\"\n        content += f\"- Summary: {data[artifact]['whois_ts']['summary']}\\n\\n\"\n        content += \"---\\n\"\n        \n    #phantom.debug(filtered_artifacts_item_1_1[0])\n    #phantom.debug(str(results_item_1_0[0]))\n    #phantom.debug(str(results_item_2_0[0]))\n    #phantom.debug(str(results_item_3_0[0]))\n    \n    note_title = \"External IP Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note ext IP",
                        "description": "Add note ext IP",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "96d330a2-65d6-4b0a-9cdb-8309a0caea84",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 259,
                        "legacy": true,
                        "line_end": 145,
                        "line_start": 102,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note ext IP",
                        "number": 3,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "Collect_all_results_ext_IP:custom_function:all_results_ext_IP"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1520,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_ext_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    data = Collect_all_results_ext_IP__all_results_ext_IP\n    content = \"\"\n    for artifact in data:\n        content += f\"Source IP address: {data[artifact]['ts']['ip']}\\n\\n\"\n        content += f\"**VirusTotal IP Reputation**\\n\" \n        content += f\"- Malicious count: {data[artifact]['vt']['summary_malicious']}\\n\\n\"\n        content += f\"- Summary: {'N/A' if data[artifact]['vt']['summary_malicious'] == None else 'MALICIOUS' if data[artifact]['vt']['summary_malicious'] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"**ThreatStream IP Repuation**\\n\"\n        content += f\"- Threat type: {', '.join(data[artifact]['ts']['threat_types']) if data[artifact]['ts']['threat_types'] != [] else '-'}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if len(data[artifact]['ts']['threat_types']) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"**WhoIS IP**\\n\"\n        content += f\"- Summary: {data[artifact]['whois_ts']['summary']}\\n\\n\"\n        content += \"---\\n\"\n        \n    #phantom.debug(filtered_artifacts_item_1_1[0])\n    #phantom.debug(str(results_item_1_0[0]))\n    #phantom.debug(str(results_item_2_0[0]))\n    #phantom.debug(str(results_item_3_0[0]))\n    \n    note_title = \"External IP Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n",
                        "warn": false,
                        "z": 2571
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Collect all results ext IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Collect_all_results_ext_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Collect_all_results_ext_IP() called')\n    \n    input_parameter_0 = \"\"\n\n    Collect_all_results_ext_IP__all_results_ext_IP = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    all_results_ext_IP = {}\n    # Get results from VT\n    results_data_vt = phantom.collect2(scope=\"all\", container=container, datapath=['IP_Reputation_ext_IP_VT:action_result.parameter.context.artifact_id', 'IP_Reputation_ext_IP_VT:action_result.summary.malicious'], action_results=results)\n    for row in results_data_vt:\n        #phantom.debug(f\"{row[0]} ---- {row[1]}\")\n        artifact_id = row[0]\n        summary_malicious = row[1]\n        if all_results_ext_IP.get(artifact_id, None) == None:\n            all_results_ext_IP[artifact_id] = {}\n        if all_results_ext_IP[artifact_id].get('vt', None) == None:\n            summary_malicious = 0 if summary_malicious == None else summary_malicious\n            all_results_ext_IP[artifact_id]['vt'] = {'summary_malicious': summary_malicious}\n        else:\n            all_results_ext_IP[artifact_id]['vt']['summary_malicious'] = 0 if all_results_ext_IP[artifact_id]['vt']['summary_malicious'] == None else all_results_ext_IP[artifact_id]['vt']['summary_malicious']\n            all_results_ext_IP[artifact_id] = {'vt': {'summary_malicious': max(summary_malicious, all_results_ext_IP[artifact_id]['vt']['summary_malicious'])}}\n    \n    # Get results from TS\n    results_data_ts = phantom.collect2(scope=\"all\", container=container, datapath=['IP_Reputation_ext_IP_TS:action_results'], action_results=results)\n    results_item_ts = [item[0] for item in results_data_ts]\n    for asset in results_item_ts:\n        for artifact in asset:\n            artifact_id = artifact['parameter']['context']['artifact_id']\n            ip = artifact['parameter']['ip']\n            status = artifact['status']\n            \n            if all_results_ext_IP.get(artifact_id, None) == None:\n                all_results_ext_IP[artifact_id] = {}\n            if all_results_ext_IP[artifact_id].get('ts', None) == None:\n                all_results_ext_IP[artifact_id]['ts'] = {\n                   'ip': ip,\n                   'status': status,\n                   'threat_types': []\n               }\n            \n            for data in artifact['data']:\n                threat_type = data.get('threat_type', None)\n                status = data.get('status', None)\n                if threat_type and status != 'falsepos' and threat_type not in all_results_ext_IP[artifact_id]['ts']['threat_types']:\n                    all_results_ext_IP[artifact_id]['ts']['threat_types'].append(threat_type)\n                #phantom.debug(f\"artifact: {artifact['parameter']['context']['artifact_id']}, domain: {artifact['parameter']['url']}, status: {artifact['status']}, threat_type: {threat_types}\")\n\n    # Get results from WhoIS TS\n    results_data_whois_ts = phantom.collect2(scope=\"all\", container=container, datapath=['WhoIS_ext_IP:action_result.parameter.context.artifact_id', 'WhoIS_ext_IP:action_result.message'], action_results=results)\n    for row in results_data_whois_ts:\n        #phantom.debug(f\"{row[0]} ---- {row[1]}\")\n        artifact_id = row[0]\n        summary = row[1]\n        if all_results_ext_IP.get(artifact_id, None) == None:\n            all_results_ext_IP[artifact_id] = {}\n        if all_results_ext_IP[artifact_id].get('whois_ts', None) == None:\n            summary = '-' if summary == None else summary\n            all_results_ext_IP[artifact_id]['whois_ts'] = {'summary': summary}\n    Collect_all_results_ext_IP__all_results_ext_IP = all_results_ext_IP\n    #phantom.debug(Collect_all_results_ext_IP__all_results_ext_IP)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Collect_all_results_ext_IP:all_results_ext_IP', value=json.dumps(Collect_all_results_ext_IP__all_results_ext_IP))\n    Add_note_ext_IP(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation ext IP TS, WhoIS ext IP",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def Collect_all_results_ext_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Collect_all_results_ext_IP() called')\n    \n    input_parameter_0 = \"\"\n\n    Collect_all_results_ext_IP__all_results_ext_IP = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    all_results_ext_IP = {}\n    # Get results from VT\n    results_data_vt = phantom.collect2(scope=\"all\", container=container, datapath=['IP_Reputation_ext_IP_VT:action_result.parameter.context.artifact_id', 'IP_Reputation_ext_IP_VT:action_result.summary.malicious'], action_results=results)\n    for row in results_data_vt:\n        #phantom.debug(f\"{row[0]} ---- {row[1]}\")\n        artifact_id = row[0]\n        summary_malicious = row[1]\n        if all_results_ext_IP.get(artifact_id, None) == None:\n            all_results_ext_IP[artifact_id] = {}\n        if all_results_ext_IP[artifact_id].get('vt', None) == None:\n            summary_malicious = 0 if summary_malicious == None else summary_malicious\n            all_results_ext_IP[artifact_id]['vt'] = {'summary_malicious': summary_malicious}\n        else:\n            all_results_ext_IP[artifact_id]['vt']['summary_malicious'] = 0 if all_results_ext_IP[artifact_id]['vt']['summary_malicious'] == None else all_results_ext_IP[artifact_id]['vt']['summary_malicious']\n            all_results_ext_IP[artifact_id] = {'vt': {'summary_malicious': max(summary_malicious, all_results_ext_IP[artifact_id]['vt']['summary_malicious'])}}\n    \n    # Get results from TS\n    results_data_ts = phantom.collect2(scope=\"all\", container=container, datapath=['IP_Reputation_ext_IP_TS:action_results'], action_results=results)\n    results_item_ts = [item[0] for item in results_data_ts]\n    for asset in results_item_ts:\n        for artifact in asset:\n            artifact_id = artifact['parameter']['context']['artifact_id']\n            ip = artifact['parameter']['ip']\n            status = artifact['status']\n            \n            if all_results_ext_IP.get(artifact_id, None) == None:\n                all_results_ext_IP[artifact_id] = {}\n            if all_results_ext_IP[artifact_id].get('ts', None) == None:\n                all_results_ext_IP[artifact_id]['ts'] = {\n                   'ip': ip,\n                   'status': status,\n                   'threat_types': []\n               }\n            \n            for data in artifact['data']:\n                threat_type = data.get('threat_type', None)\n                status = data.get('status', None)\n                if threat_type and status != 'falsepos' and threat_type not in all_results_ext_IP[artifact_id]['ts']['threat_types']:\n                    all_results_ext_IP[artifact_id]['ts']['threat_types'].append(threat_type)\n                #phantom.debug(f\"artifact: {artifact['parameter']['context']['artifact_id']}, domain: {artifact['parameter']['url']}, status: {artifact['status']}, threat_type: {threat_types}\")\n\n    # Get results from WhoIS TS\n    results_data_whois_ts = phantom.collect2(scope=\"all\", container=container, datapath=['WhoIS_ext_IP:action_result.parameter.context.artifact_id', 'WhoIS_ext_IP:action_result.message'], action_results=results)\n    for row in results_data_whois_ts:\n        #phantom.debug(f\"{row[0]} ---- {row[1]}\")\n        artifact_id = row[0]\n        summary = row[1]\n        if all_results_ext_IP.get(artifact_id, None) == None:\n            all_results_ext_IP[artifact_id] = {}\n        if all_results_ext_IP[artifact_id].get('whois_ts', None) == None:\n            summary = '-' if summary == None else summary\n            all_results_ext_IP[artifact_id]['whois_ts'] = {'summary': summary}\n    Collect_all_results_ext_IP__all_results_ext_IP = all_results_ext_IP\n    #phantom.debug(Collect_all_results_ext_IP__all_results_ext_IP)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Collect_all_results_ext_IP:all_results_ext_IP', value=json.dumps(Collect_all_results_ext_IP__all_results_ext_IP))\n    Add_note_ext_IP(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Collect all results ext IP",
                        "description": "Collect all results ext IP",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "40710b23-daea-4ff2-a277-d09d4b4e8004",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 348,
                        "line_start": 271,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Collect all results ext IP",
                        "number": 32,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "all_results_ext_IP"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1200,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Collect_all_results_ext_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    \n    all_results_ext_IP = {}\n    # Get results from VT\n    results_data_vt = phantom.collect2(scope=\"all\", container=container, datapath=['IP_Reputation_ext_IP_VT:action_result.parameter.context.artifact_id', 'IP_Reputation_ext_IP_VT:action_result.summary.malicious'], action_results=results)\n    for row in results_data_vt:\n        #phantom.debug(f\"{row[0]} ---- {row[1]}\")\n        artifact_id = row[0]\n        summary_malicious = row[1]\n        if all_results_ext_IP.get(artifact_id, None) == None:\n            all_results_ext_IP[artifact_id] = {}\n        if all_results_ext_IP[artifact_id].get('vt', None) == None:\n            summary_malicious = 0 if summary_malicious == None else summary_malicious\n            all_results_ext_IP[artifact_id]['vt'] = {'summary_malicious': summary_malicious}\n        else:\n            all_results_ext_IP[artifact_id]['vt']['summary_malicious'] = 0 if all_results_ext_IP[artifact_id]['vt']['summary_malicious'] == None else all_results_ext_IP[artifact_id]['vt']['summary_malicious']\n            all_results_ext_IP[artifact_id] = {'vt': {'summary_malicious': max(summary_malicious, all_results_ext_IP[artifact_id]['vt']['summary_malicious'])}}\n    \n    # Get results from TS\n    results_data_ts = phantom.collect2(scope=\"all\", container=container, datapath=['IP_Reputation_ext_IP_TS:action_results'], action_results=results)\n    results_item_ts = [item[0] for item in results_data_ts]\n    for asset in results_item_ts:\n        for artifact in asset:\n            artifact_id = artifact['parameter']['context']['artifact_id']\n            ip = artifact['parameter']['ip']\n            status = artifact['status']\n            \n            if all_results_ext_IP.get(artifact_id, None) == None:\n                all_results_ext_IP[artifact_id] = {}\n            if all_results_ext_IP[artifact_id].get('ts', None) == None:\n                all_results_ext_IP[artifact_id]['ts'] = {\n                   'ip': ip,\n                   'status': status,\n                   'threat_types': []\n               }\n            \n            for data in artifact['data']:\n                threat_type = data.get('threat_type', None)\n                status = data.get('status', None)\n                if threat_type and status != 'falsepos' and threat_type not in all_results_ext_IP[artifact_id]['ts']['threat_types']:\n                    all_results_ext_IP[artifact_id]['ts']['threat_types'].append(threat_type)\n                #phantom.debug(f\"artifact: {artifact['parameter']['context']['artifact_id']}, domain: {artifact['parameter']['url']}, status: {artifact['status']}, threat_type: {threat_types}\")\n\n    # Get results from WhoIS TS\n    results_data_whois_ts = phantom.collect2(scope=\"all\", container=container, datapath=['WhoIS_ext_IP:action_result.parameter.context.artifact_id', 'WhoIS_ext_IP:action_result.message'], action_results=results)\n    for row in results_data_whois_ts:\n        #phantom.debug(f\"{row[0]} ---- {row[1]}\")\n        artifact_id = row[0]\n        summary = row[1]\n        if all_results_ext_IP.get(artifact_id, None) == None:\n            all_results_ext_IP[artifact_id] = {}\n        if all_results_ext_IP[artifact_id].get('whois_ts', None) == None:\n            summary = '-' if summary == None else summary\n            all_results_ext_IP[artifact_id]['whois_ts'] = {'summary': summary}\n    Collect_all_results_ext_IP__all_results_ext_IP = all_results_ext_IP\n    #phantom.debug(Collect_all_results_ext_IP__all_results_ext_IP)\n\n",
                        "warn": false,
                        "z": 2572
                    },
                    {
                        "action": "whois ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip"
                        },
                        "angle": 0,
                        "app": "WHOIS RDAP",
                        "appid": "7241ecbd-4a79-4a86-99eb-b2ed8f3e7686",
                        "approver": "",
                        "assets": [
                            {
                                "action": "whois ip",
                                "actions": [
                                    "test connectivity",
                                    "whois ip"
                                ],
                                "active": true,
                                "app_name": "WHOIS RDAP",
                                "app_version": "2.0.5",
                                "appid": "7241ecbd-4a79-4a86-99eb-b2ed8f3e7686",
                                "asset_name": "whois_rdap",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip"
                                },
                                "has_app": true,
                                "id": 116,
                                "loaded": false,
                                "missing": false,
                                "name": "whois_rdap",
                                "output": [
                                    {
                                        "column_name": "Asn",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Cidr",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.asn_cidr",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Country Code",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.asn_country_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Date",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.asn_date",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Asn Registry",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.asn_registry",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.entities.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Cidr",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.network.cidr",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 8,
                                        "data_path": "action_result.data.*.network.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.handle",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.ip_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.links.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 9,
                                        "data_path": "action_result.data.*.network.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.parent_handle",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Start Address",
                                        "column_order": 10,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.network.start_address",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "End Address",
                                        "column_order": 11,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.network.end_address",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.notices.*.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.notices.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.notices.*.links.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.remarks.*.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.remarks.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.remarks.*.links.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.status.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.events.*.action",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.events.*.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.network.events.*.actor",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.entities.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.handle",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.links.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.roles.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.status.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.events.*.action",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.events.*.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.events.*.actor",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.events_actor.*.action",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.events_actor.*.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.notices.*.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.notices.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.notices.*.links.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.remarks.*.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.remarks.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.remarks.*.links.*",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.address.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.address.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.email.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.email.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.kind",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.phone.*.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.phone.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.role",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.objects.*.contact.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.query",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_value": "8.8.8.8"
                                    },
                                    {
                                        "data_path": "action_result.summary.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.country_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.network.start_address",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.network.end_address",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.registry",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_value": 1
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_value": "Network: [{'start_address': '8.8.8.0', 'end_address': '8.8.8.255'}], Registry: test, Country code: US, Asn: 11111"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_value": 1
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Whois RDAP",
                                "product_vendor": "Generic",
                                "targets": "116",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "WhoIS ext IP"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def WhoIS_ext_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('WhoIS_ext_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'WhoIS_ext_IP' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip', 'filtered-data:Filter_out_external_ip:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'WhoIS_ext_IP' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'ip': filtered_artifacts_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"whois ip\", parameters=parameters, assets=['whois_rdap'], callback=join_filter_32, name=\"WhoIS_ext_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "WhoIS ext IP",
                        "delay": 0,
                        "description": "WhoIS ext IP",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d9ef0595-2502-4ea3-887f-65313dd0e506",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 374,
                        "line_start": 351,
                        "message": "Configuring now",
                        "name": "whois ip",
                        "notes": "WhoIS ext IP",
                        "number": 2,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 200,
                            "y": 20
                        },
                        "previous_function": "",
                        "previous_name": "WhoIS_ext_IP",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2573
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            },
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream cloud",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "16",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation ext IP TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_ext_IP_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_ext_IP_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'IP_Reputation_ext_IP_TS' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_external_ip:condition_1:artifact:*.cef.external_ip', 'filtered-data:Filter_out_external_ip:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_ext_IP_TS' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'ip': filtered_artifacts_item_1[0],\n                'limit': 1000,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['threatstream hybrid vm','threatstream cloud'], callback=join_filter_32, name=\"IP_Reputation_ext_IP_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 198,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "IP Reputation ext IP VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "IP Reputation ext IP TS",
                        "delay": 0,
                        "description": "IP Reputation ext IP TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "662c7804-75e1-4b4e-9ab1-ec7298744974",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 99,
                        "line_start": 75,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation ext IP TS",
                        "number": 2,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_ext_IP_TS",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2574
                    }
                ]
            },
            "notes": "Inputs:\nTriggered by parent playbook.\n\nInteractions:\nPhantom, VirusTotal, Splunk, Anomali ThreatStream\n\nActions:\nFile Reputation, URL Reputation, IP Reputation, Domain Reputation, Run Query, Update artifact, Add note\nArtifacts:\nP1: Perform enrichment tasks on the indicatorsFilter out deviceHostname"
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-05-31T09:13:30.990087+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}