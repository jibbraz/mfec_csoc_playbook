{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "USE CASE: This playbook will perform triage tasks, identify false positive; else perform enrichment,\ncontainment and notification",
            "edges": [
                {
                    "id": "port_9_to_port_15",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_4_to_port_2",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_7",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_3_to_port_14",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_0_to_port_6",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_4",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_1",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_5_to_port_1",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_7_to_port_10",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_8",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_13",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_13_to_port_12",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_12_to_port_11",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_11_to_port_9",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        },
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_15_to_port_1",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "a959508f3dff83ce99bbaefb6ab4e7f1c653ca97",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 200,
                    "y": -860
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 560,
                    "y": 2240
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Format data ro query",
                            "customNameId": 0,
                            "join": [],
                            "note": "Format data to query",
                            "separator": ", "
                        },
                        "functionId": 1,
                        "functionName": "format_data_ro_query",
                        "id": "10",
                        "parameters": [
                            "artifact:*.cef.sourceAddress"
                        ],
                        "template": "summariesonly=true allow_old_summaries=true max(_time) AS lastTime count FROM datamodel=Network_Traffic where (sourcetype=fortigate_traffic OR sourcetype=pan:traffic) AND All_Traffic.src_ip={0} AND (earliest=-4h@h latest=now) by  _time span=1h sourcetype All_Traffic.action \n| rename \"All_Traffic.*\" as \"*\"",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "format",
                    "warnings": {},
                    "x": 840,
                    "y": -80
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "Tstats query total numver",
                            "customNameId": 0,
                            "join": [],
                            "note": "tstat query total number"
                        },
                        "functionId": 7,
                        "functionName": "tstats_query_total_numver",
                        "id": "11",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Query_stats_total_count_for_last_1hour:action_result.data.*.count",
                                "note_format": "markdown",
                                "title": "Total count of  tstats run query"
                            }
                        }
                    },
                    "errors": {},
                    "id": "11",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 840,
                    "y": 1140
                },
                "12": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Query stats  total count for last 1hour",
                            "customNameId": 0,
                            "join": [],
                            "note": "Query stat for last 1 hour"
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "Query_stats_total_count_for_last_1hour",
                        "id": "12",
                        "parameters": {
                            "command": "tstats",
                            "display": "",
                            "parse_only": "",
                            "query": "format_data_to_query_total_count:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "action",
                    "warnings": {},
                    "x": 840,
                    "y": 820
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "Format data to query total count",
                            "customNameId": 0,
                            "join": [],
                            "note": "Format data to query total count",
                            "separator": ", "
                        },
                        "functionId": 2,
                        "functionName": "format_data_to_query_total_count",
                        "id": "13",
                        "parameters": [
                            "artifact:*.cef.sourceAddress"
                        ],
                        "template": "summariesonly=true allow_old_summaries=true count FROM datamodel=Network_Traffic where (sourcetype=fortigate_traffic OR sourcetype=pan:traffic) AND All_Traffic.src_ip={0} earliest=-4h@h latest=now\n| rename \"All_Traffic.*\" as \"*\"",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {},
                    "x": 840,
                    "y": 500
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_UC_SEND_EMAIL_CASE_PROMOTION_1",
                            "join": [],
                            "note": "Call Email Notification Playbook"
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_uc_send_email_case_promotion_1",
                        "id": "14",
                        "inputs": {},
                        "playbookName": "KTB UC SEND EMAIL CASE PROMOTION_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "playbook",
                    "warnings": {},
                    "x": 1320,
                    "y": -340
                },
                "15": {
                    "data": {
                        "advanced": {
                            "customName": "IOC is suspicious",
                            "customNameId": 0,
                            "description": "IOC is\nsuspicious",
                            "join": [],
                            "note": "IOC is\nsuspicious"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">=",
                                        "param": "Query_stats_total_count_for_last_1hour:action_result.data.*.count",
                                        "value": "1000"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.sourceAddres_malicious",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 5,
                        "functionName": "ioc_is_suspicious",
                        "id": "15",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "decision",
                    "warnings": {},
                    "x": 840,
                    "y": 1720
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Set status to In progress",
                            "customNameId": 0,
                            "join": [],
                            "note": "Set status to In progress"
                        },
                        "functionId": 5,
                        "functionName": "set_status_to_in_progress",
                        "id": "2",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "in progress"
                            }
                        }
                    },
                    "errors": {},
                    "id": "2",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 840,
                    "y": -900
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "note": "Promote event to case"
                        },
                        "functionId": 6,
                        "functionName": "promote_to_case_6",
                        "id": "3",
                        "type": "utility",
                        "utilities": {
                            "promote": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "templates",
                                        "description": "",
                                        "label": "template",
                                        "name": "template",
                                        "placeholder": "Select a template",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "promote to case",
                                "name": "promote",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "promote": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "template": "KTB Workbook"
                            }
                        }
                    },
                    "errors": {},
                    "id": "3",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 840,
                    "y": -600
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "If similar events found in last 7 days a",
                            "customNameId": 0,
                            "description": "If similar\nevents found\nin last 7 days\nand are false\npositive",
                            "join": [],
                            "note": "If similar\nevents found\nin last 7 days\nand are false\npositive"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "closed"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "if_similar_events_found_in_last_7_days_a",
                        "id": "4",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "decision",
                    "warnings": {},
                    "x": 200,
                    "y": -140
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "Call Contain Playbook",
                            "customNameId": 0,
                            "description": "Call Contain\nPlaybook",
                            "join": [],
                            "note": "Call Contain\nPlaybook"
                        },
                        "functionId": 1,
                        "functionName": "call_contain_playbook",
                        "id": "5",
                        "inputs": {},
                        "playbookName": "KTB - UC1 Malware - Contain Playbook_with _Internal-Contain",
                        "playbookRepoName": "local",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "playbook",
                    "warnings": {},
                    "x": 880,
                    "y": 1980
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_Triage_Playbook_for_inbound_1",
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_KTB_Triage_Playbook_for_inbound_1",
                        "id": "6",
                        "inputs": {},
                        "playbookName": "KTB -Triage Playbook for inbound_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "playbook",
                    "warnings": {},
                    "x": 160,
                    "y": -480
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "If event is generated by AMP  Kaspersky",
                            "customNameId": 0,
                            "description": "If\nevent is\ngenerated by\nAMP /\nKaspersky /\nMcAfee",
                            "join": [],
                            "note": "If\nevent is\ngenerated by\nAMP /\nKaspersky /\nMcAfee"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "If_event_is_generated_by_AMP_Kaspersky",
                        "id": "7",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "decision",
                    "warnings": {},
                    "x": 840,
                    "y": -340
                },
                "8": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Query stats  by sourcetype",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": [],
                            "note": "Query stats by sourcetype"
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "Query_stats_by_sourcetype",
                        "id": "8",
                        "parameters": {
                            "command": "tstats",
                            "display": "",
                            "parse_only": "",
                            "query": "format_data_ro_query:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "action",
                    "warnings": {},
                    "x": 840,
                    "y": 220
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "Call Enrich Playbook",
                            "customNameId": 0,
                            "description": "Call Enrich Playbook",
                            "join": [],
                            "note": "Call Enrich Playbook"
                        },
                        "functionId": 1,
                        "functionName": "call_enrich_playbook",
                        "id": "9",
                        "inputs": {},
                        "playbookName": "KTB - Enrich Playbook_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "playbook",
                    "warnings": {},
                    "x": 840,
                    "y": 1420
                }
            },
            "notes": "Inputs:\nTriggered by parent playbook\n\nInteractions:\nPhantom, Splunk, SMTP\n\nActions:\nRun Query, Call Playbook, Send Email\n\nArtifacts:\nP1: Run triage, identify false positive; else perform enrichment, containment and notification.",
            "origin": {
                "playbook_id": 146,
                "playbook_name": "KTB - Threat Inbound Playbook",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "4.10.7.63984"
    },
    "create_time": "2025-03-27T15:21:01.947737+00:00",
    "draft_mode": false,
    "labels": [
        "inbound"
    ],
    "tags": []
}