{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_8_to_port_5",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_8_to_port_4",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_9_to_port_1",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_4_to_port_6",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_6_to_port_9",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_0_to_port_3",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_3_to_port_2",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_1",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_3_to_port_7",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_7_to_port_8",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                }
            ],
            "hash": "ca262ae88be8d604752f05aa7092d66f0295ec5d",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 200,
                    "y": -80
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 600,
                    "y": 1220
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "add_note_1",
                        "id": "2",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Not Approved",
                                "note_format": "markdown",
                                "title": "Email notification - Contain approve notes"
                            }
                        }
                    },
                    "errors": {},
                    "id": "2",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1160,
                    "y": 40
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "contain_approved",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "3",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "decision",
                    "warnings": {},
                    "x": 560,
                    "y": -100
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "format mail subject",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 2,
                        "functionName": "format_mail_subject",
                        "id": "4",
                        "parameters": [
                            "container:name"
                        ],
                        "template": "Containment Notification",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "format",
                    "warnings": {},
                    "x": 680,
                    "y": 480
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "format mail body",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 1,
                        "functionName": "format_mail_body",
                        "id": "5",
                        "parameters": [
                            "container:name",
                            "container:id",
                            "artifact:*.cef.deviceHostname"
                        ],
                        "template": "Hello ,\n\nThis is containment notification,  your host may be compromised.  your AMP account or IP/MAC will be isolated.\n\nCase Name: {0}\nCase  ID: {1}\nDevice Hostname: {2}\n\n\n\nthanks",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "format",
                    "warnings": {},
                    "x": 400,
                    "y": 480
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "format_mail_body:formatted_data",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "format_mail_subject:formatted_data",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_1",
                        "id": "6",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "filter",
                    "warnings": {},
                    "x": 560,
                    "y": 740
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.username",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "",
                                        "value": "unknown"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "decision_2",
                        "id": "7",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "decision",
                    "warnings": {},
                    "x": 560,
                    "y": 80
                },
                "8": {
                    "customCode": "def format_custom_fields(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_custom_fields() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.username', 'artifact:*.id'])\n    container_item_0 = [item[0] for item in container_data]\n\n    format_custom_fields__email_address = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    str = container_item_0[0]\n    strnew = str.partition(\"@\")\n    email_address = strnew[0] + \"@ktbcs.co.th\"\n    format_custom_fields__email_address = email_address\n    \n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='format_custom_fields:email_address', value=json.dumps(format_custom_fields__email_address))\n    format_mail_body(container=container)\n    format_mail_subject(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "format custom fields",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_custom_fields",
                        "id": "8",
                        "inputParameters": [
                            "artifact:*.cef.username"
                        ],
                        "outputVariables": [
                            "email_address"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "code",
                    "userCode": "\n    str = container_item_0[0]\n    strnew = str.partition(\"@\")\n    email_address = strnew[0] + \"@ktbcs.co.th\"\n    format_custom_fields__email_address = email_address\n    \n    # Write your custom code here...\n\n",
                    "warnings": {},
                    "x": 560,
                    "y": 220
                },
                "9": {
                    "data": {
                        "action": "send email",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "send email to inform logged user",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "SMTP",
                        "connectorConfigs": [
                            "smtp asset"
                        ],
                        "connectorId": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "send_email_to_inform_logged_user",
                        "id": "9",
                        "parameters": {
                            "attachments": "",
                            "bcc": "",
                            "body": "format_mail_body:formatted_data",
                            "cc": "",
                            "from": "no-reply-phantom@ktbcs.co.th",
                            "headers": "",
                            "subject": "format_mail_subject:formatted_data",
                            "to": "artifact:*.cef.user_mail"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "to"
                            },
                            {
                                "data_type": "string",
                                "field": "body"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "action",
                    "warnings": {},
                    "x": 560,
                    "y": 920
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 177,
                "playbook_name": "KTB UC SEND EMAIL To Inform EndUser",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "4.10.7.63984"
    },
    "create_time": "2025-03-27T15:21:03.086552+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}