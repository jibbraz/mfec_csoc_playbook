{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "USE CASE: This playbook will perform triage tasks, identify false positive; else perform enrichment,\ncontainment and notification",
            "edges": [
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_46_to_port_52",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "52",
                    "targetPort": "52_in"
                },
                {
                    "id": "port_50_to_port_19",
                    "sourceNode": "50",
                    "sourcePort": "50_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_18_to_port_50",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "50",
                    "targetPort": "50_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_46_to_port_7",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_25_to_port_2",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_31",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_31_to_port_32",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "id": "port_55_to_port_1",
                    "sourceNode": "55",
                    "sourcePort": "55_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_32_to_port_30",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_35_to_port_1",
                    "sourceNode": "35",
                    "sourcePort": "35_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_31_to_port_29",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_17_to_port_18",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_17_to_port_4",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_4_to_port_1",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_0_to_port_5",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_5_to_port_13",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_16_to_port_9",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_30_to_port_11",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_11_to_port_1",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_11_to_port_34",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "id": "port_34_to_port_35",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "id": "port_33_to_port_1",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_30_to_port_10",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_33",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_29_to_port_1",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_19_to_port_20",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_20_to_port_51",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "51",
                    "targetPort": "51_in"
                },
                {
                    "id": "port_27_to_port_1",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_23_to_port_27",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "id": "port_51_to_port_24",
                    "sourceNode": "51",
                    "sourcePort": "51_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_24_to_port_23",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_31_to_port_22",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_22_to_port_28",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_22_to_port_21",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_21_to_port_42",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                },
                {
                    "id": "port_42_to_port_26",
                    "sourceNode": "42",
                    "sourcePort": "42_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_26_to_port_28",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_3_to_port_1",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_28_to_port_1",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_43_to_port_44",
                    "sourceNode": "43",
                    "sourcePort": "43_out",
                    "targetNode": "44",
                    "targetPort": "44_in"
                },
                {
                    "id": "port_44_to_port_3",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_14_to_port_8",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_15",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_15_to_port_1",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_15_to_port_16",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_5_to_port_8",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_26_to_port_43",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "43",
                    "targetPort": "43_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_46_to_port_6",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_7_to_port_12",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_9_to_port_46",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "46",
                    "targetPort": "46_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_16_to_port_46",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "46",
                    "targetPort": "46_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_53_to_port_48",
                    "sourceNode": "53",
                    "sourcePort": "53_out",
                    "targetNode": "48",
                    "targetPort": "48_in"
                },
                {
                    "id": "port_48_to_port_17",
                    "sourceNode": "48",
                    "sourcePort": "48_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_48_to_port_49",
                    "sourceNode": "48",
                    "sourcePort": "48_out",
                    "targetNode": "49",
                    "targetPort": "49_in"
                },
                {
                    "id": "port_12_to_port_36",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_36_to_port_38",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "id": "port_38_to_port_1",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_38_to_port_37",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "37",
                    "targetPort": "37_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_46_to_port_39",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "id": "port_39_to_port_40",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "40",
                    "targetPort": "40_in"
                },
                {
                    "id": "port_40_to_port_41",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "41",
                    "targetPort": "41_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_41_to_port_47",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "47",
                    "targetPort": "47_in"
                },
                {
                    "id": "port_47_to_port_52",
                    "sourceNode": "47",
                    "sourcePort": "47_out",
                    "targetNode": "52",
                    "targetPort": "52_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_41_to_port_52",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "52",
                    "targetPort": "52_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_30_to_port_45",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "45",
                    "targetPort": "45_in"
                },
                {
                    "id": "port_52_to_port_54",
                    "sourceNode": "52",
                    "sourcePort": "52_out",
                    "targetNode": "54",
                    "targetPort": "54_in"
                },
                {
                    "id": "port_54_to_port_53",
                    "sourceNode": "54",
                    "sourcePort": "54_out",
                    "targetNode": "53",
                    "targetPort": "53_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_53_to_port_55",
                    "sourceNode": "53",
                    "sourcePort": "53_out",
                    "targetNode": "55",
                    "targetPort": "55_in"
                }
            ],
            "hash": "bc247d3d0a58c2d6c3b5b16fdacf2d462f1fd42c",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": -3000,
                    "y": -1540
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": -3000,
                    "y": 4260
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_2",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 2,
                        "functionName": "cf_local_set_last_automated_action_2",
                        "id": "10",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Containment Failed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "10",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -1640,
                    "y": 3560
                },
                "11": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "new"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "open"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "in progress"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "pending"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 16,
                        "functionName": "decision_16",
                        "id": "11",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "decision",
                    "warnings": {},
                    "x": -1920,
                    "y": 3320
                },
                "12": {
                    "data": {
                        "action": "no op",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "no_op_4",
                        "id": "12",
                        "parameters": {
                            "sleep_seconds": "15"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "field": "sleep_seconds"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "action",
                    "warnings": {},
                    "x": 1920,
                    "y": -220
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "note": "Set status to New"
                        },
                        "functionId": 4,
                        "functionName": "set_status_4",
                        "id": "13",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "open"
                            }
                        }
                    },
                    "errors": {},
                    "id": "13",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -3040,
                    "y": -760
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_ADD_T0_T1_1",
                            "join": [],
                            "note": "Adding Timestamp of T0,T1"
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "ADD_T0_T1",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_add_t0_t1_1",
                        "id": "14",
                        "type": "utility",
                        "utilities": {
                            "ADD_T0_T1": {
                                "description": "Set T0 default value",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_id_now",
                                        "name": "container_id_now",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "add_t0_t1",
                                "name": "add_t0_t1"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "ADD_T0_T1": {
                                "container_id_now": "container:id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "14",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -3040,
                    "y": -500
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "closed"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 22,
                        "functionName": "decision_22",
                        "id": "15",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "decision",
                    "warnings": {},
                    "x": -3040,
                    "y": 100
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "open"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "new"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 15,
                        "functionName": "decision_15",
                        "id": "16",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "decision",
                    "warnings": {},
                    "x": -2560,
                    "y": -1000
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "device_quarantined",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 13,
                        "functionName": "decision_13",
                        "id": "17",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "decision",
                    "warnings": {},
                    "x": -1760,
                    "y": 1460
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "Filter out deviceHostname",
                            "customNameId": 0,
                            "description": "Filter out deviceHostname",
                            "join": [],
                            "note": "Filter out deviceHostname"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.deviceHostname",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "filter_out_devicehostname",
                        "id": "18",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "filter",
                    "warnings": {},
                    "x": -1400,
                    "y": 1460
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "Check Is it in the list of NO containmen",
                            "customNameId": 0,
                            "description": "Check Is it in the list of NO\ncontainment Or is a\nserver (subnets for\nservers)",
                            "join": [],
                            "note": "Check Is it in the list of NO\ncontainment Or is a\nserver (subnets for\nservers)"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "is_it_in_the_list_of_no_containment_or_i:custom_function:noContainmentFalse",
                                        "value": "[]"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "is_it_in_the_list_of_no_containment_or_i:custom_function:noContainmentTrue",
                                        "value": "[]"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "functionId": 7,
                        "functionName": "check_is_it_in_the_list_of_no_containmen",
                        "id": "19",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "decision",
                    "warnings": {},
                    "x": -1400,
                    "y": 2020
                },
                "2": {
                    "data": {
                        "action": "no op",
                        "actionType": "investigate",
                        "advanced": {
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "no_op_1",
                        "id": "2",
                        "parameters": {
                            "sleep_seconds": "5"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "field": "sleep_seconds"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "action",
                    "warnings": {},
                    "x": -1080,
                    "y": 2220
                },
                "20": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "amp_contain",
                                        "value": "container:tags"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "ise_contain",
                                        "value": "container:tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 18,
                        "functionName": "decision_18",
                        "id": "20",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "decision",
                    "warnings": {},
                    "x": -1080,
                    "y": 1460
                },
                "21": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 3,
                        "functionName": "format_3",
                        "id": "21",
                        "parameters": [
                            "artifact:*.cef.username"
                        ],
                        "template": "(samaccountname={0})",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "format",
                    "warnings": {},
                    "x": -760,
                    "y": 2760
                },
                "22": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "admin",
                                        "value": "artifact:*.cef.username"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "unknown",
                                        "value": "artifact:*.cef.username"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.username",
                                        "value": ""
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "None",
                                        "value": "artifact:*.cef.username"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 20,
                        "functionName": "decision_20",
                        "id": "22",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "decision",
                    "warnings": {},
                    "x": -1080,
                    "y": 2660
                },
                "23": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "amp_contain",
                                        "value": "container:tags"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "ise_contain",
                                        "value": "container:tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 19,
                        "functionName": "decision_19",
                        "id": "23",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "decision",
                    "warnings": {},
                    "x": -680,
                    "y": 1700
                },
                "24": {
                    "data": {
                        "action": "no op",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "no_op_2",
                        "id": "24",
                        "parameters": {
                            "sleep_seconds": "5"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "field": "sleep_seconds"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "action",
                    "warnings": {},
                    "x": -440,
                    "y": 1420
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_Approve_Playbook_1",
                            "join": [],
                            "notRequiredJoins": [
                                "call_enrich_playbook",
                                "no_op_2"
                            ]
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_approve_playbook_1",
                        "id": "25",
                        "inputs": {},
                        "playbookName": "KTB Approve Playbook_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "playbook",
                    "warnings": {},
                    "x": -1080,
                    "y": 1960
                },
                "26": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "run_query_3:action_result.*.mail",
                                        "value": "[]"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 21,
                        "functionName": "decision_21",
                        "id": "26",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "decision",
                    "warnings": {},
                    "x": -760,
                    "y": 3280
                },
                "27": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 20,
                        "functionName": "add_note_20",
                        "id": "27",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Containment is not available for now.",
                                "note_format": "markdown",
                                "title": "Containment precheck notes"
                            }
                        }
                    },
                    "errors": {},
                    "id": "27",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -120,
                    "y": 3960
                },
                "28": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "run_query_3",
                                "no_op_1"
                            ]
                        },
                        "functionId": 21,
                        "functionName": "add_note_21",
                        "id": "28",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "End user email not available",
                                "note_format": "markdown",
                                "title": "End user info notes"
                            }
                        }
                    },
                    "errors": {},
                    "id": "28",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -1040,
                    "y": 3960
                },
                "29": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 17,
                        "functionName": "add_note_17",
                        "id": "29",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Not approved.",
                                "note_format": "markdown",
                                "title": "Contain Approve failure note"
                            }
                        }
                    },
                    "errors": {},
                    "id": "29",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -440,
                    "y": 3960
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_UC_SEND_EMAIL_To_Inform_EndUser_1",
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_uc_send_email_to_inform_enduser_1",
                        "id": "3",
                        "inputs": {},
                        "playbookName": "KTB UC SEND EMAIL To Inform EndUser_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "playbook",
                    "warnings": {},
                    "x": -760,
                    "y": 3960
                },
                "30": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "call_contain_playbook",
                                "no_op_2",
                                "call_enrich_playbook"
                            ]
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "device_quarantined",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 12,
                        "functionName": "decision_12",
                        "id": "30",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "decision",
                    "warnings": {},
                    "x": -1920,
                    "y": 3100
                },
                "31": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "contain_approved",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 10,
                        "functionName": "decision_10",
                        "id": "31",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "decision",
                    "warnings": {},
                    "x": -1080,
                    "y": 2500
                },
                "32": {
                    "data": {
                        "advanced": {
                            "customName": "Call Contain Playbook",
                            "customNameId": 0,
                            "description": "Call Contain\nPlaybook",
                            "join": [],
                            "note": "Call Contain\nPlaybook"
                        },
                        "functionId": 1,
                        "functionName": "call_contain_playbook",
                        "id": "32",
                        "inputs": {},
                        "playbookName": "KTB Malware Contain Playbook_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "playbook",
                    "warnings": {},
                    "x": -1920,
                    "y": 2760
                },
                "33": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 18,
                        "functionName": "add_note_18",
                        "id": "33",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Contain failure , proceed to next flow",
                                "note_format": "markdown",
                                "title": "Contain failure , proceed to next flow"
                            }
                        }
                    },
                    "errors": {},
                    "id": "33",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -1640,
                    "y": 3960
                },
                "34": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_set_last_automated_action_1",
                        "id": "34",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Resolved"
                            }
                        }
                    },
                    "errors": {},
                    "id": "34",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -1920,
                    "y": 3560
                },
                "35": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 16,
                        "functionName": "set_status_16",
                        "id": "35",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "resolved"
                            }
                        }
                    },
                    "errors": {},
                    "id": "35",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -1920,
                    "y": 3960
                },
                "36": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "indicator_malicious",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 23,
                        "functionName": "decision_23",
                        "id": "36",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "36",
                    "type": "decision",
                    "warnings": {},
                    "x": 1920,
                    "y": 200
                },
                "37": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_UC_SEND_EMAIL_CASE_PROMOTION_2_2",
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "playbook_local_ktb_uc_send_email_case_promotion_2_2",
                        "id": "37",
                        "inputs": {},
                        "playbookName": "KTB UC SEND EMAIL CASE PROMOTION_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "37",
                    "type": "playbook",
                    "warnings": {},
                    "x": 2240,
                    "y": 3940
                },
                "38": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 23,
                        "functionName": "promote_to_case_23",
                        "id": "38",
                        "type": "utility",
                        "utilities": {
                            "promote": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "templates",
                                        "description": "",
                                        "label": "template",
                                        "name": "template",
                                        "placeholder": "Select a template",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "promote to case",
                                "name": "promote",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "promote": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "template": "KTB Workbook"
                            }
                        }
                    },
                    "errors": {},
                    "id": "38",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1920,
                    "y": 3940
                },
                "39": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 4,
                        "functionName": "format_4",
                        "id": "39",
                        "parameters": [
                            "artifact:*.cef.deviceHostname",
                            "artifact:*.cef.signature"
                        ],
                        "template": "index=ktb_mgmt_default sourcetype=kaspersky:gnrl EVC_EV_SHA256=*\n| search dest = {0}\n| search signature = {1}\n| dedup dest\n| table EVC_EV_SHA256",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "39",
                    "type": "format",
                    "warnings": {},
                    "x": -2560,
                    "y": -300
                },
                "4": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 19,
                        "functionName": "add_note_19",
                        "id": "4",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "This host has been contained before",
                                "note_format": "markdown",
                                "title": "Contain Decision notes"
                            }
                        }
                    },
                    "errors": {},
                    "id": "4",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -1760,
                    "y": 1720
                },
                "40": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "get hash",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "get_hash",
                        "id": "40",
                        "parameters": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_4:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "40",
                    "type": "action",
                    "warnings": {},
                    "x": -2560,
                    "y": -40
                },
                "41": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_hash:action_result.summary.total_events",
                                        "value": "1"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 25,
                        "functionName": "decision_25",
                        "id": "41",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "41",
                    "type": "decision",
                    "warnings": {},
                    "x": -2560,
                    "y": 200
                },
                "42": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "AD LDAP",
                        "connectorConfigs": [
                            "ktbcs domain ad"
                        ],
                        "connectorId": "a5730e5d-a396-4695-92c2-35ff391aaf45",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "run_query_3",
                        "id": "42",
                        "parameters": {
                            "attributes": "mail",
                            "filter": "format_3:formatted_data",
                            "search_base": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "filter"
                            },
                            {
                                "data_type": "string",
                                "field": "attributes"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "42",
                    "type": "action",
                    "warnings": {},
                    "x": -760,
                    "y": 3020
                },
                "43": {
                    "customCode": "def custom_function_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('custom_function_4() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_query_3:action_result.*.mail'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    parameters = []\n\n    cef_json = {\"user_mail\" : results_item_1_0[0]}\n\n        # build parameters list for 'update_artifact_2' call\n    parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_end_user_mail\")# Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    no_op_3(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "custom_function_4",
                        "id": "43",
                        "inputParameters": [
                            "artifact:*.id",
                            "run_query_3:action_result.*.mail"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "43",
                    "type": "code",
                    "userCode": "\n    parameters = []\n\n    cef_json = {\"user_mail\" : results_item_1_0[0]}\n\n        # build parameters list for 'update_artifact_2' call\n    parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_end_user_mail\")# Write your custom code here...\n\n",
                    "warnings": {},
                    "x": -760,
                    "y": 3460
                },
                "44": {
                    "data": {
                        "action": "no op",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "no_op_3",
                        "id": "44",
                        "parameters": {
                            "sleep_seconds": "3"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "field": "sleep_seconds"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "44",
                    "type": "action",
                    "warnings": {},
                    "x": -760,
                    "y": 3720
                },
                "45": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 24,
                        "functionName": "add_note_24",
                        "id": "45",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Malicious endpoint has NOT been contained by playbook",
                                "note_format": "markdown",
                                "title": "bypass note"
                            }
                        }
                    },
                    "errors": {},
                    "id": "45",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -1360,
                    "y": 3960
                },
                "46": {
                    "data": {
                        "advanced": {
                            "customName": "If event is generated by AMP  Kaspersky",
                            "customNameId": 0,
                            "description": "If\nevent is\ngenerated by\nAMP /\nKaspersky /\nMcAfee",
                            "join": [],
                            "notRequiredJoins": [
                                "playbook_local_ktb_triage_playbook_1"
                            ],
                            "note": "If\nevent is\ngenerated by\nAMP /\nKaspersky /\nMcAfee"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "amp",
                                        "value": "artifact:*.cef.sourcetype"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "mcafee",
                                        "value": "artifact:*.cef.sourcetype"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "stealthwatch",
                                        "value": "artifact:*.cef.sourcetype"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "fortisandbox",
                                        "value": "artifact:*.cef.sourcetype"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "or",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "in",
                                        "param": "kaspersky",
                                        "value": "artifact:*.cef.sourcetype"
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "If_event_is_generated_by_AMP_Kaspersky",
                        "id": "46",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "46",
                    "type": "decision",
                    "warnings": {},
                    "x": -1760,
                    "y": -480
                },
                "47": {
                    "customCode": "def save_filehash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('save_filehash() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['get_hash:action_result.data.*.EVC_EV_SHA256'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    save_filehash__fileHash = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    parameters = []\n    cef_json = {\"fileHash\" : results_item_1_0[0]}\n    newformat = results_item_1_0[0]\n\n        # build parameters list for 'update_artifact_2' call\n    parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_fileHash\")\n    save_filehash__fileHash = newformat\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='save_filehash:fileHash', value=json.dumps(save_filehash__fileHash))\n    join_call_enrich_playbook(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "save filehash",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "save_filehash",
                        "id": "47",
                        "inputParameters": [
                            "get_hash:action_result.data.*.EVC_EV_SHA256",
                            "artifact:*.id"
                        ],
                        "outputVariables": [
                            "fileHash"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "47",
                    "type": "code",
                    "userCode": "\n    parameters = []\n    cef_json = {\"fileHash\" : results_item_1_0[0]}\n    newformat = results_item_1_0[0]\n\n        # build parameters list for 'update_artifact_2' call\n    parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_fileHash\")\n    save_filehash__fileHash = newformat\n\n",
                    "warnings": {},
                    "x": -2560,
                    "y": 360
                },
                "48": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "Run_query_get_similar_events_found_in_la"
                            ],
                            "note": "Promote event to case"
                        },
                        "functionId": 6,
                        "functionName": "promote_to_case_6",
                        "id": "48",
                        "type": "utility",
                        "utilities": {
                            "promote": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "templates",
                                        "description": "",
                                        "label": "template",
                                        "name": "template",
                                        "placeholder": "Select a template",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "promote to case",
                                "name": "promote",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "promote": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "template": "KTB Workbook"
                            }
                        }
                    },
                    "errors": {},
                    "id": "48",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -1760,
                    "y": 1100
                },
                "49": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_UC_SEND_EMAIL_CASE_PROMOTION_1_1",
                            "join": [],
                            "note": "Call Email Notification Playbook"
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_uc_send_email_case_promotion_1_1",
                        "id": "49",
                        "inputs": {},
                        "playbookName": "KTB UC SEND EMAIL CASE PROMOTION_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "49",
                    "type": "playbook",
                    "warnings": {},
                    "x": -2240,
                    "y": 1420
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "container:status",
                                        "value": "new"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 14,
                        "functionName": "decision_14",
                        "id": "5",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "decision",
                    "warnings": {},
                    "x": -3040,
                    "y": -1000
                },
                "50": {
                    "customCode": "def is_it_in_the_list_of_no_containment_or_i(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('is_it_in_the_list_of_no_containment_or_i() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_out_devicehostname:condition_1:artifact:*.cef.deviceHostname'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    is_it_in_the_list_of_no_containment_or_i__nocontainmenttrue = None\n    is_it_in_the_list_of_no_containment_or_i__nocontainmentfalse = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    success, message, nocontainmentlist = phantom.get_list(list_name='nocontainmentlist')\n    \n    urllist = filtered_artifacts_item_1_0\n    noContainmentTrue = []\n    noContainmentFalse = []\n    for item in urllist:\n        if not any(item in sublist for sublist in nocontainmentlist):\n            phantom.debug(\"{} is public\".format(item))\n            noContainmentFalse.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            noContainmentTrue.append(item)\n            \n    is_it_in_the_list_of_no_containment_or_i__nocontainmenttrue = noContainmentTrue\n    is_it_in_the_list_of_no_containment_or_i__nocontainmentfalse = noContainmentFalse\n    phantom.debug(noContainmentTrue)\n    phantom.debug(noContainmentFalse)\n    #################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='is_it_in_the_list_of_no_containment_or_i:noContainmentTrue', value=json.dumps(is_it_in_the_list_of_no_containment_or_i__nocontainmenttrue))\n    phantom.save_run_data(key='is_it_in_the_list_of_no_containment_or_i:noContainmentFalse', value=json.dumps(is_it_in_the_list_of_no_containment_or_i__nocontainmentfalse))\n    check_is_it_in_the_list_of_no_containmen(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Is it in the list of NO containment Or i",
                            "customNameId": 0,
                            "description": "Is it in the list of NO\ncontainment Or is a\nserver (subnets for\nservers)",
                            "join": [],
                            "note": "Is it in the list of NO\ncontainment Or is a\nserver (subnets for\nservers)"
                        },
                        "functionId": 3,
                        "functionName": "is_it_in_the_list_of_no_containment_or_i",
                        "id": "50",
                        "inputParameters": [
                            "filtered-data:filter_out_devicehostname:condition_1:artifact:*.cef.deviceHostname"
                        ],
                        "outputVariables": [
                            "noContainmentTrue",
                            "noContainmentFalse"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "50",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    \n    success, message, nocontainmentlist = phantom.get_list(list_name='nocontainmentlist')\n    \n    urllist = filtered_artifacts_item_1_0\n    noContainmentTrue = []\n    noContainmentFalse = []\n    for item in urllist:\n        if not any(item in sublist for sublist in nocontainmentlist):\n            phantom.debug(\"{} is public\".format(item))\n            noContainmentFalse.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            noContainmentTrue.append(item)\n            \n    is_it_in_the_list_of_no_containment_or_i__nocontainmenttrue = noContainmentTrue\n    is_it_in_the_list_of_no_containment_or_i__nocontainmentfalse = noContainmentFalse\n    phantom.debug(noContainmentTrue)\n    phantom.debug(noContainmentFalse)\n    #################################",
                    "warnings": {},
                    "x": -1400,
                    "y": 1720
                },
                "51": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_Contain_PreFlow_Playbook_1",
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_contain_preflow_playbook_1",
                        "id": "51",
                        "inputs": {},
                        "playbookName": "KTB Contain PreFlow Playbook_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "51",
                    "type": "playbook",
                    "warnings": {},
                    "x": -720,
                    "y": 1420
                },
                "52": {
                    "data": {
                        "advanced": {
                            "customName": "Call Enrich Playbook",
                            "customNameId": 0,
                            "description": "Call Enrich Playbook",
                            "join": [],
                            "notRequiredJoins": [
                                "get_hash",
                                "playbook_local_ktb_triage_playbook_1"
                            ],
                            "note": "Call Enrich Playbook"
                        },
                        "functionId": 1,
                        "functionName": "call_enrich_playbook",
                        "id": "52",
                        "inputs": {},
                        "playbookName": "KTB - Enrich Playbook_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "52",
                    "type": "playbook",
                    "warnings": {},
                    "x": -1760,
                    "y": 500
                },
                "53": {
                    "data": {
                        "advanced": {
                            "customName": "IOC is suspicious",
                            "customNameId": 0,
                            "description": "IOC is\nsuspicious",
                            "join": [],
                            "note": "IOC is\nsuspicious"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.sourceAddress_malicious",
                                        "value": "True"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.destinationAddress_malicious",
                                        "value": "True"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.requestURL_malicious",
                                        "value": "True"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.fileHash_malicious",
                                        "value": "True"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "indicator_malicious",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 5,
                        "functionName": "ioc_is_suspicious",
                        "id": "53",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "53",
                    "type": "decision",
                    "warnings": {},
                    "x": -1760,
                    "y": 940
                },
                "54": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_3",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 3,
                        "functionName": "cf_local_set_last_automated_action_3",
                        "id": "54",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Enriched"
                            }
                        }
                    },
                    "errors": {},
                    "id": "54",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -1760,
                    "y": 720
                },
                "55": {
                    "data": {
                        "advanced": {
                            "description": "ktb",
                            "join": []
                        },
                        "functionId": 14,
                        "functionName": "add_note_14",
                        "id": "55",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Nothing Malicious",
                                "note_format": "markdown",
                                "title": "Enrichment Notes"
                            }
                        }
                    },
                    "errors": {},
                    "id": "55",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 160,
                    "y": 3960
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 22,
                        "functionName": "add_note_22",
                        "id": "6",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "stealthwatch flow",
                                "note_format": "markdown",
                                "title": "Stealthwatch flow"
                            }
                        }
                    },
                    "errors": {},
                    "id": "6",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -1360,
                    "y": -620
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_Enrich_Playbook_2_2",
                            "join": [],
                            "note": "Call enrichment playbook"
                        },
                        "functionId": 2,
                        "functionName": "playbook_local_KTB_Enrich_Playbook_2_2",
                        "id": "7",
                        "inputs": {},
                        "playbookName": "KTB - Enrich Playbook_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "playbook",
                    "warnings": {},
                    "x": 1920,
                    "y": -500
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_Triage_Playbook_1",
                            "join": [],
                            "notRequiredJoins": [
                                "cf_local_add_t0_t1_1"
                            ]
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_triage_playbook_1",
                        "id": "8",
                        "inputs": {},
                        "playbookName": "KTB Triage Playbook_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "playbook",
                    "warnings": {},
                    "x": -3040,
                    "y": -200
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "Set status to In progress",
                            "customNameId": 0,
                            "join": [],
                            "note": "Set status to In progress"
                        },
                        "functionId": 5,
                        "functionName": "set_status_to_in_progress",
                        "id": "9",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "in progress"
                            }
                        }
                    },
                    "errors": {},
                    "id": "9",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -2560,
                    "y": -760
                }
            },
            "notes": "Inputs:\nTriggered by parent playbook\n\nInteractions:\nPhantom, Splunk, SMTP\n\nActions:\nRun Query, Call Playbook, Send Email\n\nArtifacts:\nP1: Run triage, identify false positive; else perform enrichment, containment and notification.",
            "origin": {
                "playbook_id": 165,
                "playbook_name": "KTB Master Playbook",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "4.10.7.63984"
    },
    "create_time": "2025-03-27T15:21:02.709585+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}