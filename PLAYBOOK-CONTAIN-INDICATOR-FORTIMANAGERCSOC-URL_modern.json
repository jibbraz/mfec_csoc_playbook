{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_16_to_port_6",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_3_to_port_7",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_17_to_port_16",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_5_to_port_15",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_24_to_port_30",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_18",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_20",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_6_to_port_19",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_20_to_port_17",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_19_to_port_9",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_7_to_port_4",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_15_to_port_8",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_8_to_port_21",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_8_to_port_11",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_11_to_port_12",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_21_to_port_22",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_12_to_port_13",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_13_to_port_24",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_22_to_port_23",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_23_to_port_24",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_9_to_port_10",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_10_to_port_3",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_10_to_port_14",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_14_to_port_25",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_25_to_port_26",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_26_to_port_28",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_28_to_port_27",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "id": "port_27_to_port_1",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_30_to_port_31",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_31_to_port_29",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_29_to_port_1",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "1c9f038049e28654d7f581c197839d960e8d8a94",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": -40,
                    "y": -1080
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1320,
                    "y": 1000
                },
                "10": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "createblockurlentry:action_result.data.*.parsed_response_body.result.*.status.message",
                                        "value": "OK"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "decision_2",
                        "id": "10",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "decision",
                    "warnings": {},
                    "x": 560,
                    "y": -80
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "TaskResultDone",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 19,
                        "functionName": "taskresultdone",
                        "id": "11",
                        "parameters": [
                            "veritytaskstatus:action_result.data.*.parsed_response_body.result.*.data.state",
                            "installpolicypackage:action_result.data.*.parsed_response_body.result.*.data.task"
                        ],
                        "template": "Policy installation by Phantom to FortiManager has \"{0}\" with task id \"{1}\"",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "format",
                    "warnings": {},
                    "x": 160,
                    "y": 640
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "addCEFContainResultTrue",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 23,
                        "functionName": "addcefcontainresulttrue",
                        "id": "12",
                        "parameters": [
                            "filtered-data:filtermaliciousurl:condition_1:artifact:*.id"
                        ],
                        "template": "%%\n{{\n\t\"requestURL_ContainResult\": \"True\"\n}}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "format",
                    "warnings": {},
                    "x": 160,
                    "y": 900
                },
                "13": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "updateArtifactTrue",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "updateartifacttrue",
                        "id": "13",
                        "parameters": {
                            "artifact_id": "filtered-data:filtermaliciousurl:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "addcefcontainresulttrue:formatted_data",
                            "cef_key": "id",
                            "cef_types_json": "",
                            "container_ids": "current",
                            "exact_match": true,
                            "label": "",
                            "limit_search": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": "",
                            "values": "artifact:*.id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "action",
                    "warnings": {},
                    "x": 160,
                    "y": 1160
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "addURLEntryError",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 25,
                        "functionName": "addurlentryerror",
                        "id": "14",
                        "parameters": [
                            "filtered-data:filtermaliciousurl:condition_1:artifact:*.id"
                        ],
                        "template": "%%\n{{\n\t\"requestURL_ContainResult\": \"False\"\n}}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "format",
                    "warnings": {},
                    "x": 960,
                    "y": -140
                },
                "15": {
                    "data": {
                        "action": "post data",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "VerityTaskStatus",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "csoc-fortimanager"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 8,
                        "functionName": "veritytaskstatus",
                        "id": "15",
                        "parameters": {
                            "body": "bodyreqchecktaskresult:formatted_data",
                            "headers": "{\"Content-Type\":\"application/json\"}",
                            "location": "/jsonrpc",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "body"
                            },
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "action",
                    "warnings": {},
                    "x": 880,
                    "y": 180
                },
                "16": {
                    "data": {
                        "action": "post data",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "AuthReqToFortiManager",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "description": "HTTP method: POST\nAPI execute method: exec\nURL: /sys/login/user",
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "csoc-fortimanager"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "authreqtofortimanager",
                        "id": "16",
                        "parameters": {
                            "body": "bodyauthreqtofortimanager:formatted_data",
                            "headers": "{\"Content-Type\":\"application/json\"}",
                            "location": "/jsonrpc",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "body"
                            },
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "action",
                    "warnings": {},
                    "x": 200,
                    "y": -420
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "BodyAuthReqToFortiManager",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 15,
                        "functionName": "bodyauthreqtofortimanager",
                        "id": "17",
                        "parameters": [
                            "artifact:*.id"
                        ],
                        "template": "%%\n{{\n\t\"method\": \"exec\",\n\t\"params\": [\n\t  {{\n\t    \"data\": [\n                    {{\n\t\t\"user\": \"soar\",\n        \"passwd\": \"csoc@2022\"\n\t        }}\n\t    ],\n\t    \"url\": \"sys/login/user\"\n      \t  }}\n\t],\n\t\"session\": null,\n\t\"verbose\": 1\n}}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "format",
                    "warnings": {},
                    "x": -80,
                    "y": -420
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "FormatFilteredURL",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 21,
                        "functionName": "formatfilteredurl",
                        "id": "18",
                        "parameters": [
                            "filtered-data:filtermaliciousurl:condition_1:artifact:*.cef.requestURL"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "warnings": {},
                    "x": -80,
                    "y": -720
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "ReqCreateBlockURL",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 7,
                        "functionName": "reqcreateblockurl",
                        "id": "19",
                        "parameters": [
                            "getauthsessionid:formatted_data",
                            "cf_local_strip_url_prefix_1:custom_function_result.data.processedURL.*"
                        ],
                        "template": "%%\n{{\n    \"session\": \"{0}\",\n    \"method\": \"add\",\n    \"params\": [\n        {{\n            \"url\": \"/pm/config/adom/root/obj/webfilter/urlfilter/2/entries/\",\n            \"data\":  {1}\n        }}\n    ]\n}}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "format",
                    "warnings": {},
                    "x": -80,
                    "y": -120
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "FilterMaliciousURL",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.requestURL_malicious",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "filtermaliciousurl",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "warnings": {},
                    "x": -80,
                    "y": -880
                },
                "20": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_strip_url_prefix_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "strip_url_prefix",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_strip_url_prefix_1",
                        "id": "20",
                        "type": "utility",
                        "utilities": {
                            "strip_url_prefix": {
                                "description": "Strip \"http://\" and \"https://\" from input string",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "requestURLs",
                                        "name": "requestURLs",
                                        "placeholder": "URL list",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "strip_url_prefix",
                                "name": "strip_url_prefix"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "strip_url_prefix": {
                                "requestURLs": "formatfilteredurl:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "20",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 200,
                    "y": -720
                },
                "21": {
                    "data": {
                        "advanced": {
                            "customName": "TaskResultError",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 20,
                        "functionName": "taskresulterror",
                        "id": "21",
                        "parameters": [
                            "veritytaskstatus:action_result.data.*.parsed_response_body.result.*.data.state",
                            "installpolicypackage:action_result.data.*.parsed_response_body.result.*.data.task"
                        ],
                        "template": "Policy installation by Phantom to FortiManager has \"{0}\" with task id \"{1}\".\n\nPlease contact FortiManager owner (firewall.support@ktbcs.co.th) directly to further verify failure reason.",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "format",
                    "warnings": {},
                    "x": -160,
                    "y": 640
                },
                "22": {
                    "data": {
                        "advanced": {
                            "customName": "addCEFContainResultFalse",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 24,
                        "functionName": "addcefcontainresultfalse",
                        "id": "22",
                        "parameters": [
                            "filtered-data:filtermaliciousurl:condition_1:artifact:*.id"
                        ],
                        "template": "%%\n{{\n\t\"requestURL_ContainResult\": \"False\"\n}}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "format",
                    "warnings": {},
                    "x": -160,
                    "y": 900
                },
                "23": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "updateArtifactFalse",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "updateartifactfalse",
                        "id": "23",
                        "parameters": {
                            "artifact_id": "filtered-data:filtermaliciousurl:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "addcefcontainresultfalse:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "action",
                    "warnings": {},
                    "x": -160,
                    "y": 1160
                },
                "24": {
                    "data": {
                        "advanced": {
                            "customName": "cf_community_passthrough_2",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "passthrough",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "cf_community_passthrough_2",
                        "id": "24",
                        "type": "utility",
                        "utilities": {
                            "passthrough": {
                                "description": "Return the inputs as outputs. This is useful for publishing pieces of data for other blocks in the playbook to use.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "passthrough",
                                "name": "passthrough"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "passthrough": {
                                "input_1": "taskresultdone:formatted_data",
                                "input_10": null,
                                "input_2": "taskresulterror:formatted_data",
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "24",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -40,
                    "y": 1440
                },
                "25": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "addCEFContainResultFalse2",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "addcefcontainresultfalse2",
                        "id": "25",
                        "parameters": {
                            "artifact_id": "filtered-data:filtermaliciousurl:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "addurlentryerror:formatted_data",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "action",
                    "warnings": {},
                    "x": 1240,
                    "y": -140
                },
                "26": {
                    "data": {
                        "advanced": {
                            "customName": "formatAddURLFail",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 26,
                        "functionName": "formataddurlfail",
                        "id": "26",
                        "parameters": [
                            "filtered-data:filtermaliciousurl:condition_1:artifact:*.cef.requestURL"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "format",
                    "warnings": {},
                    "x": 1520,
                    "y": -140
                },
                "27": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "add_note_3",
                        "id": "27",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "formataddurlfailnote:formatted_data",
                                "note_format": "html",
                                "title": "Playbook Summary: Block URL Result"
                            }
                        }
                    },
                    "errors": {},
                    "id": "27",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1760,
                    "y": 160
                },
                "28": {
                    "data": {
                        "advanced": {
                            "customName": "formatAddURLFailNote",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 27,
                        "functionName": "formataddurlfailnote",
                        "id": "28",
                        "parameters": [
                            "formataddurlfail:formatted_data",
                            "createblockurlentry:action_result.data.*.parsed_response_body.result.*.status.message",
                            "createblockurlentry:action_result.data.*.response_headers.Date"
                        ],
                        "template": "<b>Block URL result</b>\nFail to block URL :\n{0}\n\nMessages :\n{1}\n\n<b>Execute Time:</b> {2}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "28",
                    "type": "format",
                    "warnings": {},
                    "x": 1840,
                    "y": -140
                },
                "29": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "add_note_4",
                        "id": "29",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "formatoutputfornote:formatted_data",
                                "note_format": "html",
                                "title": "Playbook Summary: Block URL Result"
                            }
                        }
                    },
                    "errors": {},
                    "id": "29",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 520,
                    "y": 1200
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "ReqInstallPolicyPackage",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 10,
                        "functionName": "reqinstallpolicypackage",
                        "id": "3",
                        "parameters": [
                            "getauthsessionid:formatted_data"
                        ],
                        "template": "%%\n{{\n\t\"session\": \"{0}\",\n\t\"id\": 1,\n\t\"method\": \"exec\" ,\n\t\"params\": [\n\t\t{{\n\t\t\t\"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {{\n                    \"adom\": \"root\",\n                    \"pkg\": \"Policy-Internet\",\n                    \"scope member\": [\n                        {{\n                            \"name\": \"BBT-DC2_DH1_R903_U33-34-3301E-FW-01\n\",\n                            \"vdom\": \"Internet\"\n                        }}\n                    ],\n                    \"flags\": \"none\"\n                }}\n            ]\n\t\t}}\n\t],\n\t\"verbose\": 1\t\t\t\t\n}}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "format",
                    "warnings": {},
                    "x": -320,
                    "y": 180
                },
                "30": {
                    "data": {
                        "advanced": {
                            "customName": "FormatOutputForNote",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 16,
                        "functionName": "formatoutputfornote",
                        "id": "30",
                        "parameters": [
                            "cf_local_strip_url_prefix_1:custom_function_result.data.processedURL",
                            "formatfilteredurl:formatted_data",
                            "veritytaskstatus:action_result.data.*.response_headers.Date",
                            "cf_community_passthrough_2:custom_function_result.data.*.item"
                        ],
                        "template": "<b>Block URL result</b>\n\n<b>Blocked URL Data </b>\n{0}\n\nURL from artifact : \n{1}\n\n<b>Execute Time:</b> {2}\n{3}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "format",
                    "warnings": {},
                    "x": 520,
                    "y": 640
                },
                "31": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_debug_variable_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "debug_variable",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_debug_variable_1",
                        "id": "31",
                        "type": "utility",
                        "utilities": {
                            "debug_variable": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "var1",
                                        "name": "var1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "debug_variable",
                                "name": "debug_variable"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "debug_variable": {
                                "var1": "formatoutputfornote:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "31",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 520,
                    "y": 920
                },
                "4": {
                    "data": {
                        "action": "no op",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "no_op_1",
                        "id": "4",
                        "parameters": {
                            "sleep_seconds": "30"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "field": "sleep_seconds"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 240,
                    "y": 180
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "BodyReqCheckTaskResult",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 17,
                        "functionName": "bodyreqchecktaskresult",
                        "id": "5",
                        "parameters": [
                            "getauthsessionid:formatted_data",
                            "installpolicypackage:action_result.data.*.parsed_response_body.result.*.data.task"
                        ],
                        "template": "%%\n{{\n\t\"session\": \"{0}\",\n\t\"id\": 1,\n\t\"method\": \"get\" ,\n\t\"params\": [\n\t\t{{\n\t\t\t\"url\": \"task/task/{1}\"\n\t\t}}\n\t],\n\t\"verbose\": 1\t\t\t\t\n}}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "format",
                    "warnings": {},
                    "x": 560,
                    "y": 180
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "GetAuthSessionID",
                            "customNameId": 0,
                            "join": [],
                            "scope": "new",
                            "separator": ", "
                        },
                        "functionId": 2,
                        "functionName": "getauthsessionid",
                        "id": "6",
                        "parameters": [
                            "authreqtofortimanager:action_result.data.*.parsed_response_body.session"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "format",
                    "warnings": {},
                    "x": 480,
                    "y": -420
                },
                "7": {
                    "data": {
                        "action": "post data",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "InstallPolicyPackage",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "csoc-fortimanager"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 7,
                        "functionName": "installpolicypackage",
                        "id": "7",
                        "parameters": {
                            "body": "reqinstallpolicypackage:formatted_data",
                            "headers": "{\"Content-Type\":\"application/json\"}",
                            "location": "/jsonrpc",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "body"
                            },
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "action",
                    "warnings": {},
                    "x": -40,
                    "y": 180
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "decisionPolicyInstallation",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "veritytaskstatus:action_result.data.*.parsed_response_body.result.*.data.state",
                                        "value": "error"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decisionpolicyinstallation",
                        "id": "8",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "decision",
                    "warnings": {},
                    "x": -120,
                    "y": 460
                },
                "9": {
                    "data": {
                        "action": "post data",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "CreateBlockURLEntry",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "HTTP",
                        "connectorConfigs": [
                            "csoc-fortimanager"
                        ],
                        "connectorId": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "connectorVersion": "v1",
                        "functionId": 5,
                        "functionName": "createblockurlentry",
                        "id": "9",
                        "parameters": {
                            "body": "reqcreateblockurl:formatted_data",
                            "headers": "{\"Content-Type\":\"application/json\"}",
                            "location": "/jsonrpc",
                            "verify_certificate": "False"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "body"
                            },
                            {
                                "data_type": "string",
                                "field": "location"
                            },
                            {
                                "data_type": "boolean",
                                "field": "verify_certificate"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "action",
                    "warnings": {},
                    "x": 200,
                    "y": -120
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 221,
                "playbook_name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERCSOC-URL",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "4.10.7.63984"
    },
    "create_time": "2025-03-27T15:21:04.764643+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}