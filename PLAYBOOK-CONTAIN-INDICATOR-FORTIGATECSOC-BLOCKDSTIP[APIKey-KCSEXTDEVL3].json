{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "hash": "5c27841496ac7b39baf75aa7c9b92a5fb6ce238b",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bbfd7721-c83c-487f-83c2-ce8857b0bf62",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d30f0bd-ec66-4f35-b3da-49bb4d976281",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "55728ad6-0a71-410c-b3a5-a1b1eaebd840",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2087
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "44ea2383-204e-42bc-bcae-f4c31f5536f3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ad0cce4c-6a06-42cd-9979-2cb8f95257a3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a748e4e3-8708-4991-ad65-79595cace468",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2465
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d2fc77d5-9c17-4b4c-a640-0a0702a0e7b2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b8abf194-2786-4140-a120-5f660810932c",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5e07e72f-2242-4f01-835f-136d91d5432c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2470
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c9142912-174d-47e2-98a5-856bb581f575",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e07e72f-2242-4f01-835f-136d91d5432c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bbfc1683-5f40-4ac2-9411-f0becd714c18",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2472
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "073322c4-60eb-42f2-ae17-d822ae7fdc84",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b8abf194-2786-4140-a120-5f660810932c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ad0cce4c-6a06-42cd-9979-2cb8f95257a3",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2607
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d2082095-0cde-4a08-a168-6a44183c8b78",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d30f0bd-ec66-4f35-b3da-49bb4d976281",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2610
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "update artifact fail, update artifact success, update artifact success 2, update artifact fail 2, update artifact fail 4, update artifact fail 3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 759,
                        "line_start": 746,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 33,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1060,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2611
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "42f34160-daeb-402f-817b-653b68281470",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "55728ad6-0a71-410c-b3a5-a1b1eaebd840",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9ff6cdbd-7006-4e15-bf13-ce394c948b46",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2612
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d744a701-f0a6-4cf2-a60b-56fe16b7b580",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9ff6cdbd-7006-4e15-bf13-ce394c948b46",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2614
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ea7bf32b-148d-47ed-8375-dbaf9e4d556e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bbfc1683-5f40-4ac2-9411-f0becd714c18",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8ed5e4f1-cce4-45bb-83da-61f73b0fd4d6",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2618
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "46386727-f668-4455-90f4-1e44afa7ff28",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8ed5e4f1-cce4-45bb-83da-61f73b0fd4d6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2620
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'prepareCheckObjectURL' block\n    prepareCheckObjectURL(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 15,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -3500,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2720
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cf04d300-e73d-4dd1-b444-6c9ccb363f4e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3424ae08-9a51-4738-9055-b3ceafdacb32",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9b3239a4-2ea9-43c9-b83c-9b7d8900cf06",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2759
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "90e95995-ddd6-40cb-8bcd-5e9c91c7a6ab",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "db4713ad-a92a-4746-aca9-4e98efef0fde",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2764
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8182b2f4-7578-40c3-a42b-1c4c95fe8e9c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "db4713ad-a92a-4746-aca9-4e98efef0fde",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6e4041a1-1697-4ae9-967e-df341f6207e7",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2765
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8eaa0a27-7b58-4d07-bc90-2ccdb20f4eb8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5b40be7f-43b5-46d3-9386-5eed72b5bc34",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2771
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5357d157-a4a2-497f-b783-676caa2b6e12",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5b40be7f-43b5-46d3-9386-5eed72b5bc34",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a07f5d19-2eb4-4b3d-88a6-e06733b4de4e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2781
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8b049756-69df-4178-b4c8-01c9b1056fff",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1da0d775-c77f-4d44-a06f-b074f0d064d0",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3424ae08-9a51-4738-9055-b3ceafdacb32",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2793
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9d5c002c-4b1b-4c64-a711-d85fc4766266",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6e4041a1-1697-4ae9-967e-df341f6207e7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b8abf194-2786-4140-a120-5f660810932c",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2794
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "96f7b556-7544-40a1-a418-20691bdbfcc0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a07f5d19-2eb4-4b3d-88a6-e06733b4de4e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5e448bec-9747-480e-8d37-4f2c0bc921b3",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2801
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "34ca69c3-6d55-4bf4-885d-a6349934242c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e448bec-9747-480e-8d37-4f2c0bc921b3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1da0d775-c77f-4d44-a06f-b074f0d064d0",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2802
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "aa738c4f-18d1-4991-81db-6887c1bac3e0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9b3239a4-2ea9-43c9-b83c-9b7d8900cf06",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2803
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_10(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_10() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObjectSuccess')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_success(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObjectSuccess:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bbfc1683-5f40-4ac2-9411-f0becd714c18",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 268,
                        "line_start": 255,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 10,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": 1020
                        },
                        "previous_function": "",
                        "previous_name": "add_note_10",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 2804
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c0aefc94-18bb-4271-bf86-c768f7b412a4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1da0d775-c77f-4d44-a06f-b074f0d064d0",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9e5fa4dd-ce6c-49ac-926f-90af07d46de4",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2805
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "47dceed8-221a-4e6a-9789-7157c9473882",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9e5fa4dd-ce6c-49ac-926f-90af07d46de4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "748ac8fe-be7b-4428-920b-3eae8ca8b389",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2809
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5f369df3-88a1-46b7-97d1-7b4b20fb1210",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "748ac8fe-be7b-4428-920b-3eae8ca8b389",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de04cd4b-8da1-4a24-bc4b-2955515c30b3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2818
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"addObject2Group:action_result.status\", \"!=\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        addObject2GrpFail(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    addObjectSuccess(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b8abf194-2786-4140-a120-5f660810932c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 184,
                        "line_start": 163,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 9,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "addObject2Group:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2280,
                            "y": 860
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 2820
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "041c87bd-c6b2-4af8-a0d2-983386cd8317",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "de04cd4b-8da1-4a24-bc4b-2955515c30b3",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ed884a77-36e9-4058-b01d-7fa16df9c111",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2822
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"createObjectS:action_result.status\", \"!=\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        addObjectFail(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    prepareAdd2GroupBody(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "createObjectS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 59,
                        "line_start": 38,
                        "name": "decision",
                        "notes": "",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "createObjectS:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2280,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 2830
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObject2GrpFail"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2GrpFail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2GrpFail() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"createObjectS:action_result.status\",\n        \"createObjectS:action_result.summary.status_code\",\n        \"addObject2Group:action_result.status\",\n        \"addObject2Group:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObject2GrpFail\", separator=\", \")\n\n    add_note_9(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2GrpFail",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ad0cce4c-6a06-42cd-9979-2cb8f95257a3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 213,
                        "line_start": 184,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 39,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "createObjectS:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "createObjectS:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "addObject2Group:action_result.status"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "addObject2Group:action_result.summary.status_code"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2100,
                            "y": 860
                        },
                        "previous_function": "",
                        "previous_name": "addObject2GrpFail",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2831
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObjectSuccess"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObjectSuccess(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObjectSuccess() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} | {1}:{2} | {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"createObjectS:action_result.status\",\n        \"createObjectS:action_result.summary.status_code\",\n        \"addObject2Group:action_result.status\",\n        \"addObject2Group:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObjectSuccess\", separator=\", \")\n\n    add_note_10(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObjectSuccess",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e07e72f-2242-4f01-835f-136d91d5432c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 255,
                        "line_start": 226,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 40,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "createObjectS:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "createObjectS:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "addObject2Group:action_result.status"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "addObject2Group:action_result.summary.status_code"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2100,
                            "y": 1020
                        },
                        "previous_function": "",
                        "previous_name": "addObjectSuccess",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} | {1}:{2} | {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2834
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "11aaf6c3-2439-47e4-a623-3c1208480180",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ed884a77-36e9-4058-b01d-7fa16df9c111",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "05cb0f93-19b8-4201-833c-d6592a604d99",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2837
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "amount_to_modify-3": "7",
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "datetime_modify"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_community_datetime_modify_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_community_datetime_modify_1() called')\n    \n    action_results_data_0 = phantom.collect2(container=container, datapath=['checkExistingObject:action_result.data.*.response_headers.Date', 'checkExistingObject:action_result.parameter.context.artifact_id'], action_results=results )\n    literal_values_0 = [\n        [\n            7,\n            \"hours\",\n            \"%a, %d %b %Y %H:%M:%S %Z\",\n            \"%b %d,  %Y %H:%M\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in action_results_data_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'input_datetime': item0[0],\n                'amount_to_modify': item1[0],\n                'modification_unit': item1[1],\n                'input_format_string': item1[2],\n                'output_format_string': item1[3],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/datetime_modify\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/datetime_modify', parameters=parameters, name='cf_community_datetime_modify_1', callback=decision_3)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/datetime_modify",
                        "cfInputs": {
                            "amount_to_modify": {
                                "collectionType": "literal_values",
                                "dataPath": "7",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "input_datetime": {
                                "collectionType": "action_results_data",
                                "dataPath": "checkExistingObject:action_result.data.*.response_headers.Date",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "input_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%a, %d %b %Y %H:%M:%S %Z",
                                "paramName": "item1[2]",
                                "type": "item"
                            },
                            "modification_unit": {
                                "collectionType": "literal_values",
                                "dataPath": "hours",
                                "paramName": "item1[1]",
                                "type": "item"
                            },
                            "output_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%b %d,  %Y %H:%M",
                                "paramName": "item1[3]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "checkExistingObject",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 27,
                        "customFunction": "community/datetime_modify",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e448bec-9747-480e-8d37-4f2c0bc921b3",
                        "inPorts": [
                            "in"
                        ],
                        "input_datetime-0": "checkExistingObject:action_result.data.*.response_headers.Date",
                        "input_format_string-1": "%a, %d %b %Y %H:%M:%S %Z",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 369,
                        "line_start": 330,
                        "message": "Configuring now",
                        "modification_unit-2": "hours",
                        "name": "datetime_modify",
                        "notes": "",
                        "number": 1,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "output_format_string-4": "%b %d,  %Y %H:%M",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -3280,
                            "y": 660
                        },
                        "previous_function": "",
                        "previous_name": "cf_community_datetime_modify_1",
                        "selectedCustomFunction": {
                            "description": "Change a timestamp by adding or subtracting minutes, hours, or days.",
                            "draftMode": false,
                            "id": 7,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 7,
                                    "description": "The datetime to modify, which should be provided in a string format determined by input_format_string",
                                    "id": 36,
                                    "input_type": "item",
                                    "name": "input_datetime",
                                    "placeholder": "2020-06-27T14:53:08.219016Z"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "The format string to use for the input according to the Python's datetime.strptime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'. In addition to strptime() formats, the special format \"epoch\" can be used to accept unix epoch timestamps.",
                                    "id": 37,
                                    "input_type": "item",
                                    "name": "input_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 7,
                                    "description": "Choose a unit to modify the date by, which must be either seconds, minutes, hours, or days. If none is provided the default will be 'minutes'",
                                    "id": 38,
                                    "input_type": "item",
                                    "name": "modification_unit",
                                    "placeholder": "minutes"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "The number of seconds, minutes, hours, or days to add or subtract. Use a negative number such as -1.5 to subtract time. Defaults to zero.",
                                    "id": 39,
                                    "input_type": "item",
                                    "name": "amount_to_modify",
                                    "placeholder": "0"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "The format string to use for the output according to the Python's datetime.strftime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'.",
                                    "id": 40,
                                    "input_type": "item",
                                    "name": "output_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                }
                            ],
                            "name": "datetime_modify",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "data_path": "datetime_string",
                                    "description": "The output datetime as formatted by the given output_format_string using Python's datetime.strftime()",
                                    "id": 24
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "data_path": "epoch_time",
                                    "description": "An integer representing the output time as a number of seconds since January 1 1970 assuming a naive UTC timezone. This is easier to use for comparisons to other epoch timestamps.",
                                    "id": 25
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "data_path": "seconds_modified",
                                    "description": "The number of seconds (positive or negative) by which the input was modified",
                                    "id": 26
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "community/aws_find_inactive_users",
                                        "draft_mode": false,
                                        "id": 6,
                                        "name": "aws_find_inactive_users",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/azure_new_user_census",
                                        "draft_mode": false,
                                        "id": 7,
                                        "name": "azure_new_user_census",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/corelight_investigate_dns_alert",
                                        "draft_mode": false,
                                        "id": 12,
                                        "name": "corelight_investigate_dns_alert",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/endace_splunk_search_download_pcap",
                                        "draft_mode": false,
                                        "id": 21,
                                        "name": "endace_splunk_search_download_pcap",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "draft_mode": false,
                                        "id": 4825,
                                        "name": "PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "draft_mode": false,
                                        "id": 4826,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "draft_mode": false,
                                        "id": 4827,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "draft_mode": false,
                                        "id": 4828,
                                        "name": "PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 2841
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3edcb1ca-43c3-4b82-9786-a782bb213119",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7a7c654d-6b47-4b9c-879e-e0a2a4a9f880",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "309b9e80-c722-44fd-b444-6d16ab69d932",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2842
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_12(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_12() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObject2GrpSuccess2')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_success_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObject2GrpSuccess2:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "addObject2Group2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "309b9e80-c722-44fd-b444-6d16ab69d932",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 581,
                        "line_start": 568,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 12,
                        "order": 26,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": 540
                        },
                        "previous_function": "",
                        "previous_name": "add_note_12",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 2843
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareObjectBody"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareObjectBody(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareObjectBody() called')\n    \n    template = \"\"\"%%\n                {{\n                    \\\"name\\\": \\\"Phantom {0}_32\\\",\n                    \\\"subnet\\\": \\\"{0}/32\\\",\n                    \\\"comment\\\": \\\"Create by Phantom\\\",\n                    \\\"color\\\": 22\n                }},\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareObjectBody\", separator=\", \")\n\n    createObjectS(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareObjectBody",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3424ae08-9a51-4738-9055-b3ceafdacb32",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 238,
                        "line_end": 38,
                        "line_start": 15,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 33,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2860,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "prepareObjectBody",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n                {{\n                    \"name\": \"Phantom {0}_32\",\n                    \"subnet\": \"{0}/32\",\n                    \"comment\": \"Create by Phantom\",\n                    \"color\": 22\n                }},\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2858
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObject2GrpFail2"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2GrpFail2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2GrpFail2() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| Already Exists  |  {1}:{2} | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"addObject2Group2:action_result.status\",\n        \"addObject2Group2:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObject2GrpFail2\", separator=\", \")\n\n    add_note_11(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "addObject2Group2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2GrpFail2",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ed884a77-36e9-4058-b01d-7fa16df9c111",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 507,
                        "line_start": 480,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 43,
                        "order": 22,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "addObject2Group2:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "addObject2Group2:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2100,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "addObject2GrpFail2",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| Already Exists  |  {1}:{2} | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2863
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6e3cb690-3f4a-4af7-bfb8-194eab776c03",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "309b9e80-c722-44fd-b444-6d16ab69d932",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "277cc369-ff9b-4422-889f-b210ceafe0cb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2873
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_7() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObjectFail')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_fail(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObjectFail:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "createObjectS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "55728ad6-0a71-410c-b3a5-a1b1eaebd840",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 141,
                        "line_start": 128,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 7,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "add_note_7",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 2875
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "50b2b7a9-beb7-4ab8-a6f2-63738e1ab9e2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "277cc369-ff9b-4422-889f-b210ceafe0cb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2878
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "05e10750-3207-43b4-8908-b9754bafae57",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "05cb0f93-19b8-4201-833c-d6592a604d99",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2b61ff27-cc89-487d-ba89-7dbfbb4884ba",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2879
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a09a91fc-9261-43c7-89b9-77a2326330ff",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2b61ff27-cc89-487d-ba89-7dbfbb4884ba",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2885
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_9(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_9() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObject2GrpFail')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_fail_4(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObject2GrpFail:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a748e4e3-8708-4991-ad65-79595cace468",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 226,
                        "line_start": 213,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 9,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": 860
                        },
                        "previous_function": "",
                        "previous_name": "add_note_9",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 2887
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "152dc7b0-66d4-45a6-b63a-c82b85878f4e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a748e4e3-8708-4991-ad65-79595cace468",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a88a5319-9bd7-4906-927d-df5e6215494b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2889
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bcd4c89c-1538-4596-a100-e7a3ee7c6008",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a88a5319-9bd7-4906-927d-df5e6215494b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2891
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_4() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"addObject2Group2:action_result.status\", \"!=\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        addObject2GrpFail2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    addObject2GrpSuccess2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "addObject2Group2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "de04cd4b-8da1-4a24-bc4b-2955515c30b3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 528,
                        "line_start": 507,
                        "name": "decision",
                        "notes": "",
                        "number": 4,
                        "order": 23,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "addObject2Group2:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2280,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "decision_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 2896
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "37ea267f-d0e1-469c-bfa6-006a65a06f17",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "de04cd4b-8da1-4a24-bc4b-2955515c30b3",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7a7c654d-6b47-4b9c-879e-e0a2a4a9f880",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2897
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_3() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"checkExistingObject:action_result.summary.status_code\", \"==\", 200],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        prepareGroupBody2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"checkExistingObject:action_result.summary.status_code\", \"==\", 404],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        prepareObjectBody(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 3\n    checkObjectFail(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1da0d775-c77f-4d44-a06f-b074f0d064d0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 438,
                        "line_start": 404,
                        "name": "decision",
                        "notes": "",
                        "number": 3,
                        "order": 19,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "checkExistingObject:action_result.summary.status_code",
                                        "value": "200"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "checkExistingObject:action_result.summary.status_code",
                                        "value": "404"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -3020,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "decision_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 2898
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "04f194d6-f0ff-49ab-985f-5d4fc1d37eec",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1da0d775-c77f-4d44-a06f-b074f0d064d0",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8fb15f82-804e-44ad-91c4-aee62674ee14",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2900
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObject2GrpSuccess2"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2GrpSuccess2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2GrpSuccess2() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} |  Already Exists | {1}:{2} | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"addObject2Group2:action_result.status\",\n        \"addObject2Group2:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObject2GrpSuccess2\", separator=\", \")\n\n    add_note_12(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "addObject2Group2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2GrpSuccess2",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7a7c654d-6b47-4b9c-879e-e0a2a4a9f880",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 555,
                        "line_start": 528,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 44,
                        "order": 24,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "addObject2Group2:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "addObject2Group2:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2100,
                            "y": 540
                        },
                        "previous_function": "",
                        "previous_name": "addObject2GrpSuccess2",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} |  Already Exists | {1}:{2} | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2904
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObjectFail"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObjectFail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObjectFail() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  HOLD | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"createObjectS:action_result.status\",\n        \"createObjectS:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObjectFail\", separator=\", \")\n\n    add_note_7(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "createObjectS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObjectFail",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d30f0bd-ec66-4f35-b3da-49bb4d976281",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 128,
                        "line_start": 101,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 35,
                        "order": 6,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "createObjectS:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "createObjectS:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2100,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "addObjectFail",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  HOLD | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2905
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2e2df434-50c4-4052-955d-6819f15b1487",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8fb15f82-804e-44ad-91c4-aee62674ee14",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5c63e5c7-22ec-4c9e-80f6-ef83204fb001",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2907
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_11(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_11() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObject2GrpFail2')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_fail_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObject2GrpFail2:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "addObject2Group2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "05cb0f93-19b8-4201-833c-d6592a604d99",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 568,
                        "line_start": 555,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 11,
                        "order": 25,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "add_note_11",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 2909
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_14(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_14() called')\n\n    formatted_data_1 = phantom.get_format_data(name='checkObjectFail')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_fail_3(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "checkObjectFail:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5c63e5c7-22ec-4c9e-80f6-ef83204fb001",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 715,
                        "line_start": 702,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 14,
                        "order": 31,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "add_note_14",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 2910
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "60f90cd0-e94c-46a2-84fd-df0fa7008d1a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5c63e5c7-22ec-4c9e-80f6-ef83204fb001",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "23dc3977-71d3-4292-8567-a77f2c0fb905",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2911
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e2ba731d-f81a-4a21-8e93-8ae82fa14da9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "23dc3977-71d3-4292-8567-a77f2c0fb905",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2915
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact fail 3"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_fail_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_fail_3() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_fail_3' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_fail_3' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult\\\":\\\"False\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fail_3\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact fail 3",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "23dc3977-71d3-4292-8567-a77f2c0fb905",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 746,
                        "line_start": 715,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 6,
                        "order": 32,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1420,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_fail_3",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2916
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact fail 2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_fail_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_fail_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_fail_2' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_fail_2' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult\\\":\\\"False\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fail_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "addObject2Group2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact fail 2",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2b61ff27-cc89-487d-ba89-7dbfbb4884ba",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 643,
                        "line_start": 612,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 4,
                        "order": 28,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1420,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_fail_2",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2917
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.21",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 12,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "12",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact fail"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_fail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_fail() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_fail' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_fail' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult\\\":\\\"False\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fail\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "createObjectS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact fail",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9ff6cdbd-7006-4e15-bf13-ce394c948b46",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 299,
                        "line_end": 299,
                        "line_start": 268,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1420,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_fail",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2919
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult\":\"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult\":\"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact success 2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_success_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_success_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_success_2' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_success_2' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult\\\":\\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_success_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "addObject2Group2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact success 2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "277cc369-ff9b-4422-889f-b210ceafe0cb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 612,
                        "line_start": 581,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 3,
                        "order": 27,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1420,
                            "y": 540
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_success_2",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2920
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult\":\"False\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact fail 4"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_fail_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_fail_4() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_fail_4' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_fail_4' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult\\\":\\\"False\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fail_4\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact fail 4",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a88a5319-9bd7-4906-927d-df5e6215494b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 674,
                        "line_start": 643,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 5,
                        "order": 29,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1420,
                            "y": 860
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_fail_4",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2921
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareAdd2GroupBody"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareAdd2GroupBody(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareAdd2GroupBody() called')\n    \n    template = \"\"\"%%\n                {{\n                    \\\"name\\\": \\\"Phantom {0}_32\\\",\n                }}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareAdd2GroupBody\", separator=\", \")\n\n    addObject2Group(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "createObjectS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareAdd2GroupBody",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "db4713ad-a92a-4746-aca9-4e98efef0fde",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 79,
                        "line_start": 59,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 34,
                        "order": 4,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2860,
                            "y": 860
                        },
                        "previous_function": "",
                        "previous_name": "prepareAdd2GroupBody",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n                {{\n                    \"name\": \"Phantom {0}_32\",\n                }}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2922
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult\":\"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.21",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult\":\"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 12,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "12",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact success"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_success(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_success() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_success' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_success' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult\\\":\\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_success\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact success",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8ed5e4f1-cce4-45bb-83da-61f73b0fd4d6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 341,
                        "line_end": 330,
                        "line_start": 299,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 2,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1420,
                            "y": 1020
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_success",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2923
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareCheckObjectURL"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareCheckObjectURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareCheckObjectURL() called')\n    \n    template = \"\"\"api/v2/cmdb/firewall/address/Phantom {0}_32?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareCheckObjectURL\", separator=\", \")\n\n    checkExistingObject(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareCheckObjectURL",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5b40be7f-43b5-46d3-9386-5eed72b5bc34",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 385,
                        "line_start": 369,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 41,
                        "order": 17,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -3280,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "prepareCheckObjectURL",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "api/v2/cmdb/firewall/address/Phantom {0}_32?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2924
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareGroupBody2"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareGroupBody2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareGroupBody2() called')\n    \n    template = \"\"\"%%\n                {{\n                    \\\"name\\\": \\\"Phantom {0}_32\\\",\n                }}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareGroupBody2\", separator=\", \")\n\n    addObject2Group2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareGroupBody2",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9e5fa4dd-ce6c-49ac-926f-90af07d46de4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 458,
                        "line_start": 438,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 42,
                        "order": 20,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2860,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "prepareGroupBody2",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n                {{\n                    \"name\": \"Phantom {0}_32\",\n                }}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2925
                    },
                    {
                        "action": "get data",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "headers": "",
                            "location": "prepareCheckObjectURL:formatted_data",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "headers": "",
                                    "location": "prepareCheckObjectURL:formatted_data",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 2,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint?query=string)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 1,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "checkExistingObject"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def checkExistingObject(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('checkExistingObject() called')\n\n    # collect data for 'checkExistingObject' call\n    formatted_data_1 = phantom.get_format_data(name='prepareCheckObjectURL')\n\n    parameters = []\n    \n    # build parameters list for 'checkExistingObject' call\n    parameters.append({\n        'headers': \"\",\n        'location': formatted_data_1,\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"get data\", parameters=parameters, assets=['csoc-fortigate'], callback=cf_community_datetime_modify_1, name=\"checkExistingObject\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "checkExistingObject",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a07f5d19-2eb4-4b3d-88a6-e06733b4de4e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 404,
                        "line_start": 385,
                        "message": "Configuring now",
                        "name": "get data",
                        "notes": "Fail = Object not exists\nSuccess = Object already exists",
                        "number": 2,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -3280,
                            "y": 520
                        },
                        "previous_function": "",
                        "previous_name": "checkExistingObject",
                        "required_params": {
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2927
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "prepareGroupBody2:formatted_data",
                            "headers": "",
                            "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "prepareGroupBody2:formatted_data",
                                    "headers": "",
                                    "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "addObject2Group2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2Group2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2Group2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'addObject2Group2' call\n    formatted_data_1 = phantom.get_format_data(name='prepareGroupBody2')\n\n    parameters = []\n    \n    # build parameters list for 'addObject2Group2' call\n    parameters.append({\n        'body': formatted_data_1,\n        'headers': \"\",\n        'location': \"api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg\",\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=decision_4, name=\"addObject2Group2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2Group2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "748ac8fe-be7b-4428-920b-3eae8ca8b389",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 480,
                        "line_start": 458,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 22,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2600,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "addObject2Group2",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 2928
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "prepareAdd2GroupBody:formatted_data",
                            "headers": "",
                            "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "prepareAdd2GroupBody:formatted_data",
                                    "headers": "",
                                    "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "addObject2Group"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2Group(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2Group() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'addObject2Group' call\n    formatted_data_1 = phantom.get_format_data(name='prepareAdd2GroupBody')\n\n    parameters = []\n    \n    # build parameters list for 'addObject2Group' call\n    parameters.append({\n        'body': formatted_data_1,\n        'headers': \"\",\n        'location': \"api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg\",\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=decision_2, name=\"addObject2Group\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "createObjectS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2Group",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6e4041a1-1697-4ae9-967e-df341f6207e7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 101,
                        "line_start": 79,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 14,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2600,
                            "y": 860
                        },
                        "previous_function": "",
                        "previous_name": "addObject2Group",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 2930
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "checkObjectFail"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def checkObjectFail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('checkObjectFail() called')\n    \n    template = \"\"\"%%\nUnknow error while check existing object\n{2} : {3}\n\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| HOLD  |  HOLD | \nExecution Time : {1}\n```\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n        \"checkExistingObject:action_result.status\",\n        \"checkExistingObject:action_result.summary.status_code\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"checkObjectFail\", separator=\", \")\n\n    add_note_14(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "checkObjectFail",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8fb15f82-804e-44ad-91c4-aee62674ee14",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 702,
                        "line_start": 674,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 45,
                        "order": 30,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "checkExistingObject:action_result.status"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "checkExistingObject:action_result.summary.status_code"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2100,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "checkObjectFail",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nUnknow error while check existing object\n{2} : {3}\n\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| HOLD  |  HOLD | \nExecution Time : {1}\n```\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2931
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "prepareObjectBody:formatted_data",
                            "headers": "",
                            "location": "api/v2/cmdb/firewall/address?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortigate",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "prepareObjectBody:formatted_data",
                                    "headers": "",
                                    "location": "api/v2/cmdb/firewall/address?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 114,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortigate",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "114",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "createObjectS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def createObjectS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('createObjectS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'createObjectS' call\n    formatted_data_1 = phantom.get_format_data(name='prepareObjectBody')\n\n    parameters = []\n    \n    # build parameters list for 'createObjectS' call\n    parameters.append({\n        'body': formatted_data_1,\n        'headers': \"\",\n        'location': \"api/v2/cmdb/firewall/address?vdom=KCSEXTDEVL3&access_token=NtxpjdGr1m86nzxdbjGc7yHQz34Qrg\",\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortigate'], callback=decision_1, name=\"createObjectS\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 559,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "createObjectS",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9b3239a4-2ea9-43c9-b83c-9b7d8900cf06",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 163,
                        "line_start": 141,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 18,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2600,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "createObjectS",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 2932
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-12-13T07:29:36.432947+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}