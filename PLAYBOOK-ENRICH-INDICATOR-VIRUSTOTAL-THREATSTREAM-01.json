{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "import ipaddress",
            "description": "USE CASE: This playbook will perform enrichment tasks on the indicators",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'cf_local_Set_last_automated_action_1' block\n    cf_local_Set_last_automated_action_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e7d1249-fc1d-4b42-b2e0-46c87f70f4f9",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 24,
                        "line_start": 16,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -880,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5b1a0e2b-2329-4807-97b3-f7fd6ffe2b90",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2cd3ce47-6ea3-439f-978f-f3bf233c5c71",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8e3e2b86-6a54-4716-96cd-be15ceec2657",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 27
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "90cbcfd5-3b82-46a7-9eb1-a93458211543",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6152a89f-026e-4f15-9054-b42ae1e9cf5a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "662c7804-75e1-4b4e-9ab1-ec7298744974",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 54
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e3abb850-9924-438e-af93-4ec68b109123",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "96d330a2-65d6-4b0a-9cdb-8309a0caea84",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2bfdd9c0-e36a-4593-9d28-9ea0e5fb3552",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 78
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9ced3617-9014-407a-913f-1eb599bd98ea",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "464b5873-263c-4832-8a3a-a8ca3785b6e0",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "96d330a2-65d6-4b0a-9cdb-8309a0caea84",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 86
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ec622d39-35b5-4506-b84f-c76731db542a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "56d5c0e5-4dec-4bf8-9418-2dac22f10544",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6192cd8c-3540-4e9a-944d-1e28e12531c1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 101
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6cd5248a-0ab7-49b9-81b4-d3a3d817f8b9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6192cd8c-3540-4e9a-944d-1e28e12531c1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "817453e7-0dab-4bd6-bfec-c1104acfcc93",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 125
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "37cf66e0-5472-4feb-9a39-bb95ecfbd7cd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "eb72c1a4-590d-4f14-aec1-4f735159abdb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6152a89f-026e-4f15-9054-b42ae1e9cf5a",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 168
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1817e2f7-0704-46b1-8178-3946729e498a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "817453e7-0dab-4bd6-bfec-c1104acfcc93",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "755dd3e6-98f3-43c3-8974-37479245bbfb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 169
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a6e6b3e0-d138-473c-9fb7-882e01f86085",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "755dd3e6-98f3-43c3-8974-37479245bbfb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7d454980-3e7d-417c-9e7b-c0c93956354b",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 172
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "52461670-8141-4dd1-992f-dd1ff5d44408",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7d454980-3e7d-417c-9e7b-c0c93956354b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "14f69aca-b310-4403-9c93-56f1c57e400f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 179
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "998d1cac-1b28-4748-8f2f-762f8e59b2db",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0f238184-e26a-4132-a103-b978fe1213cf",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b7b64e2e-2112-4c45-a1da-e83afe578491",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 208
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6ecc814c-52b2-4b52-aa8a-0e6aa31d2e51",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b7b64e2e-2112-4c45-a1da-e83afe578491",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1d0f51e2-59fe-480a-9bd6-88ee9e7885ef",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 210
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "de21aff7-ed84-43e4-9962-a11d3a7f7941",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bc4c1234-e3de-46f6-92ea-8b73087fae60",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4c2e215d-a33b-4fc1-8740-9f483ac84359",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 224
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9456df90-7767-48c4-a5e5-41e33d022c31",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4c2e215d-a33b-4fc1-8740-9f483ac84359",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bde6c94d-a6d8-4dbb-b4bc-b3f9d1ebe0ef",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 226
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bd122bcf-5b36-4145-abca-381fe0b69b92",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bde6c94d-a6d8-4dbb-b4bc-b3f9d1ebe0ef",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9c2d6c2b-c626-452d-9bfc-290c5b4e59f1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 228
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a95e3e5a-e210-404c-bb7e-7b02bb4fab2a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9c2d6c2b-c626-452d-9bfc-290c5b4e59f1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c07c7b3e-ed08-4f80-836e-3fd59b50ee50",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 230
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "269a0aa5-f974-4ec9-b855-a0d5568c1d3f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bde6c94d-a6d8-4dbb-b4bc-b3f9d1ebe0ef",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f13ee761-6699-4715-8b20-2a7638649f6e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 258
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a67c42fb-b32c-41bc-b99c-cd5b2667f043",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f13ee761-6699-4715-8b20-2a7638649f6e",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9d94db7d-5d77-4707-a321-8efebf0ca963",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 262
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "258b2c25-3d81-4ae7-86d5-f62790edc00e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c07c7b3e-ed08-4f80-836e-3fd59b50ee50",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "beae9e79-4b96-4a10-be0c-9ef759d7f554",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 266
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3cc81f93-0d12-4951-a2f7-078138a04e84",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3b1cdd7-d425-4c16-ab1a-735dc91ee73c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "df479613-d91b-45a9-8d88-a0c301275764",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 286
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9e10aa12-8304-43e6-ac7c-ad27e811920f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "df479613-d91b-45a9-8d88-a0c301275764",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "641b24e0-be9e-44f7-9e0b-0a6442c6ef00",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 288
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5f2c05ee-75dc-42e4-948d-45ac3aabd96e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0e22cc7f-dd73-4c25-95c7-8971d09d8e8c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fb7e78ca-390d-48d6-b9ba-7eaa9e172198",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 308
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b2dabd20-fee7-45bb-8df1-913e22711887",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fb7e78ca-390d-48d6-b9ba-7eaa9e172198",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6fd40547-8672-4b3c-b73e-28197a58db46",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 310
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "928938d8-601a-435e-86f3-20623165697f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8d2a56d2-b5ff-49b7-a7b4-9548add07b37",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "78c82df2-6a95-4dbc-a661-56ab1edac0f3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 322
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1ad1e827-f085-4a03-8c6a-47cd9087ded9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bb8d7b5d-4363-4f14-98d3-92ec391c0448",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1294c975-2965-44e6-ac08-9bd1f18fe24e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 491
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "291c63a1-b8f7-4db0-89a9-00c997353b01",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1294c975-2965-44e6-ac08-9bd1f18fe24e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f7b46fed-dbb3-43d0-860f-8f0bbd3c61db",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 513
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "51f67bec-cc1d-494c-bbb8-7b6c8c484f27",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f7b46fed-dbb3-43d0-860f-8f0bbd3c61db",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f0366282-c840-47d6-9549-d783e62f723f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 516
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e4bf9576-5942-4d9b-9d30-802066a8b149",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f0366282-c840-47d6-9549-d783e62f723f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "875d40fe-eee9-4ebd-98ba-957e4a6ed8d3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 518
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f77583fd-6854-483e-8335-43b903ce09b9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "875d40fe-eee9-4ebd-98ba-957e4a6ed8d3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "505b325b-67d1-4ef6-b445-6f3358eb515a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 521
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7b942eef-e8a7-4639-995c-1816df4707fc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cc053eeb-63d6-4648-bb1c-136645d30118",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9a20fd03-9ed5-4eb7-9e26-ddeab4375e96",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 541
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "28930329-4ed0-4034-a310-2e630f92059f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9a20fd03-9ed5-4eb7-9e26-ddeab4375e96",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8bbecafa-c1a7-41c8-aad3-07d5948f2baa",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 543
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c213dc8f-b940-4421-a16c-9786dacc970e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f7b46fed-dbb3-43d0-860f-8f0bbd3c61db",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e8b80aa2-6be5-4342-a5b6-0d05ea88f474",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 564
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "88286232-bb49-48bd-a45c-5d39aa88caa5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e8b80aa2-6be5-4342-a5b6-0d05ea88f474",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "58236bdc-a1e5-4458-9cb3-6f79327e92bc",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 577
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "20810ab0-0773-4dbf-9a62-5f800042f2b9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "58236bdc-a1e5-4458-9cb3-6f79327e92bc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 579
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0a68c199-53a6-4799-a81f-b51113bff462",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1d0f51e2-59fe-480a-9bd6-88ee9e7885ef",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1213
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "eea86d84-2639-44a6-889b-0b04fce2a4c8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1216
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "90aaa5f9-3549-49eb-8565-247da770426b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2bfdd9c0-e36a-4593-9d28-9ea0e5fb3552",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1221
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1add1b5b-8010-4c28-90dc-2f66275b4424",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8bbecafa-c1a7-41c8-aad3-07d5948f2baa",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1252
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6d496350-1d85-4312-be19-9f09cd9752f6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "641b24e0-be9e-44f7-9e0b-0a6442c6ef00",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1253
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7e4abfc3-df10-4478-9760-852ddd193fd8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "78c82df2-6a95-4dbc-a661-56ab1edac0f3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1254
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9de3f184-6617-40e7-835e-2dad2c4d94d1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9d94db7d-5d77-4707-a321-8efebf0ca963",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1255
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e9617bac-2bee-49f4-b5ec-729726bf4fc8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8e3e2b86-6a54-4716-96cd-be15ceec2657",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "17e33334-9b03-4cf2-a3f4-d640d9e5ebeb",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1296
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f34c8d90-6e15-48ea-8242-2be24fca74fe",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "17e33334-9b03-4cf2-a3f4-d640d9e5ebeb",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "eb72c1a4-590d-4f14-aec1-4f735159abdb",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1297
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Update internal destinationDnsDomain art, WhoIS dst IP TS, IP Reputation dst IP TS, WhoIS src IP TS, IP Reputation src IP TS, Domain Reputation UBL, URL Reputation TS, File reputation TS, IP Reputation Host TS, WhoIS Host IP TS, FQDN Reputation UBL, Email reputation TS, Update internal requestURL artifact, Run kaspersky query on hostname, Run amp query on hostname, Run mcafee query on hostname, Update internal destinationDnsFQDN artif, Update internal sourceAddress artifact, Update internal destinationAddress artif",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5ef985c8-0576-4193-873d-441f0282b295",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2958,
                        "line_start": 2945,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 88,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2700,
                            "y": 1620
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1299
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4e673ec9-3bd1-4581-a971-92343cdbc296",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "eb72c1a4-590d-4f14-aec1-4f735159abdb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3bf4b7fd-cf6c-411a-b59f-524fd54c9fbf",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1327
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "586e3e04-7a26-4a7b-b144-e5ea0c0151f3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3bf4b7fd-cf6c-411a-b59f-524fd54c9fbf",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "464b5873-263c-4832-8a3a-a8ca3785b6e0",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1362
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format src IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_src_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_src_IP() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Check_if_sourceAddress_external:custom_function:sourceAddressExternal\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_src_IP\", separator=\", \")\n\n    IP_Reputation_src_IP_VT(container=container)\n    WhoIS_src_IP_TS(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format src IP",
                        "delimiter": ", ",
                        "description": "Format src IP",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "eb72c1a4-590d-4f14-aec1-4f735159abdb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 481,
                        "line_start": 462,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format src IP",
                        "number": 7,
                        "order": 15,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Check_if_sourceAddress_external:custom_function:sourceAddressExternal"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 420,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Format_src_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1371
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4576e95f-c54a-4f80-ae45-26fe35769d96",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "755dd3e6-98f3-43c3-8974-37479245bbfb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ef98d9ab-21fd-4582-aa6c-dad96defb5f5",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1412
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4bd05322-0767-4522-8ee2-a78362fadf9b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ef98d9ab-21fd-4582-aa6c-dad96defb5f5",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0f238184-e26a-4132-a103-b978fe1213cf",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1413
                    },
                    {
                        "action": "whois ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_src_IP:formatted_data"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "whois ip",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_src_IP:formatted_data"
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "National, NL"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn",
                                        "data_type": "string",
                                        "example_values": [
                                            "4134"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/13"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_country_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2009-10-23"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "apnic"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.address",
                                        "data_type": "string",
                                        "example_values": [
                                            "3 test IP Street Address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/32"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.city",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.nets.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "testmalicious@cta.cq.cn"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "ZL235-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.postal_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.range",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122 - 122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nir",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw_referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.admin.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.billing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "IP Manager"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.tech.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "hostmaster@nic.or.kr"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.raw",
                                        "data_type": "string",
                                        "example_values": [
                                            "inetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET\ndescr:          LG DACOM Corporation\nadmin-c:        IM646-AP\ntech-c:         IM646-AP\ncountry:        KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nlast-modified:  2017-02-03T00:55:02Z\nsource:         APNIC\nirt:            IRT-KRNIC-KR\naddress:        Jeollanam-do Naju-si Jinheung-gil\ne-mail:         irt@nic.or.kr\nabuse-mailbox:  irt@nic.or.kr\nadmin-c:        IM574-AP\ntech-c:         IM574-AP\nauth:           # Filtered\nremarks:        irt@nic.or.kr was validated on 2019-10-01\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2019-10-01T08:41:39Z\nsource:         APNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IM646-AP\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2017-08-07T01:06:21Z\nsource:         APNIC\ninetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET-KR\ndescr:          LG DACOM Corporation\ncountry:        KR\nadmin-c:        IA5-KR\ntech-c:         IA5-KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nremarks:        This information has been partially mirrored by APNIC from\nremarks:        KRNIC. To obtain more specific information, please use the\nremarks:        KRNIC whois server at whois.test.or.kr.\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\naddress:        LG UPLUS\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IA5-KR\nmnt-by:         MNT-KRNIC-AP\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Allocated Portable"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.updated_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-08-07T01:06:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved whois info",
                                            "Successfully retrieved whois info. Unable to fetch additional info for the given IP. ERROR: HTTP lookup failed for http://whois.test.or.kr/eng/whois.jsc."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "13",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "WhoIS src IP TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def WhoIS_src_IP_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('WhoIS_src_IP_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'WhoIS_src_IP_TS' call\n    formatted_data_1 = phantom.get_format_data(name='Format_src_IP')\n\n    parameters = []\n    \n    # build parameters list for 'WhoIS_src_IP_TS' call\n    parameters.append({\n        'ip': formatted_data_1,\n    })\n\n    phantom.act(action=\"whois ip\", parameters=parameters, assets=['threatstream cloud'], callback=join_Link_back_src_IP_to_artifact_record, name=\"WhoIS_src_IP_TS\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "WhoIS src IP TS",
                        "delay": 0,
                        "description": "WhoIS src IP TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3bf4b7fd-cf6c-411a-b59f-524fd54c9fbf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 156,
                        "line_start": 137,
                        "message": "Configuring now",
                        "name": "whois ip",
                        "notes": "WhoIS src IP TS",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 20
                        },
                        "previous_function": "",
                        "previous_name": "WhoIS_src_IP_TS",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1416
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c2e42c96-51b1-4893-a712-acca2a45e7f4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "29c6b1a9-f88d-4dbe-9d2e-0d8824d42a9a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1cbbc25f-ffd9-4bb9-8f8e-b411add211e2",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1480
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format dst IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_dst_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_dst_IP() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Check_if_destinationAddress_external:custom_function:destinationAddressExternal\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_dst_IP\", separator=\", \")\n\n    IP_Reputation_dst_IP_VT(container=container)\n    WhoIS_dst_IP_TS(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format dst IP",
                        "delimiter": ", ",
                        "description": "Format dst IP",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "755dd3e6-98f3-43c3-8974-37479245bbfb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 503,
                        "line_start": 484,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format dst IP",
                        "number": 8,
                        "order": 16,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Check_if_destinationAddress_external:custom_function:destinationAddressExternal"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 420,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "Format_dst_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1534
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c5fd18d6-eff2-413f-9fed-7f07c771de55",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "83319b8b-62d0-429d-883b-b33ce6ffc654",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3342a058-3cce-4d89-9ef0-5dadcaf227a0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1591
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c28c5a75-ea76-42ff-819e-ed205ce299c7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3f21ccf-6cf2-4caa-b7e0-128dea1078f7",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "83319b8b-62d0-429d-883b-b33ce6ffc654",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1595
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bc8cadf8-e3f2-4e04-b25e-e1d81a8f56e3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3f21ccf-6cf2-4caa-b7e0-128dea1078f7",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca5ff591-3351-4e36-99fb-ee4b746497ae",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1607
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3ab043fa-a23c-4f82-baa9-99460264ece4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3342a058-3cce-4d89-9ef0-5dadcaf227a0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a12e3f5f-158e-4375-9a8b-f855d6698dcb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1615
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "deb9d08a-05ec-441b-a7cd-f646a78d6af1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ca5ff591-3351-4e36-99fb-ee4b746497ae",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a12e3f5f-158e-4375-9a8b-f855d6698dcb",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1618
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_src_IP:formatted_data"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_src_IP:formatted_data"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.as_owner",
                                        "data_type": "string",
                                        "example_values": [
                                            "Orange"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.asn",
                                        "data_type": "numeric",
                                        "example_values": [
                                            3215
                                        ]
                                    },
                                    {
                                        "column_name": "Continent",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.attributes.continent",
                                        "data_type": "string",
                                        "example_values": [
                                            "EU"
                                        ]
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.attributes.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "FR"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "A domain seen in a CnC panel URL for the Oski malware resolved to this IP address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "benkow.cc"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1622592000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "CnC Panel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "29d3fd00029d29d00042d43d00041d598ac0c1012db967bb1ad0ff2491b3ae"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "a60f993e5b931eed2a66b7aef3c70912cd032acbd2c8791021a3c8cb90b38c579d5fa02d04e4e897b1762981b455d77cea92c56bcf902451a76148582a1e80acc1aeb2a0d72f7e8db8739f874e83a48553311eb3cfe48a0d065a309cedf35930ae3e2cb0d4dca8dba64dc7b5f707debac4f28ce313db8623e235790002b37a8dbc63c99276335c4a59faf1957d5384fc318c56b159e51213c21699e328821f64efc433d74372962d6d160f92b5f1dbbc4e8e11c74ce673e8c52f6270c40c1192cf7bf2bbf44660818b8999085388ac8949332f178b294d409334e8d70ca051a5a7ed53df82e58a46ee2c07afa08f0e0f9ea87311f1a8e79ad3406292e811a5c6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef007600eec095ee8d72640f92e3c3b91bc712a3696a097b4b6a1a14"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "8a747faf85cdee95cd3d9cd0e24614f371351d27"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/repo/certs/gts1c3.der"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1c3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "a8de321f3772284cf53c30f681f14bf6ed035cd9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.exponent",
                                        "data_type": "string",
                                        "example_values": [
                                            "010001"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.key_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2048
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.modulus",
                                        "data_type": "string",
                                        "example_values": [
                                            "00befdaf74bea72e3cb68a2a6bb74521f2ee951338a5d9f6a738f98996e2d72295009f544112aa918e99b93ab48f073322711b992887a46211dc853c48e2f22372419c8841221f3dad453289c2331d3b4c881c67660ecc5093bf601130a7aef9f54419ee8e64754c3b07125893af7dabf0bb0f7232d0226605620e12a4416fb22d5c9182394941b218009f6fe2d28d170a1042a0aa726eb9b052a84a57597a4b9a556be00c004ba024bd310d9e4faf17482b137f81b35f470ead7d7d9e418a6653799e9d04f9fd1d4b588809c0e2ac0680f406ba8f4358a143e3cacc7fe792ab9655cc73729dbcd3d7362a7ffe6f903942dc3d588c97917930a9b28b8561c9219b"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "25c739f93320b7b0a00000000f2c8e9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1509
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns.google"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "3336113948b043f8f258cceebe9eb7a8dd7d06de"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "5349f6e0344c78df40dfcfc2ecd6f83d01b4bcf1def8c548c87691211d904f05"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-10-04 03:52:55"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-07-12 03:52:56"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1628548284
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "column_name": "Network",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.attributes.network",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.0.0.0/12"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.regional_internet_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "RIPE NCC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "NetRange: 2.0.0.0 - 2.255.255.255\nCIDR: 2.0.0.0/8\nNetName: 2-RIPE\nNetHandle: NET-2-0-0-0-1\nParent: ()\nNetType: Allocated to RIPE NCC\nOriginAS: \nOrganization: RIPE Network Coordination Centre (RIPE)\nRegDate: 2009-09-29\nUpdated: 2009-09-30\nComment: These addresses have been further assigned to users in\nComment: the RIPE NCC region. Contact information can be found in\nComment: the RIPE database at http://www.ripe.net/whois\nRef: https://rdap.arin.net/registry/ip/2.0.0.0\nResourceLink: https://apps.db.ripe.net/search/query.html\nResourceLink: whois.ripe.net\nOrgName: RIPE Network Coordination Centre\nOrgId: RIPE\nAddress: P.O. Box 10096\nCity: Amsterdam\nStateProv: \nPostalCode: 1001EB\nCountry: NL\nRegDate: \nUpdated: 2013-07-29\nRef: https://rdap.arin.net/registry/entity/RIPE\nReferralServer: whois://whois.ripe.net\nResourceLink: https://apps.db.ripe.net/search/query.html\nOrgAbuseHandle: ABUSE3850-ARIN\nOrgAbuseName: Abuse Contact\nOrgAbusePhone: +31205354444 \nOrgAbuseEmail: abuse@ripe.net\nOrgAbuseRef: https://rdap.arin.net/registry/entity/ABUSE3850-ARIN\nOrgTechHandle: RNO29-ARIN\nOrgTechName: RIPE NCC Operations\nOrgTechPhone: +31 20 535 4444 \nOrgTechEmail: hostmaster@ripe.net\nOrgTechRef: https://rdap.arin.net/registry/entity/RNO29-ARIN\ninetnum: 2.3.0.0 - 2.3.7.255\nnetname: IP2000-ADSL-BAS\ndescr: POP CLE\ncountry: FR\nadmin-c: WITR1-RIPE\ntech-c: WITR1-RIPE\nstatus: ASSIGNED PA\nremarks: for hacking, spamming or security problems send mail to\nremarks: abuse@orange.fr\nmnt-by: FT-BRX\ncreated: 2017-07-27T08:58:11Z\nlast-modified: 2017-07-27T08:58:11Z\nsource: RIPE\nrole: Wanadoo France Technical Role\naddress: FRANCE TELECOM/SCR\naddress: 48 rue Camille Desmoulins\naddress: 92791 ISSY LES MOULINEAUX CEDEX 9\naddress: FR\nphone: +33 1 58 88 50 00\nabuse-mailbox: abuse@orange.fr\nadmin-c: BRX1-RIPE\ntech-c: BRX1-RIPE\nnic-hdl: WITR1-RIPE\nmnt-by: FT-BRX\ncreated: 2001-12-04T17:57:08Z\nlast-modified: 2013-07-16T14:09:50Z\nsource: RIPE # Filtered\nroute: 2.3.0.0/16\ndescr: France Telecom Orange\norigin: AS3215\nmnt-by: RAIN-TRANSPAC\nmnt-by: FT-BRX\ncreated: 2012-11-22T09:32:05Z\nlast-modified: 2012-11-22T09:32:05Z\nsource: RIPE\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/ip_addresses/2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip_address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 86, Malicious: 0, Suspicious: 0, Undetected: 11"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation src IP VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_src_IP_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_src_IP_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'IP_Reputation_src_IP_VT' call\n    formatted_data_1 = phantom.get_format_data(name='Format_src_IP')\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_src_IP_VT' call\n    parameters.append({\n        'ip': formatted_data_1,\n    })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=IP_Reputation_src_IP_TS, name=\"IP_Reputation_src_IP_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "IP Reputation src IP VT",
                        "delay": "0",
                        "description": "IP Reputation src IP VT",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6152a89f-026e-4f15-9054-b42ae1e9cf5a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 111,
                        "line_start": 92,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation src IP VT",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_src_IP_VT",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1660
                    },
                    {
                        "action": "whois ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_dst_IP:formatted_data"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "whois ip",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_dst_IP:formatted_data"
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "National, NL"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn",
                                        "data_type": "string",
                                        "example_values": [
                                            "4134"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/13"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_country_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2009-10-23"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "apnic"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.address",
                                        "data_type": "string",
                                        "example_values": [
                                            "3 test IP Street Address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/32"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.city",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.nets.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "testmalicious@cta.cq.cn"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "ZL235-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.postal_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.range",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122 - 122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nir",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw_referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.admin.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.billing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "IP Manager"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.tech.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "hostmaster@nic.or.kr"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.raw",
                                        "data_type": "string",
                                        "example_values": [
                                            "inetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET\ndescr:          LG DACOM Corporation\nadmin-c:        IM646-AP\ntech-c:         IM646-AP\ncountry:        KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nlast-modified:  2017-02-03T00:55:02Z\nsource:         APNIC\nirt:            IRT-KRNIC-KR\naddress:        Jeollanam-do Naju-si Jinheung-gil\ne-mail:         irt@nic.or.kr\nabuse-mailbox:  irt@nic.or.kr\nadmin-c:        IM574-AP\ntech-c:         IM574-AP\nauth:           # Filtered\nremarks:        irt@nic.or.kr was validated on 2019-10-01\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2019-10-01T08:41:39Z\nsource:         APNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IM646-AP\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2017-08-07T01:06:21Z\nsource:         APNIC\ninetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET-KR\ndescr:          LG DACOM Corporation\ncountry:        KR\nadmin-c:        IA5-KR\ntech-c:         IA5-KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nremarks:        This information has been partially mirrored by APNIC from\nremarks:        KRNIC. To obtain more specific information, please use the\nremarks:        KRNIC whois server at whois.test.or.kr.\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\naddress:        LG UPLUS\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IA5-KR\nmnt-by:         MNT-KRNIC-AP\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Allocated Portable"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.updated_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-08-07T01:06:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved whois info",
                                            "Successfully retrieved whois info. Unable to fetch additional info for the given IP. ERROR: HTTP lookup failed for http://whois.test.or.kr/eng/whois.jsc."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "13",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "WhoIS dst IP TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def WhoIS_dst_IP_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('WhoIS_dst_IP_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'WhoIS_dst_IP_TS' call\n    formatted_data_1 = phantom.get_format_data(name='Format_dst_IP')\n\n    parameters = []\n    \n    # build parameters list for 'WhoIS_dst_IP_TS' call\n    parameters.append({\n        'ip': formatted_data_1,\n    })\n\n    phantom.act(action=\"whois ip\", parameters=parameters, assets=['threatstream cloud'], callback=join_Link_back_dst_IP_to_artifact_record, name=\"WhoIS_dst_IP_TS\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "WhoIS dst IP TS",
                        "delay": 0,
                        "description": "WhoIS dst IP TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ef98d9ab-21fd-4582-aa6c-dad96defb5f5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 548,
                        "line_start": 529,
                        "message": "Configuring now",
                        "name": "whois ip",
                        "notes": "WhoIS dst IP TS",
                        "number": 2,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 300
                        },
                        "previous_function": "",
                        "previous_name": "WhoIS_dst_IP_TS",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1711
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "71353a5a-2c6e-488e-9023-d80a7a1cc900",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a12e3f5f-158e-4375-9a8b-f855d6698dcb",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0ffe6a1f-47ac-4523-a565-7129e9140caa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1769
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3e333295-1f0f-45ca-a026-bb1a6fb44d18",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0ffe6a1f-47ac-4523-a565-7129e9140caa",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3fbe56e-deed-4e22-8944-0ddfb9151a06",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1859
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_dst_IP:formatted_data"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_dst_IP:formatted_data"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.as_owner",
                                        "data_type": "string",
                                        "example_values": [
                                            "Orange"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.asn",
                                        "data_type": "numeric",
                                        "example_values": [
                                            3215
                                        ]
                                    },
                                    {
                                        "column_name": "Continent",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.attributes.continent",
                                        "data_type": "string",
                                        "example_values": [
                                            "EU"
                                        ]
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.attributes.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "FR"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "A domain seen in a CnC panel URL for the Oski malware resolved to this IP address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "benkow.cc"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1622592000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "CnC Panel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "29d3fd00029d29d00042d43d00041d598ac0c1012db967bb1ad0ff2491b3ae"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "a60f993e5b931eed2a66b7aef3c70912cd032acbd2c8791021a3c8cb90b38c579d5fa02d04e4e897b1762981b455d77cea92c56bcf902451a76148582a1e80acc1aeb2a0d72f7e8db8739f874e83a48553311eb3cfe48a0d065a309cedf35930ae3e2cb0d4dca8dba64dc7b5f707debac4f28ce313db8623e235790002b37a8dbc63c99276335c4a59faf1957d5384fc318c56b159e51213c21699e328821f64efc433d74372962d6d160f92b5f1dbbc4e8e11c74ce673e8c52f6270c40c1192cf7bf2bbf44660818b8999085388ac8949332f178b294d409334e8d70ca051a5a7ed53df82e58a46ee2c07afa08f0e0f9ea87311f1a8e79ad3406292e811a5c6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef007600eec095ee8d72640f92e3c3b91bc712a3696a097b4b6a1a14"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "8a747faf85cdee95cd3d9cd0e24614f371351d27"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/repo/certs/gts1c3.der"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1c3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "a8de321f3772284cf53c30f681f14bf6ed035cd9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.exponent",
                                        "data_type": "string",
                                        "example_values": [
                                            "010001"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.key_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2048
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.modulus",
                                        "data_type": "string",
                                        "example_values": [
                                            "00befdaf74bea72e3cb68a2a6bb74521f2ee951338a5d9f6a738f98996e2d72295009f544112aa918e99b93ab48f073322711b992887a46211dc853c48e2f22372419c8841221f3dad453289c2331d3b4c881c67660ecc5093bf601130a7aef9f54419ee8e64754c3b07125893af7dabf0bb0f7232d0226605620e12a4416fb22d5c9182394941b218009f6fe2d28d170a1042a0aa726eb9b052a84a57597a4b9a556be00c004ba024bd310d9e4faf17482b137f81b35f470ead7d7d9e418a6653799e9d04f9fd1d4b588809c0e2ac0680f406ba8f4358a143e3cacc7fe792ab9655cc73729dbcd3d7362a7ffe6f903942dc3d588c97917930a9b28b8561c9219b"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "25c739f93320b7b0a00000000f2c8e9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1509
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns.google"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "3336113948b043f8f258cceebe9eb7a8dd7d06de"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "5349f6e0344c78df40dfcfc2ecd6f83d01b4bcf1def8c548c87691211d904f05"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-10-04 03:52:55"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-07-12 03:52:56"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1628548284
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "column_name": "Network",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.attributes.network",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.0.0.0/12"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.regional_internet_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "RIPE NCC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "NetRange: 2.0.0.0 - 2.255.255.255\nCIDR: 2.0.0.0/8\nNetName: 2-RIPE\nNetHandle: NET-2-0-0-0-1\nParent: ()\nNetType: Allocated to RIPE NCC\nOriginAS: \nOrganization: RIPE Network Coordination Centre (RIPE)\nRegDate: 2009-09-29\nUpdated: 2009-09-30\nComment: These addresses have been further assigned to users in\nComment: the RIPE NCC region. Contact information can be found in\nComment: the RIPE database at http://www.ripe.net/whois\nRef: https://rdap.arin.net/registry/ip/2.0.0.0\nResourceLink: https://apps.db.ripe.net/search/query.html\nResourceLink: whois.ripe.net\nOrgName: RIPE Network Coordination Centre\nOrgId: RIPE\nAddress: P.O. Box 10096\nCity: Amsterdam\nStateProv: \nPostalCode: 1001EB\nCountry: NL\nRegDate: \nUpdated: 2013-07-29\nRef: https://rdap.arin.net/registry/entity/RIPE\nReferralServer: whois://whois.ripe.net\nResourceLink: https://apps.db.ripe.net/search/query.html\nOrgAbuseHandle: ABUSE3850-ARIN\nOrgAbuseName: Abuse Contact\nOrgAbusePhone: +31205354444 \nOrgAbuseEmail: abuse@ripe.net\nOrgAbuseRef: https://rdap.arin.net/registry/entity/ABUSE3850-ARIN\nOrgTechHandle: RNO29-ARIN\nOrgTechName: RIPE NCC Operations\nOrgTechPhone: +31 20 535 4444 \nOrgTechEmail: hostmaster@ripe.net\nOrgTechRef: https://rdap.arin.net/registry/entity/RNO29-ARIN\ninetnum: 2.3.0.0 - 2.3.7.255\nnetname: IP2000-ADSL-BAS\ndescr: POP CLE\ncountry: FR\nadmin-c: WITR1-RIPE\ntech-c: WITR1-RIPE\nstatus: ASSIGNED PA\nremarks: for hacking, spamming or security problems send mail to\nremarks: abuse@orange.fr\nmnt-by: FT-BRX\ncreated: 2017-07-27T08:58:11Z\nlast-modified: 2017-07-27T08:58:11Z\nsource: RIPE\nrole: Wanadoo France Technical Role\naddress: FRANCE TELECOM/SCR\naddress: 48 rue Camille Desmoulins\naddress: 92791 ISSY LES MOULINEAUX CEDEX 9\naddress: FR\nphone: +33 1 58 88 50 00\nabuse-mailbox: abuse@orange.fr\nadmin-c: BRX1-RIPE\ntech-c: BRX1-RIPE\nnic-hdl: WITR1-RIPE\nmnt-by: FT-BRX\ncreated: 2001-12-04T17:57:08Z\nlast-modified: 2013-07-16T14:09:50Z\nsource: RIPE # Filtered\nroute: 2.3.0.0/16\ndescr: France Telecom Orange\norigin: AS3215\nmnt-by: RAIN-TRANSPAC\nmnt-by: FT-BRX\ncreated: 2012-11-22T09:32:05Z\nlast-modified: 2012-11-22T09:32:05Z\nsource: RIPE\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/ip_addresses/2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip_address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 86, Malicious: 0, Suspicious: 0, Undetected: 11"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation dst IP VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_dst_IP_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_dst_IP_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'IP_Reputation_dst_IP_VT' call\n    formatted_data_1 = phantom.get_format_data(name='Format_dst_IP')\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_dst_IP_VT' call\n    parameters.append({\n        'ip': formatted_data_1,\n    })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=IP_Reputation_dst_IP_TS, name=\"IP_Reputation_dst_IP_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "IP Reputation dst IP VT",
                        "delay": 0,
                        "description": "IP Reputation dst IP VT",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7d454980-3e7d-417c-9e7b-c0c93956354b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 459,
                        "line_start": 440,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation dst IP VT",
                        "number": 3,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_dst_IP_VT",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1885
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream cloud",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "16",
                                "type": "threat intel"
                            },
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation Host TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_code_dark_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_Host_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_Host_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    # collect data for 'IP_Reputation_Host_TS' call\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_Host_TS' call\n    parameters.append({\n        'ip': Extract_address_of_hostname__ListAddressExternal,\n        'limit': 1000,\n    })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=join_filter_24, name=\"IP_Reputation_Host_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "IP Reputation Host VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def IP_Reputation_Host_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_Host_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    # collect data for 'IP_Reputation_Host_TS' call\n\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal):\n        parameters = []\n        # build parameters list for 'IP_Reputation_Host_TS' call\n        parameters.append({\n            'ip': ip,\n            'limit': 1000,\n        })\n        phantom.act(action=\"ip reputation\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=join_filter_24, name=f\"IP_Reputation_Host_TS_{i}\", parent_action=action)\n\n    return",
                        "custom_join": "",
                        "custom_name": "IP Reputation Host TS",
                        "delay": 0,
                        "description": "IP Reputation Host TS",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3342a058-3cce-4d89-9ef0-5dadcaf227a0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1935,
                        "line_start": 1916,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation Host TS",
                        "number": 8,
                        "order": 56,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1500,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_Host_TS",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1889
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "945d335b-dec8-4eb5-81f0-b81966271c96",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3f21ccf-6cf2-4caa-b7e0-128dea1078f7",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c69c4f7d-ae30-48b4-9027-6d0ef63d8b19",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1890
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 21
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_21(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_21() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [1, \"==\", 1],\n        ],\n        name=\"filter_21:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        pass\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "WhoIS dst IP TS, IP Reputation dst IP TS, WhoIS src IP TS, IP Reputation src IP TS, Domain Reputation UBL, URL Reputation TS, File reputation TS, IP Reputation Host TS, WhoIS Host IP TS, FQDN Reputation UBL, Email reputation TS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "de812137-e049-456f-b439-08c09ff66452",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_filter_21(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_filter_21() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['WhoIS_dst_IP_TS', 'IP_Reputation_dst_IP_TS', 'WhoIS_src_IP_TS', 'IP_Reputation_src_IP_TS', 'Domain_Reputation_UBL', 'URL_Reputation_TS', 'File_reputation_TS', 'IP_Reputation_Host_TS', 'WhoIS_Host_IP_TS', 'FQDN_Reputation_UBL', 'Email_reputation_TS']):\n        \n        # call connected block \"filter_21\"\n        filter_21(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 1687,
                        "line_end": 1698,
                        "line_start": 1669,
                        "name": "filter",
                        "notes": "",
                        "number": 21,
                        "order": 49,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "1",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3220,
                            "y": 520
                        },
                        "previous_function": "",
                        "previous_name": "filter_21",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 1894
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "02309bd6-576b-4c4c-9ffa-58fb435d2faf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3fbe56e-deed-4e22-8944-0ddfb9151a06",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1895
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4e916c0e-08eb-4481-842c-341af589d45c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c69c4f7d-ae30-48b4-9027-6d0ef63d8b19",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1896
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.as_owner",
                                        "data_type": "string",
                                        "example_values": [
                                            "Orange"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.asn",
                                        "data_type": "numeric",
                                        "example_values": [
                                            3215
                                        ]
                                    },
                                    {
                                        "column_name": "Continent",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.attributes.continent",
                                        "data_type": "string",
                                        "example_values": [
                                            "EU"
                                        ]
                                    },
                                    {
                                        "column_name": "Country",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.attributes.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "FR"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "A domain seen in a CnC panel URL for the Oski malware resolved to this IP address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.source",
                                        "data_type": "string",
                                        "example_values": [
                                            "benkow.cc"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1622592000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.crowdsourced_context.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "CnC Panel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "29d3fd00029d29d00042d43d00041d598ac0c1012db967bb1ad0ff2491b3ae"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "a60f993e5b931eed2a66b7aef3c70912cd032acbd2c8791021a3c8cb90b38c579d5fa02d04e4e897b1762981b455d77cea92c56bcf902451a76148582a1e80acc1aeb2a0d72f7e8db8739f874e83a48553311eb3cfe48a0d065a309cedf35930ae3e2cb0d4dca8dba64dc7b5f707debac4f28ce313db8623e235790002b37a8dbc63c99276335c4a59faf1957d5384fc318c56b159e51213c21699e328821f64efc433d74372962d6d160f92b5f1dbbc4e8e11c74ce673e8c52f6270c40c1192cf7bf2bbf44660818b8999085388ac8949332f178b294d409334e8d70ca051a5a7ed53df82e58a46ee2c07afa08f0e0f9ea87311f1a8e79ad3406292e811a5c6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef007600eec095ee8d72640f92e3c3b91bc712a3696a097b4b6a1a14"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "8a747faf85cdee95cd3d9cd0e24614f371351d27"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/repo/certs/gts1c3.der"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1c3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "a8de321f3772284cf53c30f681f14bf6ed035cd9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.exponent",
                                        "data_type": "string",
                                        "example_values": [
                                            "010001"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.key_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2048
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.rsa.modulus",
                                        "data_type": "string",
                                        "example_values": [
                                            "00befdaf74bea72e3cb68a2a6bb74521f2ee951338a5d9f6a738f98996e2d72295009f544112aa918e99b93ab48f073322711b992887a46211dc853c48e2f22372419c8841221f3dad453289c2331d3b4c881c67660ecc5093bf601130a7aef9f54419ee8e64754c3b07125893af7dabf0bb0f7232d0226605620e12a4416fb22d5c9182394941b218009f6fe2d28d170a1042a0aa726eb9b052a84a57597a4b9a556be00c004ba024bd310d9e4faf17482b137f81b35f470ead7d7d9e418a6653799e9d04f9fd1d4b588809c0e2ac0680f406ba8f4358a143e3cacc7fe792ab9655cc73729dbcd3d7362a7ffe6f903942dc3d588c97917930a9b28b8561c9219b"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "25c739f93320b7b0a00000000f2c8e9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1509
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns.google"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "3336113948b043f8f258cceebe9eb7a8dd7d06de"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "5349f6e0344c78df40dfcfc2ecd6f83d01b4bcf1def8c548c87691211d904f05"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-10-04 03:52:55"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-07-12 03:52:56"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1628548284
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "column_name": "Network",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.attributes.network",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.0.0.0/12"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.regional_internet_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "RIPE NCC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "NetRange: 2.0.0.0 - 2.255.255.255\nCIDR: 2.0.0.0/8\nNetName: 2-RIPE\nNetHandle: NET-2-0-0-0-1\nParent: ()\nNetType: Allocated to RIPE NCC\nOriginAS: \nOrganization: RIPE Network Coordination Centre (RIPE)\nRegDate: 2009-09-29\nUpdated: 2009-09-30\nComment: These addresses have been further assigned to users in\nComment: the RIPE NCC region. Contact information can be found in\nComment: the RIPE database at http://www.ripe.net/whois\nRef: https://rdap.arin.net/registry/ip/2.0.0.0\nResourceLink: https://apps.db.ripe.net/search/query.html\nResourceLink: whois.ripe.net\nOrgName: RIPE Network Coordination Centre\nOrgId: RIPE\nAddress: P.O. Box 10096\nCity: Amsterdam\nStateProv: \nPostalCode: 1001EB\nCountry: NL\nRegDate: \nUpdated: 2013-07-29\nRef: https://rdap.arin.net/registry/entity/RIPE\nReferralServer: whois://whois.ripe.net\nResourceLink: https://apps.db.ripe.net/search/query.html\nOrgAbuseHandle: ABUSE3850-ARIN\nOrgAbuseName: Abuse Contact\nOrgAbusePhone: +31205354444 \nOrgAbuseEmail: abuse@ripe.net\nOrgAbuseRef: https://rdap.arin.net/registry/entity/ABUSE3850-ARIN\nOrgTechHandle: RNO29-ARIN\nOrgTechName: RIPE NCC Operations\nOrgTechPhone: +31 20 535 4444 \nOrgTechEmail: hostmaster@ripe.net\nOrgTechRef: https://rdap.arin.net/registry/entity/RNO29-ARIN\ninetnum: 2.3.0.0 - 2.3.7.255\nnetname: IP2000-ADSL-BAS\ndescr: POP CLE\ncountry: FR\nadmin-c: WITR1-RIPE\ntech-c: WITR1-RIPE\nstatus: ASSIGNED PA\nremarks: for hacking, spamming or security problems send mail to\nremarks: abuse@orange.fr\nmnt-by: FT-BRX\ncreated: 2017-07-27T08:58:11Z\nlast-modified: 2017-07-27T08:58:11Z\nsource: RIPE\nrole: Wanadoo France Technical Role\naddress: FRANCE TELECOM/SCR\naddress: 48 rue Camille Desmoulins\naddress: 92791 ISSY LES MOULINEAUX CEDEX 9\naddress: FR\nphone: +33 1 58 88 50 00\nabuse-mailbox: abuse@orange.fr\nadmin-c: BRX1-RIPE\ntech-c: BRX1-RIPE\nnic-hdl: WITR1-RIPE\nmnt-by: FT-BRX\ncreated: 2001-12-04T17:57:08Z\nlast-modified: 2013-07-16T14:09:50Z\nsource: RIPE # Filtered\nroute: 2.3.0.0/16\ndescr: France Telecom Orange\norigin: AS3215\nmnt-by: RAIN-TRANSPAC\nmnt-by: FT-BRX\ncreated: 2012-11-22T09:32:05Z\nlast-modified: 2012-11-22T09:32:05Z\nsource: RIPE\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612735030
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.3.4.5"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/ip_addresses/2.3.4.5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip_address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            86
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            11
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 86, Malicious: 0, Suspicious: 0, Undetected: 11"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to query",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation Host VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_code_dark_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_Host_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_Host_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    # collect data for 'IP_Reputation_Host_VT' call\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_Host_VT' call\n    parameters.append({\n        'ip': Extract_address_of_hostname__ListAddressExternal,\n    })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=IP_Reputation_Host_TS, name=\"IP_Reputation_Host_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Run kaspersky query on hostname, Run amp query on hostname, Run mcafee query on hostname",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def IP_Reputation_Host_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_Host_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    # collect data for 'IP_Reputation_Host_VT' call\n    last_index = len(Extract_address_of_hostname__ListAddressExternal) - 1\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal):\n        parameters = []\n        # build parameters list for 'IP_Reputation_Host_VT' call\n        parameters.append({\n            'ip': ip,\n        })\n        if i < last_index:\n            phantom.act(action=\"ip reputation\", parameters=parameters, assets=['virustotal v3 asset'], name=f\"IP_Reputation_Host_VT_{i}\")\n        else:\n            phantom.act(action=\"ip reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=IP_Reputation_Host_TS, name=f\"IP_Reputation_Host_VT_{i}\")\n\n    return",
                        "custom_join": "",
                        "custom_name": "IP Reputation Host VT",
                        "delay": 0,
                        "description": "IP Reputation Host VT",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "83319b8b-62d0-429d-883b-b33ce6ffc654",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1913,
                        "line_start": 1892,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation Host VT",
                        "number": 7,
                        "order": 55,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1260,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_Host_VT",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1901
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 9
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_requestURL_is_private(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_requestURL_is_private() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_requestURL_external:custom_function:requestURLExternal\", \"!=\", []],\n        ],\n        name=\"Check_if_requestURL_is_private:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_URL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_requestURL_external:custom_function:requestURLInternal\", \"!=\", []],\n        ],\n        name=\"Check_if_requestURL_is_private:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        Link_URL_to_artifact_record(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Check if requestURL is private",
                        "description": "Check if requestURL is private",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bde6c94d-a6d8-4dbb-b4bc-b3f9d1ebe0ef",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 816,
                        "line_start": 785,
                        "name": "filter",
                        "notes": "Check if requestURL is private",
                        "number": 9,
                        "order": 24,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_requestURL_external:custom_function:requestURLExternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_requestURL_external:custom_function:requestURLInternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_requestURL_is_private",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 1932
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Check if requestURL exte..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_requestURL_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_requestURL_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_requestURL:condition_1:artifact:*.cef.requestURL'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_requestURL_external__requestURLExternal = None\n    Check_if_requestURL_external__requestURLInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    # ktbdomainlist = [\"ktb.co.th\" , \"ktbcs.co.th\"]\n    success, message, ktburllist = phantom.get_list(list_name='ktburllist')\n    \n    urllist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    for item in urllist:\n        if not any(item in sublist for sublist in ktburllist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_requestURL_external__requestURLExternal = externaltemplist\n    Check_if_requestURL_external__requestURLInternal = internaltemplist\n    ###################################################\n    ###################################################\n    ###################################################\n    ###################################################\n    ###################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_requestURL_external:requestURLExternal', value=json.dumps(Check_if_requestURL_external__requestURLExternal))\n    phantom.save_run_data(key='Check_if_requestURL_external:requestURLInternal', value=json.dumps(Check_if_requestURL_external__requestURLInternal))\n    Check_if_requestURL_is_private(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def Check_if_requestURL_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_requestURL_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_requestURL:condition_1:artifact:*.cef.requestURL'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_requestURL_external__requestURLExternal = None\n    Check_if_requestURL_external__requestURLInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    # ktbdomainlist = [\"ktb.co.th\" , \"ktbcs.co.th\"]\n    success, message, ktburllist = phantom.get_list(list_name='ktburllist')\n    \n    urllist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    for item in urllist:\n        if not any(item in sublist for sublist in ktburllist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_requestURL_external__requestURLExternal = externaltemplist\n    Check_if_requestURL_external__requestURLInternal = internaltemplist\n    ###################################################\n    ###################################################\n    ###################################################\n    ###################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_requestURL_external:requestURLExternal', value=json.dumps(Check_if_requestURL_external__requestURLExternal))\n    phantom.save_run_data(key='Check_if_requestURL_external:requestURLInternal', value=json.dumps(Check_if_requestURL_external__requestURLInternal))\n    Check_if_requestURL_is_private(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Check if requestURL external",
                        "description": "Check if requestURL external",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4c2e215d-a33b-4fc1-8740-9f483ac84359",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 782,
                        "line_start": 737,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Check if requestURL external",
                        "number": 9,
                        "order": 23,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "requestURLExternal"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "requestURLInternal"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_requestURL:condition_1:artifact:*.cef.requestURL"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 20,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_requestURL_external",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    # ktbdomainlist = [\"ktb.co.th\" , \"ktbcs.co.th\"]\n    success, message, ktburllist = phantom.get_list(list_name='ktburllist')\n    \n    urllist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    for item in urllist:\n        if not any(item in sublist for sublist in ktburllist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_requestURL_external__requestURLExternal = externaltemplist\n    Check_if_requestURL_external__requestURLInternal = internaltemplist\n    ###################################################\n    ###################################################\n    ###################################################\n    ###################################################\n    ###################################################",
                        "warn": false,
                        "z": 1933
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format URL"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_URL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_URL() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Check_if_requestURL_external:custom_function:requestURLExternal\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_URL\", separator=\", \")\n\n    URL_Reputation_VT(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format URL",
                        "delimiter": ", ",
                        "description": "Format URL",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9c2d6c2b-c626-452d-9bfc-290c5b4e59f1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 837,
                        "line_start": 819,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format URL",
                        "number": 10,
                        "order": 25,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Check_if_requestURL_external:custom_function:requestURLExternal"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 420,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "Format_URL",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1934
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dbc72b68-3df2-4682-9f37-692b2f22e72f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "beae9e79-4b96-4a10-be0c-9ef759d7f554",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3b1cdd7-d425-4c16-ab1a-735dc91ee73c",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1937
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "126c6202-35a7-4143-a3ce-6ce0ea72b7b1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "505b325b-67d1-4ef6-b445-6f3358eb515a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "05236e89-21ac-439f-9b23-9a585e3ef32f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1983
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4d948e25-7992-4dac-86fe-75560aee0f78",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "05236e89-21ac-439f-9b23-9a585e3ef32f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc053eeb-63d6-4648-bb1c-136645d30118",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1992
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ff394086-47e9-4b5e-872a-809603d4d7a4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e8fcb564-b1dd-426b-95aa-ad6f34d22c49",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "01b9914b-2f24-4ddc-b43c-954816d316fc",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2067
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 25
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_destinationDnsFQDN(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_destinationDnsFQDN() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationDnsFQDN\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_destinationDnsFQDN:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Check_if_destinationDnsFQDN_external(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out destinationDnsFQDN",
                        "description": "Filter out destinationDnsFQDN",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e8fcb564-b1dd-426b-95aa-ad6f34d22c49",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2202,
                        "line_start": 2184,
                        "name": "filter",
                        "notes": "Filter out destinationDnsFQDN",
                        "number": 25,
                        "order": 63,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationDnsFQDN",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_destinationDnsFQDN",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2083
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "39602445-0bdf-487b-8bb7-7ab99f73858e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "01b9914b-2f24-4ddc-b43c-954816d316fc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "dce86624-172b-42d3-acd2-78cc8a702b2a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2086
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Check if destinationDnsF..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Check_if_destinationDnsFQDN_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationDnsFQDN_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_destinationDnsFQDN:condition_1:artifact:*.cef.destinationDnsFQDN'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNExternal = None\n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    success, message, ktbdomainlist = phantom.get_list(list_name='ktbfqdnlist')\n\n    domainlist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    phantom.debug(ktbdomainlist)\n    for item in domainlist:\n        if not any(item in sublist for sublist in ktbdomainlist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNExternal = externaltemplist\n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNInternal = internaltemplist\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_destinationDnsFQDN_external:destinationDnsFQDNExternal', value=json.dumps(Check_if_destinationDnsFQDN_external__destinationDnsFQDNExternal))\n    phantom.save_run_data(key='Check_if_destinationDnsFQDN_external:destinationDnsFQDNInternal', value=json.dumps(Check_if_destinationDnsFQDN_external__destinationDnsFQDNInternal))\n    filter_26(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def Check_if_destinationDnsFQDN_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationDnsFQDN_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_destinationDnsFQDN:condition_1:artifact:*.cef.destinationDnsFQDN'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNExternal = None\n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    success, message, ktbdomainlist = phantom.get_list(list_name='ktbfqdnlist')\n\n    domainlist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    phantom.debug(ktbdomainlist)\n    for item in domainlist:\n        if not any(item in sublist for sublist in ktbdomainlist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNExternal = externaltemplist\n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNInternal = internaltemplist\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_destinationDnsFQDN_external:destinationDnsFQDNExternal', value=json.dumps(Check_if_destinationDnsFQDN_external__destinationDnsFQDNExternal))\n    phantom.save_run_data(key='Check_if_destinationDnsFQDN_external:destinationDnsFQDNInternal', value=json.dumps(Check_if_destinationDnsFQDN_external__destinationDnsFQDNInternal))\n    filter_26(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Check if destinationDnsFQDN external",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "01b9914b-2f24-4ddc-b43c-954816d316fc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2241,
                        "line_start": 2202,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 27,
                        "order": 64,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "destinationDnsFQDNExternal"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "destinationDnsFQDNInternal"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_destinationDnsFQDN:condition_1:artifact:*.cef.destinationDnsFQDN"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 20,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_destinationDnsFQDN_external",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "    success, message, ktbdomainlist = phantom.get_list(list_name='ktbfqdnlist')\n\n    domainlist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    phantom.debug(ktbdomainlist)\n    for item in domainlist:\n        if not any(item in sublist for sublist in ktbdomainlist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNExternal = externaltemplist\n    Check_if_destinationDnsFQDN_external__destinationDnsFQDNInternal = internaltemplist\n\n",
                        "warn": false,
                        "z": 2088
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 16
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_destinationDnsDomain_is_private(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationDnsDomain_is_private() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainExternal\", \"!=\", []],\n        ],\n        name=\"Check_if_destinationDnsDomain_is_private:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_domain(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainInternal\", \"!=\", []],\n        ],\n        name=\"Check_if_destinationDnsDomain_is_private:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        Link_domain_to_artifact_record(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Check if destinationDnsDomain is private",
                        "description": "Check if destinationDnsDomain is private",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f7b46fed-dbb3-43d0-860f-8f0bbd3c61db",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1387,
                        "line_start": 1356,
                        "name": "filter",
                        "notes": "Check if destinationDnsDomain is private",
                        "number": 16,
                        "order": 40,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainExternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainInternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_destinationDnsDomain_is_private",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2090
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ceaefe8b-cca0-40f0-88c9-a6fa6cfedabf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "dce86624-172b-42d3-acd2-78cc8a702b2a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3f7b9a2-5e8b-46cc-a198-945de6fc65d4",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2092
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format domain"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_domain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_domain() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainExternal\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_domain\", separator=\", \")\n\n    Domain_Reputation_VT(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format domain",
                        "delimiter": ", ",
                        "description": "Format domain",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f0366282-c840-47d6-9549-d783e62f723f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1408,
                        "line_start": 1390,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format domain",
                        "number": 14,
                        "order": 41,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainExternal"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 420,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Format_domain",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2096
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 26
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_26(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_26() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNExternal\", \"!=\", []],\n        ],\n        name=\"filter_26:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_FQDN(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNInternal\", \"!=\", []],\n        ],\n        name=\"filter_26:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        Link_FQDN_to_artifact_record(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "dce86624-172b-42d3-acd2-78cc8a702b2a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2272,
                        "line_start": 2241,
                        "name": "filter",
                        "notes": "",
                        "number": 26,
                        "order": 65,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNExternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNInternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "filter_26",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2099
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ee6177dc-3179-4f6e-aefb-e86f1263ae69",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3f7b9a2-5e8b-46cc-a198-945de6fc65d4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d62e6110-7bf9-49bb-a634-0c20f52d81b7",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2101
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "10bb1ade-c087-4d25-8b99-4ef0ef7bae9f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d62e6110-7bf9-49bb-a634-0c20f52d81b7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b43d172a-18f4-4774-8bd7-ecd5728da45e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2103
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Domain_Reputation_VT:action_result.parameter.domain",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Domain_Reputation_VT:action_result.parameter.domain",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.URLVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Web of Trust",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 2,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 1,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on Domain"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to investigate",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "13",
                                "type": "threat intel"
                            },
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Domain_Reputation_VT:action_result.parameter.domain",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.URLVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Web of Trust",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 2,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 1,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on Domain"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to investigate",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Domain Reputation TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Domain_Reputation_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Domain_Reputation_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Domain_Reputation_TS' call\n    results_data_1 = phantom.collect2(container=container, datapath=['Domain_Reputation_VT:action_result.parameter.domain', 'Domain_Reputation_VT:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'Domain_Reputation_TS' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'limit': 1000,\n                'domain': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=Domain_Reputation_UBL, name=\"Domain_Reputation_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Domain Reputation TS",
                        "delay": 0,
                        "description": "Domain Reputation TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "505b325b-67d1-4ef6-b445-6f3358eb515a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1457,
                        "line_start": 1433,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "Domain Reputation TS",
                        "number": 2,
                        "order": 43,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 980,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Domain_Reputation_TS",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2106
                    },
                    {
                        "action": "url reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "limit": 1000,
                            "url": "URL_Reputation_VT:action_result.parameter.url"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "url reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "limit": 1000,
                                    "url": "URL_Reputation_VT:action_result.parameter.url"
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://122.122.122.122/"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_address",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_email",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Protection of Private Person"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_org",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_phone",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "url"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on URL"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    },
                                    "url": {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "URL to investigate",
                                        "key": "url",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "13",
                                "type": "threat intel"
                            },
                            {
                                "action": "url reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "limit": 1000,
                                    "url": "URL_Reputation_VT:action_result.parameter.url"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://122.122.122.122/"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_address",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_email",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Protection of Private Person"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_org",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_phone",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.registrant_updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "url"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on URL"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    },
                                    "url": {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "URL to investigate",
                                        "key": "url",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "URL Reputation TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def URL_Reputation_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('URL_Reputation_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'URL_Reputation_TS' call\n    results_data_1 = phantom.collect2(container=container, datapath=['URL_Reputation_VT:action_result.parameter.url', 'URL_Reputation_VT:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'URL_Reputation_TS' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'url': results_item_1[0],\n                'limit': 1000,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"url reputation\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=Link_back_requestURL_to_artifact_record, name=\"URL_Reputation_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "URL Reputation VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "URL Reputation TS",
                        "delay": 0,
                        "description": "URL Reputation TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "beae9e79-4b96-4a10-be0c-9ef759d7f554",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 941,
                        "line_start": 917,
                        "message": "Configuring now",
                        "name": "url reputation",
                        "notes": "URL Reputation TS",
                        "number": 2,
                        "order": 29,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 980,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "URL_Reputation_TS",
                        "required_params": {
                            "url": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2108
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_dst_IP:formatted_data",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_dst_IP:formatted_data",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "13",
                                "type": "threat intel"
                            },
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_dst_IP:formatted_data",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation dst IP TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_dst_IP_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_dst_IP_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'IP_Reputation_dst_IP_TS' call\n    formatted_data_1 = phantom.get_format_data(name='Format_dst_IP')\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_dst_IP_TS' call\n    parameters.append({\n        'ip': formatted_data_1,\n        'limit': 1000,\n    })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=join_Link_back_dst_IP_to_artifact_record, name=\"IP_Reputation_dst_IP_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "IP Reputation dst IP VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "IP Reputation dst IP TS",
                        "delay": "0",
                        "description": "IP Reputation src IP TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "14f69aca-b310-4403-9c93-56f1c57e400f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 526,
                        "line_start": 506,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation src IP TS",
                        "number": 4,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_dst_IP_TS",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2110
                    },
                    {
                        "action": "ip reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_src_IP:formatted_data",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_src_IP:formatted_data",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            },
                            {
                                "action": "ip reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream cloud",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Format_src_IP:formatted_data",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.tlp",
                                        "data_type": "string",
                                        "example_values": [
                                            "red"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subtype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_modified",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.can_add_public_tags",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.IPVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Shodan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string",
                                        "example_values": [
                                            "Blocklist Brute Force IPs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on IP"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP to investigate",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "16",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "IP Reputation src IP TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def IP_Reputation_src_IP_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('IP_Reputation_src_IP_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'IP_Reputation_src_IP_TS' call\n    formatted_data_1 = phantom.get_format_data(name='Format_src_IP')\n\n    parameters = []\n    \n    # build parameters list for 'IP_Reputation_src_IP_TS' call\n    parameters.append({\n        'ip': formatted_data_1,\n        'limit': 1000,\n    })\n\n    phantom.act(action=\"ip reputation\", parameters=parameters, assets=['threatstream hybrid vm','threatstream cloud'], callback=join_Link_back_src_IP_to_artifact_record, name=\"IP_Reputation_src_IP_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 198,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "IP Reputation src IP VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "IP Reputation src IP TS",
                        "delay": 0,
                        "description": "IP Reputation src IP TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "662c7804-75e1-4b4e-9ab1-ec7298744974",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 134,
                        "line_start": 114,
                        "message": "Configuring now",
                        "name": "ip reputation",
                        "notes": "IP Reputation src IP TS",
                        "number": 2,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "IP_Reputation_src_IP_TS",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2111
                    },
                    {
                        "action": "whois ip",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal"
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "whois ip",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream cloud",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal"
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "National, NL"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn",
                                        "data_type": "string",
                                        "example_values": [
                                            "4134"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/13"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_country_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2009-10-23"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "apnic"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.address",
                                        "data_type": "string",
                                        "example_values": [
                                            "3 test IP Street Address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/32"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.city",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.nets.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "testmalicious@cta.cq.cn"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "ZL235-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.postal_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.range",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122 - 122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nir",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw_referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.admin.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.billing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "IP Manager"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.tech.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "hostmaster@nic.or.kr"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.raw",
                                        "data_type": "string",
                                        "example_values": [
                                            "inetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET\ndescr:          LG DACOM Corporation\nadmin-c:        IM646-AP\ntech-c:         IM646-AP\ncountry:        KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nlast-modified:  2017-02-03T00:55:02Z\nsource:         APNIC\nirt:            IRT-KRNIC-KR\naddress:        Jeollanam-do Naju-si Jinheung-gil\ne-mail:         irt@nic.or.kr\nabuse-mailbox:  irt@nic.or.kr\nadmin-c:        IM574-AP\ntech-c:         IM574-AP\nauth:           # Filtered\nremarks:        irt@nic.or.kr was validated on 2019-10-01\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2019-10-01T08:41:39Z\nsource:         APNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IM646-AP\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2017-08-07T01:06:21Z\nsource:         APNIC\ninetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET-KR\ndescr:          LG DACOM Corporation\ncountry:        KR\nadmin-c:        IA5-KR\ntech-c:         IA5-KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nremarks:        This information has been partially mirrored by APNIC from\nremarks:        KRNIC. To obtain more specific information, please use the\nremarks:        KRNIC whois server at whois.test.or.kr.\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\naddress:        LG UPLUS\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IA5-KR\nmnt-by:         MNT-KRNIC-AP\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Allocated Portable"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.updated_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-08-07T01:06:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved whois info",
                                            "Successfully retrieved whois info. Unable to fetch additional info for the given IP. ERROR: HTTP lookup failed for http://whois.test.or.kr/eng/whois.jsc."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "16",
                                "type": "threat intel"
                            },
                            {
                                "action": "whois ip",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "Extract_address_of_hostname:custom_function:ListAddressExternal"
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "National, NL"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn",
                                        "data_type": "string",
                                        "example_values": [
                                            "4134"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/13"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_country_code",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2009-10-23"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.asn_registry",
                                        "data_type": "string",
                                        "example_values": [
                                            "apnic"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.address",
                                        "data_type": "string",
                                        "example_values": [
                                            "3 test IP Street Address"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.cidr",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122/32"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.city",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.country",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.created",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.nets.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "testmalicious@cta.cq.cn"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "ZL235-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "WX"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.postal_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.range",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122 - 122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nets.*.updated",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.nir",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.addtional_info.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "122.122.122.122"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.raw_referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.addtional_info.referral",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.admin.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.billing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.registrant.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "IP Manager"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.contacts.tech.handle",
                                        "data_type": "string",
                                        "example_values": [
                                            "IM646-AP"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.emails",
                                        "data_type": "string",
                                        "example_values": [
                                            "hostmaster@nic.or.kr"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.raw",
                                        "data_type": "string",
                                        "example_values": [
                                            "inetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET\ndescr:          LG DACOM Corporation\nadmin-c:        IM646-AP\ntech-c:         IM646-AP\ncountry:        KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nlast-modified:  2017-02-03T00:55:02Z\nsource:         APNIC\nirt:            IRT-KRNIC-KR\naddress:        Jeollanam-do Naju-si Jinheung-gil\ne-mail:         irt@nic.or.kr\nabuse-mailbox:  irt@nic.or.kr\nadmin-c:        IM574-AP\ntech-c:         IM574-AP\nauth:           # Filtered\nremarks:        irt@nic.or.kr was validated on 2019-10-01\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2019-10-01T08:41:39Z\nsource:         APNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IM646-AP\nmnt-by:         MNT-KRNIC-AP\nlast-modified:  2017-08-07T01:06:21Z\nsource:         APNIC\ninetnum:        61.32.0.0 - 61.39.255.255\nnetname:        BORANET-KR\ndescr:          LG DACOM Corporation\ncountry:        KR\nadmin-c:        IA5-KR\ntech-c:         IA5-KR\nstatus:         ALLOCATED PORTABLE\nmnt-by:         MNT-KRNIC-AP\nmnt-irt:        IRT-KRNIC-KR\nremarks:        This information has been partially mirrored by APNIC from\nremarks:        KRNIC. To obtain more specific information, please use the\nremarks:        KRNIC whois server at whois.test.or.kr.\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\nperson:         IP Manager\naddress:        Seoul Yongsan-gu Hangang-daero 32\naddress:        LG UPLUS\ncountry:        KR\nphone:          +82-2-10-1\ne-mail:         ipadm@lguplus.co.kr\nnic-hdl:        IA5-KR\nmnt-by:         MNT-KRNIC-AP\nchanged:        hostmaster@nic.or.kr\nsource:         KRNIC\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Allocated Portable"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.updated_date",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-08-07T01:06:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved whois info",
                                            "Successfully retrieved whois info. Unable to fetch additional info for the given IP. ERROR: HTTP lookup failed for http://whois.test.or.kr/eng/whois.jsc."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "IP",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "WhoIS Host IP TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_code_dark_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def WhoIS_Host_IP_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('WhoIS_Host_IP_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    # collect data for 'WhoIS_Host_IP_TS' call\n\n    parameters = []\n    \n    # build parameters list for 'WhoIS_Host_IP_TS' call\n    parameters.append({\n        'ip': Extract_address_of_hostname__ListAddressExternal,\n    })\n\n    phantom.act(action=\"whois ip\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=join_filter_24, name=\"WhoIS_Host_IP_TS\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Run kaspersky query on hostname, Run amp query on hostname, Run mcafee query on hostname",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def WhoIS_Host_IP_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('WhoIS_Host_IP_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    # collect data for 'WhoIS_Host_IP_TS' call\n    \n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal):\n        parameters = []\n        # build parameters list for 'WhoIS_Host_IP_TS' call\n        parameters.append({\n           'ip': ip,\n        })\n\n        phantom.act(action=\"whois ip\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=join_filter_24, name=f\"WhoIS_Host_IP_TS_{i}\")\n\n    return",
                        "custom_join": "",
                        "custom_name": "WhoIS Host IP TS",
                        "delay": 0,
                        "description": "WhoIS Host IP TS",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ca5ff591-3351-4e36-99fb-ee4b746497ae",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1957,
                        "line_start": 1938,
                        "message": "Configuring now",
                        "name": "whois ip",
                        "notes": "WhoIS Host IP TS",
                        "number": 4,
                        "order": 57,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1260,
                            "y": 580
                        },
                        "previous_function": "",
                        "previous_name": "WhoIS_Host_IP_TS",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2112
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "29bd8de5-fa05-4947-899b-68977ff0495d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b43d172a-18f4-4774-8bd7-ecd5728da45e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c5905959-fa2a-4660-9918-f8b8e3de93c0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2114
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f0f06c38-b373-41f4-8c50-526513236f84",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c5905959-fa2a-4660-9918-f8b8e3de93c0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e65b61d5-f038-4c81-b7d3-9c306ee12235",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2116
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0d1b7a29-1d8a-4c84-9504-f1e0ba61fa77",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e65b61d5-f038-4c81-b7d3-9c306ee12235",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4622a74f-e926-475d-aa22-66b5140af3e9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2120
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "741aa71e-db7a-4313-94fe-25704baf023f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4622a74f-e926-475d-aa22-66b5140af3e9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "17391579-34c3-4819-ae90-b155e9b66308",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2122
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "07a86a4b-8886-4bb0-b604-d541ad0988b6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "17391579-34c3-4819-ae90-b155e9b66308",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2124
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Format_domain:formatted_data"
                        },
                        "angle": 0,
                        "app": "VirusTotal",
                        "appid": "11f676a4-f3d4-4db0-8587-f4e942c07c7c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_domain:formatted_data"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.BitDefender",
                                        "data_type": "string",
                                        "example_values": [
                                            "searchengines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Comodo Valkyrie Verdict",
                                        "data_type": "string",
                                        "example_values": [
                                            "mobile communications"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Dr.Web",
                                        "data_type": "string",
                                        "example_values": [
                                            "social networks"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Forcepoint ThreatSeeker",
                                        "data_type": "string",
                                        "example_values": [
                                            "search engines and portals"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Sophos",
                                        "data_type": "string",
                                        "example_values": [
                                            "social networks"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.alphaMountain.ai",
                                        "data_type": "string",
                                        "example_values": [
                                            "Social Networking"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.sophos",
                                        "data_type": "string",
                                        "example_values": [
                                            "search engines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.creation_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            874296000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "27d40d40d29d40d1dc42d43d00041d4689ee210389f4f6b4b5b1b93f92252d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            90
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.expire",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1800
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.flag",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.minimum",
                                        "data_type": "numeric",
                                        "example_values": [
                                            60
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.priority",
                                        "data_type": "numeric",
                                        "example_values": [
                                            40
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.refresh",
                                        "data_type": "numeric",
                                        "example_values": [
                                            900
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.retry",
                                        "data_type": "numeric",
                                        "example_values": [
                                            900
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.rname",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns-admin.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.serial",
                                        "data_type": "numeric",
                                        "example_values": [
                                            357917103
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.tag",
                                        "data_type": "string",
                                        "example_values": [
                                            "issue"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.ttl",
                                        "data_type": "numeric",
                                        "example_values": [
                                            78
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "MX"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "alt3.aspmx.l.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613638555
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "811fa6e0af210a512fa773cf16fd62ecae6fdacab57fb71626791b9ad5bfb19841435e7480dba67b1fd17828204f05905379bccc98a7f39a037a5b4eb43f3bb54c51df02137b13abffc343b500319819854920af065afb70a3857657909b0d006de9b7aa2197fe94c2ccde7df14760dd8c5f87d5f89c3b1b835c81f06b727d5ea21fc04c0126ef1377cceb935ccedc969b6b503e5e3c783f0fb13f7dd465d67b807f9d268082449813eb0700e7bd472b238f8c551c07b3e130b88b7fb96799e6d9c1ac8b632603840eeb429e271856a94cd62f1d1bdfeda4f02ae0df7b1d0b80aceab4b73d137f4b4bec851555213fc540dc74defb81761304e3339062d65a60"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef0076007d3ef2f88fff88556824c2c0ca9e5289792bc50e78097f2e"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "98d1f86e10ebcf9bec609f18901ba0eb7d09fd2b"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/gsr2/GTS1O1.crt"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1o1core"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.certificate_policies",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.3.6.1.4.1.11129.2.5.3"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.crl_distribution_points",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://crl.pki.goog/GTS1O1core.crl"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.extended_key_usage",
                                        "data_type": "string",
                                        "example_values": [
                                            "serverAuth"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.key_usage",
                                        "data_type": "string",
                                        "example_values": [
                                            "ff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_alternative_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "yt.be"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "67bf0513cc1c9c4765c43f3fedd687cf88bcd93d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.C",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "GTS CA 1O1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.O",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Trust Services"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.OU",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "EC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.ec.oid",
                                        "data_type": "string",
                                        "example_values": [
                                            "secp256r1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.ec.pub",
                                        "data_type": "string",
                                        "example_values": [
                                            "0453d3053c10d8cc8d06a01c02171e8c2d91b355cc188112943a217edc2fe60e3592f329404573e124c077917dcf319f14a6a2c3e433ee695d60a7e9ba3883aa5b"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "c4ea98ea7e5e1f430200000000870182"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2441
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.C",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "*.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.L",
                                        "data_type": "string",
                                        "example_values": [
                                            "Mountain View"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.O",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test LLC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.ST",
                                        "data_type": "string",
                                        "example_values": [
                                            "California"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "c25b1dc8be5f679087ecd28fb5eae7b3985cf604"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "a29f9d0d85bd02b3150267ac5a820e4aadc9becc7b5884530a549e6d98dac4a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-04-13 07:57:08"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-01-19 07:57:09"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613638555
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613640948
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_update_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1568043544
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Alexa.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Alexa.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576161
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Cisco Umbrella.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Cisco Umbrella.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613489762
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Majestic.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Majestic.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576163
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Quantcast.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Quantcast.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1585755370
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Statvoo.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Statvoo.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576162
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.registrar",
                                        "data_type": "string",
                                        "example_values": [
                                            "MarkMonitor Inc."
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            256
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            104
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "Creation Date: 1997-09-15T04:00:00Z\nDNSSEC: unsigned\nDomain Name: TEST.COM\nDomain Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\nDomain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\nDomain Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\nDomain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited\nDomain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited\nDomain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited\nName Server: NS1.TEST.COM\nName Server: NS2.TEST.COM\nName Server: NS3.TEST.COM\nName Server: NS4.TEST.COM\nRegistrar Abuse Contact Email: abusecomplaints@markmonitor.com\nRegistrar Abuse Contact Phone: +1.2083895740\nRegistrar IANA ID: 292\nRegistrar URL: http://www.markmonitor.com\nRegistrar WHOIS Server: whois.markmonitor.com\nRegistrar: MarkMonitor Inc.\nRegistry Domain ID: 2138514_DOMAIN_COM-VRSN\nRegistry Expiry Date: 2028-09-14T04:00:00Z\nUpdated Date: 2019-09-09T15:39:04Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612787278
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/domains/test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            90
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 90, Malicious: 0, Suspicious: 0, Undetected: 8"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Domain Reputation VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Domain_Reputation_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Domain_Reputation_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Domain_Reputation_VT' call\n    formatted_data_1 = phantom.get_format_data(name='Format_domain')\n\n    parameters = []\n    \n    # build parameters list for 'Domain_Reputation_VT' call\n    parameters.append({\n        'domain': formatted_data_1,\n    })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=Domain_Reputation_TS, name=\"Domain_Reputation_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Domain Reputation VT",
                        "delay": 0,
                        "description": "Domain Reputation VT",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "875d40fe-eee9-4ebd-98ba-957e4a6ed8d3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1430,
                        "line_start": 1411,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "Domain Reputation VT",
                        "number": 1,
                        "order": 42,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Domain_Reputation_VT",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2128
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Format_FQDN:formatted_data"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_FQDN:formatted_data"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.BitDefender",
                                        "data_type": "string",
                                        "example_values": [
                                            "searchengines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Comodo Valkyrie Verdict",
                                        "data_type": "string",
                                        "example_values": [
                                            "mobile communications"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Dr.Web",
                                        "data_type": "string",
                                        "example_values": [
                                            "social networks"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Forcepoint ThreatSeeker",
                                        "data_type": "string",
                                        "example_values": [
                                            "search engines and portals"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Sophos",
                                        "data_type": "string",
                                        "example_values": [
                                            "social networks"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.alphaMountain.ai",
                                        "data_type": "string",
                                        "example_values": [
                                            "Social Networking"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.sophos",
                                        "data_type": "string",
                                        "example_values": [
                                            "search engines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.creation_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            874296000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.jarm",
                                        "data_type": "string",
                                        "example_values": [
                                            "27d40d40d29d40d1dc42d43d00041d4689ee210389f4f6b4b5b1b93f92252d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            90
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.expire",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1800
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.flag",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.minimum",
                                        "data_type": "numeric",
                                        "example_values": [
                                            60
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.priority",
                                        "data_type": "numeric",
                                        "example_values": [
                                            40
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.refresh",
                                        "data_type": "numeric",
                                        "example_values": [
                                            900
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.retry",
                                        "data_type": "numeric",
                                        "example_values": [
                                            900
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.rname",
                                        "data_type": "string",
                                        "example_values": [
                                            "dns-admin.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.serial",
                                        "data_type": "numeric",
                                        "example_values": [
                                            357917103
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.tag",
                                        "data_type": "string",
                                        "example_values": [
                                            "issue"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.ttl",
                                        "data_type": "numeric",
                                        "example_values": [
                                            78
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "MX"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_dns_records.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "alt3.aspmx.l.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_dns_records_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613638555
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature",
                                        "data_type": "string",
                                        "example_values": [
                                            "811fa6e0af210a512fa773cf16fd62ecae6fdacab57fb71626791b9ad5bfb19841435e7480dba67b1fd17828204f05905379bccc98a7f39a037a5b4eb43f3bb54c51df02137b13abffc343b500319819854920af065afb70a3857657909b0d006de9b7aa2197fe94c2ccde7df14760dd8c5f87d5f89c3b1b835c81f06b727d5ea21fc04c0126ef1377cceb935ccedc969b6b503e5e3c783f0fb13f7dd465d67b807f9d268082449813eb0700e7bd472b238f8c551c07b3e130b88b7fb96799e6d9c1ac8b632603840eeb429e271856a94cd62f1d1bdfeda4f02ae0df7b1d0b80aceab4b73d137f4b4bec851555213fc540dc74defb81761304e3339062d65a60"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.cert_signature.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.1.3.6.1.4.1.11129.2.4.2",
                                        "data_type": "string",
                                        "example_values": [
                                            "0481f100ef0076007d3ef2f88fff88556824c2c0ca9e5289792bc50e78097f2e"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.CA",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.authority_key_identifier.keyid",
                                        "data_type": "string",
                                        "example_values": [
                                            "98d1f86e10ebcf9bec609f18901ba0eb7d09fd2b"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.CA Issuers",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://pki.goog/gsr2/GTS1O1.crt"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.ca_information_access.OCSP",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://ocsp.pki.goog/gts1o1core"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.certificate_policies",
                                        "data_type": "string",
                                        "example_values": [
                                            "1.3.6.1.4.1.11129.2.5.3"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.crl_distribution_points",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://crl.pki.goog/GTS1O1core.crl"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.extended_key_usage",
                                        "data_type": "string",
                                        "example_values": [
                                            "serverAuth"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.key_usage",
                                        "data_type": "string",
                                        "example_values": [
                                            "ff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_alternative_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "yt.be"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.extensions.subject_key_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "67bf0513cc1c9c4765c43f3fedd687cf88bcd93d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.C",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "GTS CA 1O1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.O",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Trust Services"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.issuer.OU",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "EC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.ec.oid",
                                        "data_type": "string",
                                        "example_values": [
                                            "secp256r1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.public_key.ec.pub",
                                        "data_type": "string",
                                        "example_values": [
                                            "0453d3053c10d8cc8d06a01c02171e8c2d91b355cc188112943a217edc2fe60e3592f329404573e124c077917dcf319f14a6a2c3e433ee695d60a7e9ba3883aa5b"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.serial_number",
                                        "data_type": "string",
                                        "example_values": [
                                            "c4ea98ea7e5e1f430200000000870182"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.signature_algorithm",
                                        "data_type": "string",
                                        "example_values": [
                                            "sha256RSA"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2441
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.C",
                                        "data_type": "string",
                                        "example_values": [
                                            "US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.CN",
                                        "data_type": "string",
                                        "example_values": [
                                            "*.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.L",
                                        "data_type": "string",
                                        "example_values": [
                                            "Mountain View"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.O",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test LLC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.subject.ST",
                                        "data_type": "string",
                                        "example_values": [
                                            "California"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint",
                                        "data_type": "string",
                                        "example_values": [
                                            "c25b1dc8be5f679087ecd28fb5eae7b3985cf604"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.thumbprint_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "a29f9d0d85bd02b3150267ac5a820e4aadc9becc7b5884530a549e6d98dac4a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_after",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-04-13 07:57:08"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.validity.not_before",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-01-19 07:57:09"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate.version",
                                        "data_type": "string",
                                        "example_values": [
                                            "V3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_https_certificate_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613638555
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613640948
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_update_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1568043544
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Alexa.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Alexa.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576161
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Cisco Umbrella.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Cisco Umbrella.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613489762
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Majestic.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Majestic.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576163
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Quantcast.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Quantcast.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1585755370
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Statvoo.rank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popularity_ranks.Statvoo.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613576162
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.registrar",
                                        "data_type": "string",
                                        "example_values": [
                                            "MarkMonitor Inc."
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            256
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            104
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            26
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois",
                                        "data_type": "string",
                                        "example_values": [
                                            "Creation Date: 1997-09-15T04:00:00Z\nDNSSEC: unsigned\nDomain Name: TEST.COM\nDomain Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited\nDomain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited\nDomain Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited\nDomain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited\nDomain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited\nDomain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited\nName Server: NS1.TEST.COM\nName Server: NS2.TEST.COM\nName Server: NS3.TEST.COM\nName Server: NS4.TEST.COM\nRegistrar Abuse Contact Email: abusecomplaints@markmonitor.com\nRegistrar Abuse Contact Phone: +1.2083895740\nRegistrar IANA ID: 292\nRegistrar URL: http://www.markmonitor.com\nRegistrar WHOIS Server: whois.markmonitor.com\nRegistrar: MarkMonitor Inc.\nRegistry Domain ID: 2138514_DOMAIN_COM-VRSN\nRegistry Expiry Date: 2028-09-14T04:00:00Z\nUpdated Date: 2019-09-09T15:39:04Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.whois_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612787278
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/domains/test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            90
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 90, Malicious: 0, Suspicious: 0, Undetected: 8"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "FQDN Reputation VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def FQDN_Reputation_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FQDN_Reputation_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'FQDN_Reputation_VT' call\n    formatted_data_1 = phantom.get_format_data(name='Format_FQDN')\n\n    parameters = []\n    \n    # build parameters list for 'FQDN_Reputation_VT' call\n    parameters.append({\n        'domain': formatted_data_1,\n    })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=FQDN_Reputation_TS, name=\"FQDN_Reputation_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "FQDN Reputation VT",
                        "delay": 0,
                        "description": "FQDN Reputation VT",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d62e6110-7bf9-49bb-a634-0c20f52d81b7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2315,
                        "line_start": 2296,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "FQDN Reputation VT",
                        "number": 5,
                        "order": 67,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "FQDN_Reputation_VT",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2129
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Format_domain:formatted_data"
                        },
                        "angle": 0,
                        "app": "Cisco Umbrella Investigate",
                        "appid": "5fc14867-8c8e-4cc2-8198-641df784bf1a",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "whois domain",
                                    "ip reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Cisco Umbrella Investigate",
                                "app_version": "1.0.1",
                                "appid": "5fc14867-8c8e-4cc2-8198-641df784bf1a",
                                "asset_name": "ktb-umbrella-asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_domain:formatted_data"
                                },
                                "has_app": true,
                                "id": 55,
                                "loaded": false,
                                "missing": false,
                                "name": "ktb-umbrella-asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Domain",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "testdomain.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Categories",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "Search Engines",
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.category_info.content_categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Search Engines"
                                        ]
                                    },
                                    {
                                        "column_name": "Security Categories",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.category_info.security_categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.category_info.status",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1,
                                            -1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.indicator",
                                        "data_type": "string",
                                        "example_values": [
                                            "Geo Popularity Score",
                                            "Keyword Score",
                                            "Lexical"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.normalized_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2,
                                            60,
                                            100
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -3.610878170000002,
                                            0.09264255482489717,
                                            0.606
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.relative_links.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            4289
                                        ]
                                    },
                                    {
                                        "column_name": "Risk Score",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.risk_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.asn_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -0.03286849936319416,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.attack",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "DGA Score",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.security_info.dga_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            -15.55033332819711
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.entropy",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1.91829583405449,
                                            2.75
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.fastflux",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.found",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.0001,
                                            0.1429
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity_normalized",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity_normalized.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.0003299100640734098,
                                            0.009745995689748824
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geoscore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            0.002894054671255598
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.handlings.normal",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.ks_test",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            0.2846253137451792
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.pagerank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            60.32995,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.perplexity",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.1878675610437336,
                                            1.122248102917671
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.popularity",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.prefix_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -0.1054320152441063,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.rip_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -3.051340626556875,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.securerank2",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            -0.004050008137296145
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.tld_geodiversity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.tld_geodiversity.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.01008192795884705
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.status_desc",
                                        "data_type": "string",
                                        "example_values": [
                                            "SAFE",
                                            "MALICIOUS"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.attacks",
                                        "data_type": "string",
                                        "example_values": [
                                            "Rig"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.period.begin",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.period.end",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.threatTypes",
                                        "data_type": "string",
                                        "example_values": [
                                            "Exploit Kit"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1428593707849,
                                            1496547887014
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.summary.domain_status",
                                        "data_type": "string",
                                        "example_values": [
                                            "SAFE",
                                            "MALICIOUS"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.risk_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_co_occurances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_relative_links",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_tag_info",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1,
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total co occurances: 0, Domain status: SAFE, Total tag info: 1, Total relative links: 100",
                                            "Total co occurances: 0\nDomain status: MALICIOUS\nTotal tag info: 2\nTotal relative links: 0"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Cisco Umbrella Investigate",
                                "product_vendor": "Cisco",
                                "targets": "55",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Domain Reputation UBL"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Domain_Reputation_UBL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Domain_Reputation_UBL() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Domain_Reputation_UBL' call\n    formatted_data_1 = phantom.get_format_data(name='Format_domain')\n\n    parameters = []\n    \n    # build parameters list for 'Domain_Reputation_UBL' call\n    parameters.append({\n        'domain': formatted_data_1,\n    })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['ktb-umbrella-asset'], callback=Link_back_destinationDnsDoman_to_artifac, name=\"Domain_Reputation_UBL\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation TS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Domain Reputation UBL",
                        "delay": 0,
                        "description": "Domain Reputation UBL",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "05236e89-21ac-439f-9b23-9a585e3ef32f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2181,
                        "line_start": 2162,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "Domain Reputation UBL",
                        "number": 3,
                        "order": 62,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1260,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Domain_Reputation_UBL",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2131
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Format_FQDN:formatted_data"
                        },
                        "angle": 0,
                        "app": "Cisco Umbrella Investigate",
                        "appid": "5fc14867-8c8e-4cc2-8198-641df784bf1a",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "whois domain",
                                    "ip reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Cisco Umbrella Investigate",
                                "app_version": "1.0.1",
                                "appid": "5fc14867-8c8e-4cc2-8198-641df784bf1a",
                                "asset_name": "ktb-umbrella-asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_FQDN:formatted_data"
                                },
                                "has_app": true,
                                "id": 55,
                                "loaded": false,
                                "missing": false,
                                "name": "ktb-umbrella-asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Domain",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "testdomain.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Categories",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "Search Engines",
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.category_info.content_categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Search Engines"
                                        ]
                                    },
                                    {
                                        "column_name": "Security Categories",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.category_info.security_categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.category_info.status",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1,
                                            -1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.indicator",
                                        "data_type": "string",
                                        "example_values": [
                                            "Geo Popularity Score",
                                            "Keyword Score",
                                            "Lexical"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.normalized_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2,
                                            60,
                                            100
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.indicators.*.score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -3.610878170000002,
                                            0.09264255482489717,
                                            0.606
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.relative_links.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            4289
                                        ]
                                    },
                                    {
                                        "column_name": "Risk Score",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.risk_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.asn_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -0.03286849936319416,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.attack",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "DGA Score",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.security_info.dga_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            -15.55033332819711
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.entropy",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1.91829583405449,
                                            2.75
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.fastflux",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.found",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.0001,
                                            0.1429
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity_normalized",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geodiversity_normalized.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.0003299100640734098,
                                            0.009745995689748824
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.geoscore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            0.002894054671255598
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.handlings.normal",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.ks_test",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            0.2846253137451792
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.pagerank",
                                        "data_type": "numeric",
                                        "example_values": [
                                            60.32995,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.perplexity",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.1878675610437336,
                                            1.122248102917671
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.popularity",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.prefix_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -0.1054320152441063,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.rip_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -3.051340626556875,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.securerank2",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            -0.004050008137296145
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.tld_geodiversity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.security_info.tld_geodiversity.*",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0.01008192795884705
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.status_desc",
                                        "data_type": "string",
                                        "example_values": [
                                            "SAFE",
                                            "MALICIOUS"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.attacks",
                                        "data_type": "string",
                                        "example_values": [
                                            "Rig"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.categories",
                                        "data_type": "string",
                                        "example_values": [
                                            "Malware"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.category",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.period.begin",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.period.end",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.threatTypes",
                                        "data_type": "string",
                                        "example_values": [
                                            "Exploit Kit"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tag_info.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1428593707849,
                                            1496547887014
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.summary.domain_status",
                                        "data_type": "string",
                                        "example_values": [
                                            "SAFE",
                                            "MALICIOUS"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.risk_score",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_co_occurances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_relative_links",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100,
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_tag_info",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1,
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total co occurances: 0, Domain status: SAFE, Total tag info: 1, Total relative links: 100",
                                            "Total co occurances: 0\nDomain status: MALICIOUS\nTotal tag info: 2\nTotal relative links: 0"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to query",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Cisco Umbrella Investigate",
                                "product_vendor": "Cisco",
                                "targets": "55",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "FQDN Reputation UBL"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def FQDN_Reputation_UBL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FQDN_Reputation_UBL() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'FQDN_Reputation_UBL' call\n    formatted_data_1 = phantom.get_format_data(name='Format_FQDN')\n\n    parameters = []\n    \n    # build parameters list for 'FQDN_Reputation_UBL' call\n    parameters.append({\n        'domain': formatted_data_1,\n    })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['ktb-umbrella-asset'], callback=Link_back_destinationDnsFQDN_to_artifact, name=\"FQDN_Reputation_UBL\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "FQDN Reputation TS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "FQDN Reputation UBL",
                        "delay": 0,
                        "description": "FQDN Reputation UBL",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c5905959-fa2a-4660-9918-f8b8e3de93c0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2360,
                        "line_start": 2341,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "FQDN Reputation UBL",
                        "number": 7,
                        "order": 69,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1260,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "FQDN_Reputation_UBL",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2132
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3a815cb8-d3e3-4aba-9f37-79580e8721b1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "dce86624-172b-42d3-acd2-78cc8a702b2a",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "42702b60-0c60-428f-91cb-30ab3eeb15d0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2178
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format FQDN"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_FQDN(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_FQDN() called')\n    \n    template = \"\"\"%%\n{0}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNExternal\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_FQDN\", separator=\", \")\n\n    FQDN_Reputation_VT(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format FQDN",
                        "delimiter": ", ",
                        "description": "Format FQDN",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a3f7b9a2-5e8b-46cc-a198-945de6fc65d4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2293,
                        "line_start": 2275,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format FQDN",
                        "number": 18,
                        "order": 66,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNExternal"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 420,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Format_FQDN",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{0}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2180
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4186cf0f-aca9-4950-95a1-e57463dc4d1b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "42702b60-0c60-428f-91cb-30ab3eeb15d0",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fc238acd-bff9-4c38-aefb-a0a583070c90",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2183
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 28
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_FQDN_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_FQDN_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationDnsFQDN\", \"in\", \"Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNInternal\"],\n        ],\n        name=\"Link_FQDN_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Update_internal_destinationDnsFQDN_artif(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link FQDN to artifact record",
                        "description": "Link FQDN to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "42702b60-0c60-428f-91cb-30ab3eeb15d0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2515,
                        "line_start": 2497,
                        "name": "filter",
                        "notes": "Link FQDN to artifact record",
                        "number": 28,
                        "order": 73,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationDnsFQDN",
                                        "value": "Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNInternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 600,
                            "y": 1560
                        },
                        "previous_function": "",
                        "previous_name": "Link_FQDN_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2189
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "866228e5-1921-4511-94c3-febdca8f5b64",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fc238acd-bff9-4c38-aefb-a0a583070c90",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2193
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2cef2c8d-bdbd-4158-b5e5-222e8bb1efe0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6fd40547-8672-4b3c-b73e-28197a58db46",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8d2a56d2-b5ff-49b7-a7b4-9548add07b37",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2196
                    },
                    {
                        "action": "file reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "hash": "File_reputation_VT:artifact:*.cef.fileHash",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "file reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "hash": "File_reputation_VT:artifact:*.cef.fileHash",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "sha256",
                                            "md5",
                                            "hash"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string",
                                        "example_values": [
                                            "9bfc3649f7e6067764ce8ef18e8bfbb837bc68f2dd83e37daa05477c604492b2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "md5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on File"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "hash": {
                                        "contains": [
                                            "sha1",
                                            "sha256",
                                            "md5",
                                            "hash"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Hash of file",
                                        "key": "hash",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "13",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "File reputation TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def File_reputation_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('File_reputation_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'File_reputation_TS' call\n    inputs_data_1 = phantom.collect2(container=container, datapath=['File_reputation_VT:artifact:*.cef.fileHash', 'File_reputation_VT:artifact:*.id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'File_reputation_TS' call\n    for inputs_item_1 in inputs_data_1:\n        if inputs_item_1[0]:\n            parameters.append({\n                'hash': inputs_item_1[0],\n                'limit': 1000,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': inputs_item_1[1]},\n            })\n\n    phantom.act(action=\"file reputation\", parameters=parameters, assets=['threatstream cloud'], callback=Add_note_fileHash, name=\"File_reputation_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "File reputation VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "File reputation TS",
                        "delay": 0,
                        "description": "File reputation TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6fd40547-8672-4b3c-b73e-28197a58db46",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1168,
                        "line_start": 1144,
                        "message": "Configuring now",
                        "name": "file reputation",
                        "notes": "File reputation TS",
                        "number": 2,
                        "order": 35,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 1720
                        },
                        "previous_function": "",
                        "previous_name": "File_reputation_TS",
                        "required_params": {
                            "hash": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2200
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2198367b-a105-4224-8178-46cadba76ab5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2c7bd917-fce7-47e3-b6c8-36894768ff7d",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e6d7203d-54c2-4c1f-b970-54c60e5aba16",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2217
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ab17e4c8-496f-423b-8c3e-74f40b07af99",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e6d7203d-54c2-4c1f-b970-54c60e5aba16",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b232fd77-6251-4c97-8f86-046172a4b967",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2219
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8b35ac4d-d724-4af3-90fd-4f3890cd9daa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b232fd77-6251-4c97-8f86-046172a4b967",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f8eb59dc-0c23-4ac7-a23d-1260a04d337d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2221
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e4f95524-3874-41fb-8e03-81d9d25c6c7c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f8eb59dc-0c23-4ac7-a23d-1260a04d337d",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de812137-e049-456f-b439-08c09ff66452",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2223
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update fileHash"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_fileHash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_fileHash() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['File_reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['File_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_fileHash:condition_1:artifact:*.id', 'filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    if ts_reputation_threat_type != [] or results_item_1_0[0] > 2:\n    \n        parameters = []\n\n        cef_json = {\"fileHash_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fileHash\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "File reputation TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 14,
                        "custom_callback": "",
                        "custom_code": "def Update_fileHash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_fileHash() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['File_reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['File_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_fileHash:condition_1:artifact:*.id', 'filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    if ts_reputation_threat_type != [] or results_item_1_0[0] > 2:\n    \n        parameters = []\n\n        cef_json = {\"fileHash_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fileHash\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update fileHash",
                        "description": "Update fileHash",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "78c82df2-6a95-4dbc-a661-56ab1edac0f3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1287,
                        "line_start": 1219,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update fileHash",
                        "number": 13,
                        "order": 37,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_fileHash:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "File_reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "File_reputation_TS:action_result.data.*.threat_type"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 1720
                        },
                        "previous_function": "",
                        "previous_name": "Update_fileHash",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    if ts_reputation_threat_type != [] or results_item_1_0[0] > 2:\n    \n        parameters = []\n\n        cef_json = {\"fileHash_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fileHash\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2232
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 12
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_fileHash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_fileHash() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.fileHash\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_fileHash:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        File_reputation_VT(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out fileHash",
                        "description": "Filter out fileHash",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0e22cc7f-dd73-4c25-95c7-8971d09d8e8c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1115,
                        "line_start": 1097,
                        "name": "filter",
                        "notes": "Filter out fileHash",
                        "number": 12,
                        "order": 33,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.fileHash",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 1720
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_fileHash",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2238
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 29
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_user_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_user_email() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.user_email\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_user_email:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Email_reputation_TS(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out user_email",
                        "description": "Filter out user_email",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2c7bd917-fce7-47e3-b6c8-36894768ff7d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2570,
                        "line_start": 2552,
                        "name": "filter",
                        "notes": "Filter out user_email",
                        "number": 29,
                        "order": 75,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.user_email",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 1960
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_user_email",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2239
                    },
                    {
                        "action": "domain reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "domain": "Format_FQDN:formatted_data",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream cloud",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_FQDN:formatted_data",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.URLVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Web of Trust",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 2,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 1,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on Domain"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to investigate",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "16",
                                "type": "threat intel"
                            },
                            {
                                "action": "domain reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "domain": "Format_FQDN:formatted_data",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_path": "action_result.parameter.domain",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Google Safe Browsing",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.URLVoid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.VirusTotal",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.Web of Trust",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.urlscan.io",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://test.io/domain/uponvoice.net"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 2,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 1,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on Domain"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "domain": {
                                        "contains": [
                                            "domain",
                                            "url"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Domain to investigate",
                                        "key": "domain",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "FQDN Reputation TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def FQDN_Reputation_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FQDN_Reputation_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'FQDN_Reputation_TS' call\n    formatted_data_1 = phantom.get_format_data(name='Format_FQDN')\n\n    parameters = []\n    \n    # build parameters list for 'FQDN_Reputation_TS' call\n    parameters.append({\n        'limit': 1000,\n        'domain': formatted_data_1,\n    })\n\n    phantom.act(action=\"domain reputation\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=FQDN_Reputation_UBL, name=\"FQDN_Reputation_TS\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "FQDN Reputation VT",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "FQDN Reputation TS",
                        "delay": 0,
                        "description": "FQDN Reputation TS",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b43d172a-18f4-4774-8bd7-ecd5728da45e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2338,
                        "line_start": 2318,
                        "message": "Configuring now",
                        "name": "domain reputation",
                        "notes": "FQDN Reputation TS",
                        "number": 6,
                        "order": 68,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 980,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "FQDN_Reputation_TS",
                        "required_params": {
                            "domain": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2241
                    },
                    {
                        "action": "email reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "email": "filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email",
                            "limit": 1000
                        },
                        "angle": 0,
                        "app": "ThreatStream",
                        "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "email reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream cloud",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "email": "filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream cloud",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.email",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "email"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on Email"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "email": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Email to investigate",
                                        "key": "email",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "16",
                                "type": "threat intel"
                            },
                            {
                                "action": "email reputation",
                                "actions": [
                                    "delete actor",
                                    "delete vulnerability",
                                    "delete threat bulletin",
                                    "update actor",
                                    "create actor",
                                    "update vulnerability",
                                    "create vulnerability",
                                    "list imports",
                                    "list actors",
                                    "remove association",
                                    "add association",
                                    "delete rule",
                                    "list rules",
                                    "update rule",
                                    "create rule",
                                    "list associations",
                                    "list threat bulletins",
                                    "update threat bulletin",
                                    "create threat bulletin",
                                    "list threat models",
                                    "update import session",
                                    "list import sessions",
                                    "run query",
                                    "on poll",
                                    "get report",
                                    "get status",
                                    "detonate url",
                                    "detonate file",
                                    "get pcap",
                                    "tag observable",
                                    "import observables",
                                    "import email observable",
                                    "import file observable",
                                    "import ip observable",
                                    "import url observable",
                                    "import domain observable",
                                    "update incident",
                                    "create incident",
                                    "get incident",
                                    "delete incident",
                                    "list incidents",
                                    "list vulnerabilities",
                                    "get vulnerability",
                                    "list observables",
                                    "get observable",
                                    "whois domain",
                                    "whois ip",
                                    "url reputation",
                                    "email reputation",
                                    "ip reputation",
                                    "domain reputation",
                                    "file reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "ThreatStream",
                                "app_version": "3.0.3",
                                "appid": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                                "asset_name": "threatstream hybrid vm",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "email": "filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email",
                                    "limit": 1000
                                },
                                "has_app": true,
                                "id": 15,
                                "loaded": false,
                                "missing": false,
                                "name": "threatstream hybrid vm",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.email",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1000
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.external_references.remote_api",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.asn",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Confidence",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.country",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "First Found",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.created_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expiration_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.extended_source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.feed_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "Intel ID",
                                        "column_order": 1,
                                        "contains": [
                                            "threatstream intelligence id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.import_session_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_anonymous",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_editable",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_public",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Indicator",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.itype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.latitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.longitude",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.detail2",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.meta.severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.modified_ts",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.org",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "threatstream organization id"
                                        ],
                                        "data_path": "action_result.data.*.owner_organization_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rdns",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource_uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.retina_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source_reported_confidence",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.org_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tags.*.source_user_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.threat_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Threatscore",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.threatscore",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.tlp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.trusted_circle_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "email"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.update_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.uuid",
                                        "data_type": "string",
                                        "example_values": [
                                            "4cf3228b-0de4-45f0-a66d-255b6ff32eaa"
                                        ]
                                    },
                                    {
                                        "column_name": "Value",
                                        "column_order": 0,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully retrieved information on Email"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "email": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Email to investigate",
                                        "key": "email",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": 1000,
                                        "description": "Total number of observables to return",
                                        "key": "limit",
                                        "order": 1,
                                        "required": false
                                    }
                                },
                                "product_name": "ThreatStream",
                                "product_vendor": "Anomali",
                                "targets": "15",
                                "type": "threat intel"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Email reputation TS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Email_reputation_TS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Email_reputation_TS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Email_reputation_TS' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email', 'filtered-data:Filter_out_user_email:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'Email_reputation_TS' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'email': filtered_artifacts_item_1[0],\n                'limit': 1000,\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"email reputation\", parameters=parameters, assets=['threatstream cloud','threatstream hybrid vm'], callback=Add_note_user_email, name=\"Email_reputation_TS\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Email reputation TS",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e6d7203d-54c2-4c1f-b970-54c60e5aba16",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2594,
                        "line_start": 2570,
                        "message": "Configuring now",
                        "name": "email reputation",
                        "notes": "",
                        "number": 1,
                        "order": 76,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 1960
                        },
                        "previous_function": "",
                        "previous_name": "Email_reputation_TS",
                        "required_params": {
                            "email": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2242
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "filtered-data:Link_FQDN_to_artifact_record:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"is_internalFQDN\": \"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "filtered-data:Link_FQDN_to_artifact_record:condition_1:artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"is_internalFQDN\": \"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Update internal destinati...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Update_internal_destinationDnsFQDN_artif(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_internal_destinationDnsFQDN_artif() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Update_internal_destinationDnsFQDN_artif' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_FQDN_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_FQDN_to_artifact_record:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'Update_internal_destinationDnsFQDN_artif' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"is_internalFQDN\\\": \\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': \"\",\n                'artifact_id': filtered_artifacts_item_1[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"Update_internal_destinationDnsFQDN_artif\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Update internal destinationDnsFQDN artif",
                        "delay": 0,
                        "description": "Update internal destinationDnsFQDN artifact",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fc238acd-bff9-4c38-aefb-a0a583070c90",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2549,
                        "line_start": 2518,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "Update internal destinationDnsFQDN artifact",
                        "number": 3,
                        "order": 74,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 1560
                        },
                        "previous_function": "",
                        "previous_name": "Update_internal_destinationDnsFQDN_artif",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2252
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "filtered-data:Link_URL_to_artifact_record:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"is_internalURL\": \"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.10",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "filtered-data:Link_URL_to_artifact_record:condition_1:artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"is_internalURL\": \"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 11,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "11",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Update internal requestU..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Update_internal_requestURL_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_internal_requestURL_artifact() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Update_internal_requestURL_artifact' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_URL_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_URL_to_artifact_record:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'Update_internal_requestURL_artifact' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"is_internalURL\\\": \\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': \"\",\n                'artifact_id': filtered_artifacts_item_1[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"Update_internal_requestURL_artifact\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Update internal requestURL artifact",
                        "delay": 0,
                        "description": "Update internal requestURL artifact",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9d94db7d-5d77-4707-a321-8efebf0ca963",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 914,
                        "line_start": 883,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "Update internal requestURL artifact",
                        "number": 1,
                        "order": 28,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 880
                        },
                        "previous_function": "",
                        "previous_name": "Update_internal_requestURL_artifact",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2254
                    },
                    {
                        "action": "file reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "hash": "filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "file reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "hash": "filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Hash",
                                        "column_order": 0,
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string",
                                        "example_values": [
                                            "e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.authentihash",
                                        "data_type": "string",
                                        "example_values": [
                                            "ad56160b465f7bd1e7568640397f01fc4f8819ce6f0c1415690ecee646464cec"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.creation_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1410950077
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.first_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1612961082
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613635130
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "undetected"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CMC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_update",
                                        "data_type": "string",
                                        "example_values": [
                                            "20210218"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_version",
                                        "data_type": "string",
                                        "example_values": [
                                            "2.10.2019.1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.confirmed-timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.failure",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.type-unsupported",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            59
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613635210
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1613635130
                                        ]
                                    },
                                    {
                                        "column_name": "File Description",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.attributes.magic",
                                        "data_type": "string",
                                        "example_values": [
                                            "a python2.7\\015script text executable"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.attributes.md5",
                                        "data_type": "string",
                                        "example_values": [
                                            "2e65153f2c49c91a0206ee7a8c00e659"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.meaningful_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "update_cr.py"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.names",
                                        "data_type": "string",
                                        "example_values": [
                                            "update_cr.py"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.entry_point",
                                        "data_type": "numeric",
                                        "example_values": [
                                            14768
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.imphash",
                                        "data_type": "string",
                                        "example_values": [
                                            "d7584447a5c5ca9b4a55946317137951"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.import_list.*.library_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "COMDLG32.dll"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.machine_type",
                                        "data_type": "numeric",
                                        "example_values": [
                                            332
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.chi2",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8137.34814453125
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.entropy",
                                        "data_type": "numeric",
                                        "example_values": [
                                            5.789552211761475
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.filetype",
                                        "data_type": "string",
                                        "example_values": [
                                            "Data"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.lang",
                                        "data_type": "string",
                                        "example_values": [
                                            "ENGLISH US"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "c37bc8f6dbf81e8d88978836b23ee932ade6652ba798989bf20697afffd6113e"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_details.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "RT_BITMAP"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_langs.ENGLISH US",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_langs.RUSSIAN",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_BITMAP",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_DIALOG",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_MANIFEST",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_MENU",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.resource_types.RT_VERSION",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.rich_pe_header_hash",
                                        "data_type": "string",
                                        "example_values": [
                                            "fa4dbca9180170710b3c245464efa483"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.chi2",
                                        "data_type": "numeric",
                                        "example_values": [
                                            292981.44
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.entropy",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6.75
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.flags",
                                        "data_type": "string",
                                        "example_values": [
                                            "rx"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.md5",
                                        "data_type": "string",
                                        "example_values": [
                                            "a13f88c3e0636712e10326c07d56b645"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            ".text"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.raw_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            54784
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.virtual_address",
                                        "data_type": "numeric",
                                        "example_values": [
                                            4096
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.sections.*.virtual_size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            54434
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.pe_info.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1410950077
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_category.*.count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            30
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_category.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "trojan"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_name.*.count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            13
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.popular_threat_name.*.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "zbot"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.popular_threat_classification.suggested_threat_label",
                                        "data_type": "string",
                                        "example_values": [
                                            "trojan.zbot/foreign"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.sandbox_verdicts.Tencent HABO.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.attributes.sha1",
                                        "data_type": "string",
                                        "example_values": [
                                            "6802169a19142292710254cde97df84e46dfe33a"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.attributes.sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.signature_info.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "column_name": "Size",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.attributes.size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            6285
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.ssdeep",
                                        "data_type": "string",
                                        "example_values": [
                                            "192:MPv2vv/ybXAhgPpyN3ipdw0fRAdygi6OLxgUHzYu7ThPBLkv:pq7Mgg0/NdMu/1BLkv"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "python"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.times_submitted",
                                        "data_type": "numeric",
                                        "example_values": [
                                            13
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.tlsh",
                                        "data_type": "string",
                                        "example_values": [
                                            "T1F7D10E05AC5E941C47329D1EDD16FD1BEB0122B724296327B46CA2997FB0468C3E14FC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trid.*.file_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Unix-like shebang (var.1) (gen)"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trid.*.probability",
                                        "data_type": "numeric",
                                        "example_values": [
                                            100
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.type_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Python"
                                        ]
                                    },
                                    {
                                        "column_name": "File Extension",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.attributes.type_extension",
                                        "data_type": "string",
                                        "example_values": [
                                            "py"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.type_tag",
                                        "data_type": "string",
                                        "example_values": [
                                            "python"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.unique_sources",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.vhash",
                                        "data_type": "string",
                                        "example_values": [
                                            "025056657d755510804011z9005b9z25z12z3afz"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/files/e87051ea8e1bb3c986c0f0bda85352f63e67e0315c58e461a075b5fb7229e6fe"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "file"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            59
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Harmless: 0, Malicious: 0, Suspicious: 0, Undetected: 59"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "hash": {
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "File hash to query",
                                        "key": "hash",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "File reputation VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def File_reputation_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('File_reputation_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'File_reputation_VT' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash', 'filtered-data:Filter_out_fileHash:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'File_reputation_VT' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'hash': filtered_artifacts_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"file reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=File_reputation_TS, name=\"File_reputation_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "File reputation VT",
                        "delay": 0,
                        "description": "File reputation VT",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fb7e78ca-390d-48d6-b9ba-7eaa9e172198",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1141,
                        "line_start": 1118,
                        "message": "Configuring now",
                        "name": "file reputation",
                        "notes": "File reputation VT",
                        "number": 1,
                        "order": 34,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 1720
                        },
                        "previous_function": "",
                        "previous_name": "File_reputation_VT",
                        "required_params": {
                            "hash": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2256
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_sourceAddress_is_private(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_sourceAddress_is_private() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_sourceAddress_external:custom_function:sourceAddressExternal\", \"!=\", []],\n        ],\n        name=\"Check_if_sourceAddress_is_private:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_src_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_sourceAddress_external:custom_function:sourceAddressInternal\", \"!=\", []],\n        ],\n        name=\"Check_if_sourceAddress_is_private:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        Link_internal_src_to_artifact_record(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Check if sourceAddress is private",
                        "description": "Check if sourceAddress is private",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "17e33334-9b03-4cf2-a3f4-d640d9e5ebeb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 403,
                        "line_start": 372,
                        "name": "filter",
                        "notes": "Check if sourceAddress is private",
                        "number": 5,
                        "order": 12,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_sourceAddress_external:custom_function:sourceAddressExternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_sourceAddress_external:custom_function:sourceAddressInternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_sourceAddress_is_private",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2261
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "filtered-data:Link_domain_to_artifact_record:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"is_internalDomain\": \"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "filtered-data:Link_domain_to_artifact_record:condition_1:artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"is_internalDomain\": \"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 11,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "11",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Update internal destinati...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Update_internal_destinationDnsDomain_art(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_internal_destinationDnsDomain_art() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Update_internal_destinationDnsDomain_art' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_domain_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_domain_to_artifact_record:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'Update_internal_destinationDnsDomain_art' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"is_internalDomain\\\": \\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': \"\",\n                'artifact_id': filtered_artifacts_item_1[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"Update_internal_destinationDnsDomain_art\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Update internal destinationDnsDomain art",
                        "delay": 0,
                        "description": "Update internal destinationDnsDomain artifact",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "58236bdc-a1e5-4458-9cb3-6f79327e92bc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1669,
                        "line_start": 1638,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "Update internal destinationDnsDomain artifact",
                        "number": 2,
                        "order": 48,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 1200
                        },
                        "previous_function": "",
                        "previous_name": "Update_internal_destinationDnsDomain_art",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2262
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "84902d2d-3b3b-4c86-84c1-c18a3a9a847c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "97acba03-9039-4eae-89b9-23a7aeb1937e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2264
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "813e8734-cc2e-47f0-b829-77379b4b7e41",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "61d87826-2e82-4744-bccf-b973e2d0539b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ef985c8-0576-4193-873d-441f0282b295",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2267
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 23
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_23(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_23() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Extract_address_of_hostname:custom_function:ListAddressExternal\", \"!=\", []],\n        ],\n        name=\"filter_23:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        IP_Reputation_Host_VT(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        WhoIS_Host_IP_TS(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Extract_address_of_hostname:custom_function:ListAddressInternal\", \"!=\", []],\n        ],\n        name=\"filter_23:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        Add_note_details_on_internal_hostname(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run kaspersky query on hostname, Run amp query on hostname, Run mcafee query on hostname",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a3f21ccf-6cf2-4caa-b7e0-128dea1078f7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1889,
                        "line_start": 1857,
                        "name": "filter",
                        "notes": "",
                        "number": 23,
                        "order": 54,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Extract_address_of_hostname:custom_function:ListAddressExternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Extract_address_of_hostname:custom_function:ListAddressInternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1080,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "filter_23",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2269
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "08a6052b-63c0-4d32-8b12-69b206a3c037",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "17e33334-9b03-4cf2-a3f4-d640d9e5ebeb",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b965913a-9cc8-4836-a7c9-88b9627dcb9a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2272
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c7cfb33c-24ee-4ed3-bf30-d6e4801a8cd8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b965913a-9cc8-4836-a7c9-88b9627dcb9a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "97acba03-9039-4eae-89b9-23a7aeb1937e",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2274
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 11
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_back_requestURL_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_back_requestURL_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.requestURL\", \"in\", \"Check_if_requestURL_external:custom_function:requestURLExternal\"],\n        ],\n        name=\"Link_back_requestURL_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_note_requestURL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "URL Reputation TS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link back requestURL to artifact record",
                        "description": "Link back requestURL to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a3b1cdd7-d425-4c16-ab1a-735dc91ee73c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 962,
                        "line_start": 944,
                        "name": "filter",
                        "notes": "Link back requestURL to artifact record",
                        "number": 11,
                        "order": 30,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.requestURL",
                                        "value": "Check_if_requestURL_external:custom_function:requestURLExternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1940,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "Link_back_requestURL_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2281
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "73cb15e1-47ec-4ad3-915c-e975777c226f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "817453e7-0dab-4bd6-bfec-c1104acfcc93",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "987ca7b2-a1c0-4301-b983-74e9d3524729",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2284
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8f720656-beb9-4ae9-9e91-c20f226be91e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "987ca7b2-a1c0-4301-b983-74e9d3524729",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "61d87826-2e82-4744-bccf-b973e2d0539b",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2288
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "filtered-data:Link_internal_dst_to_artifact_record:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"is_internalDestinationAddress\": \"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "filtered-data:Link_internal_dst_to_artifact_record:condition_1:artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"is_internalDestinationAddress\": \"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Update internal destinati...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Update_internal_destinationAddress_artif(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_internal_destinationAddress_artif() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Update_internal_destinationAddress_artif' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_internal_dst_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_internal_dst_to_artifact_record:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'Update_internal_destinationAddress_artif' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"is_internalDestinationAddress\\\": \\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': \"\",\n                'artifact_id': filtered_artifacts_item_1[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"Update_internal_destinationAddress_artif\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Update internal destinationAddress artif",
                        "delay": 0,
                        "description": "Update internal destinationAddress artifact",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "61d87826-2e82-4744-bccf-b973e2d0539b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2751,
                        "line_start": 2720,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "Update internal destinationAddress artifact",
                        "number": 5,
                        "order": 80,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "Update_internal_destinationAddress_artif",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2291
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 18
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_domain_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_domain_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationDnsDomain\", \"in\", \"Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainInternal\"],\n        ],\n        name=\"Link_domain_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Update_internal_destinationDnsDomain_art(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link domain to artifact record",
                        "description": "Link domain to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e8b80aa2-6be5-4342-a5b6-0d05ea88f474",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1635,
                        "line_start": 1617,
                        "name": "filter",
                        "notes": "Link domain to artifact record",
                        "number": 18,
                        "order": 47,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationDnsDomain",
                                        "value": "Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainInternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 620,
                            "y": 1200
                        },
                        "previous_function": "",
                        "previous_name": "Link_domain_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2304
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update dst IP artifact"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_dst_IP_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_dst_IP_artifact() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_dst_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.cef.destinationAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    #phantom.debug('VT=' )\n    #phantom.debug(results_item_1_0)\n    #phantom.debug('TS=')\n    #phantom.debug(results_item_2_0)\n    \n    if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n        parameters = []\n\n        cef_json = {\"destinationAddress_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "WhoIS dst IP TS, IP Reputation dst IP TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Update_dst_IP_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_dst_IP_artifact() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_TS:action_result.summary'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_dst_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.cef.destinationAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    #phantom.debug('VT=' )\n    #phantom.debug(results_item_1_0)\n    #phantom.debug('TS=')\n    #phantom.debug(results_item_2_0)\n    \n    if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n        parameters = []\n\n        cef_json = {\"destinationAddress_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update dst IP artifact",
                        "description": "Update dst IP artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1d0f51e2-59fe-480a-9bd6-88ee9e7885ef",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 713,
                        "line_start": 642,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update dst IP artifact",
                        "number": 8,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "IP_Reputation_dst_IP_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "IP_Reputation_dst_IP_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "WhoIS_dst_IP_TS:action_result.summary"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2180,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "Update_dst_IP_artifact",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    #phantom.debug('VT=' )\n    #phantom.debug(results_item_1_0)\n    #phantom.debug('TS=')\n    #phantom.debug(results_item_2_0)\n    \n    if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n        parameters = []\n\n        cef_json = {\"destinationAddress_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2314
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update src IP artifact"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_src_IP_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_src_IP_artifact() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_src_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.cef.sourceAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n            \n    if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n        parameters = []   \n            \n        cef_json = {\"sourceAddress_malicious\" : \"True\"}\n         \n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "WhoIS src IP TS, IP Reputation src IP TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Update_src_IP_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_src_IP_artifact() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_src_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.cef.sourceAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n            \n    if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n        parameters = []   \n            \n        cef_json = {\"sourceAddress_malicious\" : \"True\"}\n         \n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update src IP artifact",
                        "description": "Update src IP artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2bfdd9c0-e36a-4593-9d28-9ea0e5fb3552",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 269,
                        "line_start": 213,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update src IP artifact",
                        "number": 4,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.cef.sourceAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "IP_Reputation_src_IP_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "IP_Reputation_src_IP_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "WhoIS_src_IP_TS:action_result.summary"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2160,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Update_src_IP_artifact",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n            \n    if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n        parameters = []   \n            \n        cef_json = {\"sourceAddress_malicious\" : \"True\"}\n         \n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n",
                        "warn": false,
                        "z": 2321
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 31
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_internal_dst_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_internal_dst_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationAddress\", \"in\", \"Check_if_destinationAddress_external:custom_function:destinationAddressInternal\"],\n        ],\n        name=\"Link_internal_dst_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Update_internal_destinationAddress_artif(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link internal dst to artifact record",
                        "description": "Link internal dst to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "987ca7b2-a1c0-4301-b983-74e9d3524729",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2793,
                        "line_start": 2775,
                        "name": "filter",
                        "notes": "Link internal dst to artifact record",
                        "number": 31,
                        "order": 82,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationAddress",
                                        "value": "Check_if_destinationAddress_external:custom_function:destinationAddressInternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1820,
                            "y": 340
                        },
                        "previous_function": "",
                        "previous_name": "Link_internal_dst_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2326
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Check if destinationDnsD..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_destinationDnsDomain_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationDnsDomain_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_destinationDnsDomain:condition_1:artifact:*.cef.destinationDnsDomain'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_destinationDnsDomain_external__destinationDnsDomainExternal = None\n    Check_if_destinationDnsDomain_external__destinationDnsDomainInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, ktbdomainlist = phantom.get_list(list_name='ktbdomainlist')\n    \n    domainlist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    phantom.debug(ktbdomainlist)\n    for item in domainlist:\n        if not any(item in sublist for sublist in ktbdomainlist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_destinationDnsDomain_external__destinationDnsDomainExternal = externaltemplist\n    Check_if_destinationDnsDomain_external__destinationDnsDomainInternal = internaltemplist\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_destinationDnsDomain_external:destinationDnsDomainExternal', value=json.dumps(Check_if_destinationDnsDomain_external__destinationDnsDomainExternal))\n    phantom.save_run_data(key='Check_if_destinationDnsDomain_external:destinationDnsDomainInternal', value=json.dumps(Check_if_destinationDnsDomain_external__destinationDnsDomainInternal))\n    Check_if_destinationDnsDomain_is_private(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def Check_if_destinationDnsDomain_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationDnsDomain_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_destinationDnsDomain:condition_1:artifact:*.cef.destinationDnsDomain'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_destinationDnsDomain_external__destinationDnsDomainExternal = None\n    Check_if_destinationDnsDomain_external__destinationDnsDomainInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, ktbdomainlist = phantom.get_list(list_name='ktbdomainlist')\n    \n    domainlist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    phantom.debug(ktbdomainlist)\n    for item in domainlist:\n        if not any(item in sublist for sublist in ktbdomainlist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_destinationDnsDomain_external__destinationDnsDomainExternal = externaltemplist\n    Check_if_destinationDnsDomain_external__destinationDnsDomainInternal = internaltemplist\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_destinationDnsDomain_external:destinationDnsDomainExternal', value=json.dumps(Check_if_destinationDnsDomain_external__destinationDnsDomainExternal))\n    phantom.save_run_data(key='Check_if_destinationDnsDomain_external:destinationDnsDomainInternal', value=json.dumps(Check_if_destinationDnsDomain_external__destinationDnsDomainInternal))\n    Check_if_destinationDnsDomain_is_private(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Check if destinationDnsDomain external",
                        "description": "Check if destinationDnsDomain external",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1294c975-2965-44e6-ac08-9bd1f18fe24e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1353,
                        "line_start": 1311,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Check if destinationDnsDomain external",
                        "number": 17,
                        "order": 39,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "destinationDnsDomainExternal"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "destinationDnsDomainInternal"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_destinationDnsDomain:condition_1:artifact:*.cef.destinationDnsDomain"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 20,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_destinationDnsDomain_external",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    success, message, ktbdomainlist = phantom.get_list(list_name='ktbdomainlist')\n    \n    domainlist = filtered_artifacts_item_1_0\n    externaltemplist = []\n    internaltemplist = []\n    phantom.debug(ktbdomainlist)\n    for item in domainlist:\n        if not any(item in sublist for sublist in ktbdomainlist):\n            phantom.debug(\"{} is public\".format(item))\n            externaltemplist.append(item)\n        else:\n            phantom.debug(\"{} is private\".format(item))\n            internaltemplist.append(item)\n            \n    Check_if_destinationDnsDomain_external__destinationDnsDomainExternal = externaltemplist\n    Check_if_destinationDnsDomain_external__destinationDnsDomainInternal = internaltemplist\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2350
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note fileHash"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_fileHash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_fileHash() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['File_reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['File_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_fileHash:condition_1:artifact:*.id', 'filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    #content = \"fileHash: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal File Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream File Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0])\n    \n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"fileHash: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal File Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream File Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n\n    note_title = \"fileHash Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_fileHash(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "File reputation TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 14,
                        "custom_callback": "",
                        "custom_code": "def Add_note_fileHash(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_fileHash() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['File_reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['File_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_fileHash:condition_1:artifact:*.id', 'filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    #content = \"fileHash: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal File Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream File Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0])\n    \n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"fileHash: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal File Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream File Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    \n    note_title = \"fileHash Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_fileHash(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note fileHash",
                        "description": "Add note fileHash",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8d2a56d2-b5ff-49b7-a7b4-9548add07b37",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1216,
                        "line_start": 1171,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note fileHash",
                        "number": 12,
                        "order": 36,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_fileHash:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Filter_out_fileHash:condition_1:artifact:*.cef.fileHash"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "File_reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "File_reputation_TS:action_result.data.*.threat_type"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2040,
                            "y": 1720
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_fileHash",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    \n    #content = \"fileHash: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal File Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream File Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0])\n    \n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"fileHash: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal File Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream File Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    \n    note_title = \"fileHash Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n",
                        "warn": false,
                        "z": 2355
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "20da4037-a01f-40c7-8b31-cd41e3f01f97",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "662c7804-75e1-4b4e-9ab1-ec7298744974",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "464b5873-263c-4832-8a3a-a8ca3785b6e0",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2361
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "55a3a249-4377-4f1f-8322-0ba2e12e9ff8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "14f69aca-b310-4403-9c93-56f1c57e400f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0f238184-e26a-4132-a103-b978fe1213cf",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2362
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update hostname artifact"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_hostname_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_hostname_artifact() called')\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_22:condition_1:artifact:*.id', 'filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    phantom.debug(\"UPDATE HOSTNAME ARTIFACT: Collecting result>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\n    is_malicious = False\n    #phantom.debug(Extract_address_of_hostname__ListAddressExternal)\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal): \n        results_data_1 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_VT_{i}:action_result.summary.malicious'], action_results=results)\n        results_data_2 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_TS_{i}:action_result.data.*.threat_type'], action_results=results)\n        results_data_3 = phantom.collect2(container=container, datapath=[f'WhoIS_Host_IP_TS_{i}:action_result.summary'], action_results=results)\n        results_item_1_0 = [item[0] for item in results_data_1]\n        results_item_2_0 = [item[0] for item in results_data_2]\n        results_item_3_0 = [item[0] for item in results_data_3]\n\n        ts_ip_reputation_threat_type = []\n        for t in results_item_2_0:\n            if t not in ts_ip_reputation_threat_type and t != None:\n                ts_ip_reputation_threat_type.append(t)\n\n        if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n            is_malicious = True\n            break\n    \n    phantom.debug(f\"is_malicious: {is_malicious}\")\n    if is_malicious:\n        parameters = []\n        cef_json = {\"destinationHostName_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_hostname\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n            \n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation Host TS, WhoIS Host IP TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def Update_hostname_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_hostname_artifact() called')\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_22:condition_1:artifact:*.id', 'filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    phantom.debug(\"UPDATE HOSTNAME ARTIFACT: Collecting result>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\n    is_malicious = False\n    #phantom.debug(Extract_address_of_hostname__ListAddressExternal)\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal): \n        results_data_1 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_VT_{i}:action_result.summary.malicious'], action_results=results)\n        results_data_2 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_TS_{i}:action_result.data.*.threat_type'], action_results=results)\n        results_data_3 = phantom.collect2(container=container, datapath=[f'WhoIS_Host_IP_TS_{i}:action_result.summary'], action_results=results)\n        results_item_1_0 = [item[0] for item in results_data_1]\n        results_item_2_0 = [item[0] for item in results_data_2]\n        results_item_3_0 = [item[0] for item in results_data_3]\n\n        ts_ip_reputation_threat_type = []\n        for t in results_item_2_0:\n            if t not in ts_ip_reputation_threat_type and t != None:\n                ts_ip_reputation_threat_type.append(t)\n\n        if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n            is_malicious = True\n            break\n    \n    phantom.debug(f\"is_malicious: {is_malicious}\")\n    if is_malicious:\n        parameters = []\n        cef_json = {\"destinationHostName_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_hostname\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n            \n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update hostname artifact",
                        "description": "Update hostname artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a3fbe56e-deed-4e22-8944-0ddfb9151a06",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2128,
                        "line_start": 2051,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update hostname artifact",
                        "number": 25,
                        "order": 60,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "Extract_address_of_hostname:custom_function:ListAddressExternal"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2180,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "Update_hostname_artifact",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    phantom.debug(\"UPDATE HOSTNAME ARTIFACT: Collecting result>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\n    is_malicious = False\n    #phantom.debug(Extract_address_of_hostname__ListAddressExternal)\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal): \n        results_data_1 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_VT_{i}:action_result.summary.malicious'], action_results=results)\n        results_data_2 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_TS_{i}:action_result.data.*.threat_type'], action_results=results)\n        results_data_3 = phantom.collect2(container=container, datapath=[f'WhoIS_Host_IP_TS_{i}:action_result.summary'], action_results=results)\n        results_item_1_0 = [item[0] for item in results_data_1]\n        results_item_2_0 = [item[0] for item in results_data_2]\n        results_item_3_0 = [item[0] for item in results_data_3]\n\n        ts_ip_reputation_threat_type = []\n        for t in results_item_2_0:\n            if t not in ts_ip_reputation_threat_type and t != None:\n                ts_ip_reputation_threat_type.append(t)\n\n        if ts_ip_reputation_threat_type != [] or results_item_1_0[0] > 2:\n            is_malicious = True\n            break\n    \n    phantom.debug(f\"is_malicious: {is_malicious}\")\n    if is_malicious:\n        parameters = []\n        cef_json = {\"destinationHostName_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_hostname\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n            \n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########\n    ########",
                        "warn": false,
                        "z": 2372
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "80d7483c-412f-469a-a0cd-ec829aa85afd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e7d1249-fc1d-4b42-b2e0-46c87f70f4f9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2374
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3dc1066b-93c1-435d-8699-35fec84dd0cb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2cd3ce47-6ea3-439f-978f-f3bf233c5c71",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2377
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d4fb9109-293f-4155-b88e-7ed49d779298",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "56d5c0e5-4dec-4bf8-9418-2dac22f10544",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2378
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0f060e40-ab26-4fb8-90ca-13abade6a717",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "29c6b1a9-f88d-4dbe-9d2e-0d8824d42a9a",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2379
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0fbae4b3-d400-4f77-b97c-e1ca83bf2c84",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bc4c1234-e3de-46f6-92ea-8b73087fae60",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2381
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3bd0d241-322a-4c5d-a0de-4c1a4d732284",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bb8d7b5d-4363-4f14-98d3-92ec391c0448",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2382
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f4e47339-2db9-415b-b0cf-ac016b0fdd7f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e8fcb564-b1dd-426b-95aa-ad6f34d22c49",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2383
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "31fb726c-3771-496e-86e4-d9e0153ec467",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0e22cc7f-dd73-4c25-95c7-8971d09d8e8c",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2384
                    },
                    {
                        "action": "url reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "Format_URL:formatted_data",
                            "url": "Format_URL:formatted_data"
                        },
                        "angle": 0,
                        "app": "VirusTotal v3",
                        "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "approver": "",
                        "assets": [
                            {
                                "action": "url reputation",
                                "actions": [
                                    "get report",
                                    "detonate file",
                                    "detonate url",
                                    "url reputation",
                                    "ip reputation",
                                    "get file",
                                    "file reputation",
                                    "domain reputation",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "VirusTotal v3",
                                "app_version": "1.2.10",
                                "appid": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                                "asset_name": "virustotal v3 asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "url": "Format_URL:formatted_data"
                                },
                                "has_app": true,
                                "id": 105,
                                "loaded": false,
                                "missing": false,
                                "name": "virustotal v3 asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "URL",
                                        "column_order": 0,
                                        "contains": [
                                            "url",
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://www.test123.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "searchengines"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.Dr.Web",
                                        "data_type": "string",
                                        "example_values": [
                                            "e-mail"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.categories.alphaMountain.ai",
                                        "data_type": "string",
                                        "example_values": [
                                            "File Sharing/Storage, Search Engines/Portals"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.first_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399455
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399455
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "harmless"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.engine_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "CRDF"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "blacklist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_results.*.result",
                                        "data_type": "string",
                                        "example_values": [
                                            "clean"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            78
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_analysis_stats.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            8
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_final_url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_content_length",
                                        "data_type": "numeric",
                                        "example_values": [
                                            154896
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_content_sha256",
                                        "data_type": "string",
                                        "example_values": [
                                            "e84603534b9c77669d1ebc821aed90fb34e31b587a4df32eba708193b25770d9"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_cookies.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "xyz"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_http_response_headers.*",
                                        "data_type": "string",
                                        "example_values": [
                                            "same-origin-allow-popups; report-to=\"TestUi\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_modification_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399456
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.last_submission_date",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1618399455
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.reputation",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.times_submitted",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.total_votes.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.ScoreCard Research Beacon.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "7241469"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.ScoreCard Research Beacon.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1627544121
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.ScoreCard Research Beacon.*.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://sb.scorecardresearch.com/p?c1=2&c2=7241469&c7=https%3A%2F%2Fin.yahoo.com%2F&c5=97684142&cv=2.0&cj=1&c14=-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.Yahoo Dot Tags.*.timestamp",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1627544121
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.trackers.Yahoo Dot Tags.*.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://s.yimg.com/rq/darla/4-6-0/js/g-r-min.js"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attributes.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "e0583d78eb4bea4078dce1d89e9eaabd7be7b6a8630f88b70a725c607cdce063"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.links.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://www.virustotal.com/api/v3/urls/e0583d78eb4bea4078dce1d89e9eaabd7be7b6a8630f88b70a725c607cdce063"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "url"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.harmless",
                                        "data_type": "numeric",
                                        "example_values": [
                                            80
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.malicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "column_name": "Scan ID",
                                        "column_order": 1,
                                        "contains": [
                                            "virustotal scan id"
                                        ],
                                        "data_path": "action_result.summary.scan_id",
                                        "data_type": "string",
                                        "example_values": [
                                            9
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.suspicious",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.undetected",
                                        "data_type": "numeric",
                                        "example_values": [
                                            9
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Scan id: u-8d63a6cc87718dd52151f0e6fea2ff6fbf12d68a11046ba4ea3258546906c74f-1613644669, Harmless: 74, Malicious: 0, Suspicious: 0, Undetected: 9"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "url": {
                                        "contains": [
                                            "url",
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "URL to query",
                                        "key": "url",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "VirusTotal v3",
                                "product_vendor": "VirusTotal",
                                "targets": "105",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "URL Reputation VT"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def URL_Reputation_VT(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('URL_Reputation_VT() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'URL_Reputation_VT' call\n    formatted_data_1 = phantom.get_format_data(name='Format_URL')\n\n    parameters = []\n    \n    # build parameters list for 'URL_Reputation_VT' call\n    parameters.append({\n        'url': formatted_data_1,\n    })\n\n    phantom.act(action=\"url reputation\", parameters=parameters, assets=['virustotal v3 asset'], callback=URL_Reputation_TS, name=\"URL_Reputation_VT\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "URL Reputation VT",
                        "delay": 0,
                        "description": "URL Reputation VT",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c07c7b3e-ed08-4f80-836e-3fd59b50ee50",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 859,
                        "line_start": 840,
                        "message": "Configuring now",
                        "name": "url reputation",
                        "notes": "URL Reputation VT",
                        "number": 1,
                        "order": 26,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "URL_Reputation_VT",
                        "required_params": {
                            "url": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2385
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c3303a92-9526-4273-8b20-67457eb2b302",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2c7bd917-fce7-47e3-b6c8-36894768ff7d",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2386
                    },
                    {
                        ".scmName/text": "local",
                        "Container_id-0": "container:id",
                        "a_status-1": "Enriched",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "Set_last_automated_acti..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_Set_last_automated_action_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_Set_last_automated_action_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"Enriched\",\n        ],\n    ]\n\n    parameters = []\n\n    literal_values_0_0 = [item[0] for item in literal_values_0]\n    container_property_0_0 = [item[0] for item in container_property_0]\n\n    parameters.append({\n        'a_status': literal_values_0_0,\n        'Container_id': container_property_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/Set_last_automated_action\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/Set_last_automated_action', parameters=parameters, name='cf_local_Set_last_automated_action_1', callback=cf_local_Set_last_automated_action_1_callback)\n\n    return",
                        "callback_code": "def cf_local_Set_last_automated_action_1_callback(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('cf_local_Set_last_automated_action_1_callback() called')\n    \n    Filter_out_sourceAddress(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_out_destinationAddress(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    filter_22(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_out_requestURL(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_out_destinationDnsDomain(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_out_destinationDnsFQDN(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_out_fileHash(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    Filter_out_user_email(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_start": 2831,
                        "callsback": true,
                        "cfDisplayPath": "local/Set_last_automated_action",
                        "cfInputs": {
                            "Container_id": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            },
                            "a_status": {
                                "collectionType": "literal_values",
                                "dataPath": "Enriched",
                                "paramName": "literal_values_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 26,
                        "customFunction": "local/Set_last_automated_action",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0aaf17a4-eeb8-4016-9bb0-e1cca4743690",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2845,
                        "line_start": 2793,
                        "message": "Configuring now",
                        "name": "Set_last_automated_action",
                        "notes": "",
                        "number": 1,
                        "order": 83,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -680,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_Set_last_automated_action_1",
                        "selectedCustomFunction": {
                            "description": "set custom field last_automated_action",
                            "draftMode": false,
                            "id": 111,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 111,
                                    "description": "",
                                    "id": 205,
                                    "input_type": "list",
                                    "name": "Container_id",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [],
                                    "custom_function": 111,
                                    "description": "",
                                    "id": 206,
                                    "input_type": "list",
                                    "name": "a_status",
                                    "placeholder": ""
                                }
                            ],
                            "name": "Set_last_automated_action",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "Set_last_automated_action",
                                    "contains_type": [],
                                    "custom_function": 111,
                                    "data_path": "res",
                                    "description": "",
                                    "id": 97
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-ALERT-ATTIVO-01",
                                        "draft_mode": false,
                                        "id": 3007,
                                        "name": "PLAYBOOK-INVESTIGATE-ALERT-ATTIVO-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/test update filed",
                                        "draft_mode": false,
                                        "id": 2171,
                                        "name": "test update filed",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INCIDENT-CLOUD-01",
                                        "draft_mode": false,
                                        "id": 2620,
                                        "name": "PLAYBOOK-CONTAIN-INCIDENT-CLOUD-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/01-Contain-Approve-Playbook",
                                        "draft_mode": false,
                                        "id": 3148,
                                        "name": "01-Contain-Approve-Playbook",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/KTB -Triage Playbook for Attivo Label",
                                        "draft_mode": false,
                                        "id": 3167,
                                        "name": "KTB -Triage Playbook for Attivo Label",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/02-Master Malware",
                                        "draft_mode": false,
                                        "id": 3294,
                                        "name": "02-Master Malware",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-ALERT-SPLUNK-AD-01",
                                        "draft_mode": false,
                                        "id": 3201,
                                        "name": "PLAYBOOK-INVESTIGATE-ALERT-SPLUNK-AD-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": true,
                                        "display_path": "local/PLAYBOOK-INVESTIGATE-DATA-01",
                                        "draft_mode": false,
                                        "id": 3232,
                                        "name": "PLAYBOOK-INVESTIGATE-DATA-01",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 2387
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "filtered-data:Link_internal_src_to_artifact_record:condition_1:artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"is_internalSourceAddress\": \"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "filtered-data:Link_internal_src_to_artifact_record:condition_1:artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"is_internalSourceAddress\": \"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Update internal sourceA..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Update_internal_sourceAddress_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_internal_sourceAddress_artifact() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Update_internal_sourceAddress_artifact' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_internal_src_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_internal_src_to_artifact_record:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'Update_internal_sourceAddress_artifact' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"is_internalSourceAddress\\\": \\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': \"\",\n                'artifact_id': filtered_artifacts_item_1[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"Update_internal_sourceAddress_artifact\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Update internal sourceAddress artifact",
                        "delay": 0,
                        "description": "Update internal sourceAddress artifact",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "97acba03-9039-4eae-89b9-23a7aeb1937e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2717,
                        "line_start": 2686,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "Update internal sourceAddress artifact",
                        "number": 4,
                        "order": 79,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 40
                        },
                        "previous_function": "",
                        "previous_name": "Update_internal_sourceAddress_artifact",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2389
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note hostname"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_hostname() called')\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_22:condition_1:artifact:*.id', 'filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    # phantom.debug(\"ADD NOTE HOSTNAME: Collecting result>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\n    content = f\"### Hostname: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal): \n        results_data_1 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_VT_{i}:action_result.summary.malicious'], action_results=results)\n        results_data_2 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_TS_{i}:action_result.data.*.threat_type'], action_results=results)\n        results_data_3 = phantom.collect2(container=container, datapath=[f'WhoIS_Host_IP_TS_{i}:action_result.summary'], action_results=results)\n        results_item_1_0 = [item[0] for item in results_data_1]\n        results_item_2_0 = [item[0] for item in results_data_2]\n        results_item_3_0 = [item[0] for item in results_data_3]\n        ts_reputation_threat_type = []\n        for t in results_item_2_0:\n            if t not in ts_reputation_threat_type and t != None:\n                ts_reputation_threat_type.append(t)\n                \n        content += f\"**IP address: {ip}**\\n\\n\"\n        content += f\"VirusTotal IP Reputation\\n\" \n        content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"ThreatStream IP Repuation\\n\"\n        content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"WhoIS IP\\n\"\n        content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\\n\\n\"\n        content += \"---\\n\\n\"\n    \n    #content = \"Destination IP address: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal IP Reputation\" +\"\\n\" + \"Summary Detected URLs: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream IP Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) + \"\\n\" + \"\\n\" + \"WhoIS IP\" +\"\\n\" + \"Summary: \" + str(results_item_3_0[0])\n    \n    note_title = \"Hostname Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_hostname_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation Host TS, WhoIS Host IP TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def Add_note_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_hostname() called')\n    \n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_22:condition_1:artifact:*.id', 'filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    # phantom.debug(\"ADD NOTE HOSTNAME: Collecting result>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\n    content = f\"### Hostname: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal): \n        results_data_1 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_VT_{i}:action_result.summary.malicious'], action_results=results)\n        results_data_2 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_TS_{i}:action_result.data.*.threat_type'], action_results=results)\n        results_data_3 = phantom.collect2(container=container, datapath=[f'WhoIS_Host_IP_TS_{i}:action_result.summary'], action_results=results)\n        results_item_1_0 = [item[0] for item in results_data_1]\n        results_item_2_0 = [item[0] for item in results_data_2]\n        results_item_3_0 = [item[0] for item in results_data_3]\n        ts_reputation_threat_type = []\n        for t in results_item_2_0:\n            if t not in ts_reputation_threat_type and t != None:\n                ts_reputation_threat_type.append(t)\n                \n        content += f\"**IP address: {ip}**\\n\\n\"\n        content += f\"VirusTotal IP Reputation\\n\" \n        content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"ThreatStream IP Repuation\\n\"\n        content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"WhoIS IP\\n\"\n        content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\\n\\n\"\n        content += \"---\\n\\n\"\n    \n    #content = \"Destination IP address: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal IP Reputation\" +\"\\n\" + \"Summary Detected URLs: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream IP Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) + \"\\n\" + \"\\n\" + \"WhoIS IP\" +\"\\n\" + \"Summary: \" + str(results_item_3_0[0])\n    \n    note_title = \"Hostname Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_hostname_artifact(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note hostname",
                        "description": "Add note hostname",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0ffe6a1f-47ac-4523-a565-7129e9140caa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2048,
                        "line_start": 1994,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note hostname",
                        "number": 24,
                        "order": 59,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "Extract_address_of_hostname:custom_function:ListAddressExternal"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1940,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_hostname",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    # phantom.debug(\"ADD NOTE HOSTNAME: Collecting result>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\n    content = f\"### Hostname: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    for i, ip in enumerate(Extract_address_of_hostname__ListAddressExternal): \n        results_data_1 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_VT_{i}:action_result.summary.malicious'], action_results=results)\n        results_data_2 = phantom.collect2(container=container, datapath=[f'IP_Reputation_Host_TS_{i}:action_result.data.*.threat_type'], action_results=results)\n        results_data_3 = phantom.collect2(container=container, datapath=[f'WhoIS_Host_IP_TS_{i}:action_result.summary'], action_results=results)\n        results_item_1_0 = [item[0] for item in results_data_1]\n        results_item_2_0 = [item[0] for item in results_data_2]\n        results_item_3_0 = [item[0] for item in results_data_3]\n        ts_reputation_threat_type = []\n        for t in results_item_2_0:\n            if t not in ts_reputation_threat_type and t != None:\n                ts_reputation_threat_type.append(t)\n                \n        content += f\"**IP address: {ip}**\\n\\n\"\n        content += f\"VirusTotal IP Reputation\\n\" \n        content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"ThreatStream IP Repuation\\n\"\n        content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n        content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n        \n        content += f\"WhoIS IP\\n\"\n        content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\\n\\n\"\n        content += \"---\\n\\n\"\n    \n    #content = \"Destination IP address: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal IP Reputation\" +\"\\n\" + \"Summary Detected URLs: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream IP Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) + \"\\n\" + \"\\n\" + \"WhoIS IP\" +\"\\n\" + \"Summary: \" + str(results_item_3_0[0])\n    \n    note_title = \"Hostname Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n",
                        "warn": false,
                        "z": 2392
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note dst IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_dst_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_dst_IP() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_dst_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.cef.destinationAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"Destination IP address: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal IP Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream IP Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**WhoIS IP**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\"\n    \n    note_title = \"destinationAddress Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_dst_IP_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "WhoIS dst IP TS, IP Reputation dst IP TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Add_note_dst_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_dst_IP() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_dst_IP_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_dst_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.cef.destinationAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"Destination IP address: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal IP Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream IP Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**WhoIS IP**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\"\n    \n    note_title = \"destinationAddress Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_dst_IP_artifact(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note dst IP",
                        "description": "Add note dst IP",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b7b64e2e-2112-4c45-a1da-e83afe578491",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 639,
                        "line_start": 583,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note dst IP",
                        "number": 7,
                        "order": 20,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_dst_IP_to_artifact_record:condition_1:artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "IP_Reputation_dst_IP_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "IP_Reputation_dst_IP_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "WhoIS_dst_IP_TS:action_result.summary"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1940,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_dst_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"Destination IP address: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal IP Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream IP Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**WhoIS IP**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\"\n    \n    note_title = \"destinationAddress Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2395
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note user_email"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_user_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_user_email() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Email_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_user_email:condition_1:artifact:*.id', 'filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    #content = \"User Email: \" +  str(filtered_artifacts_item_1_1[0]) +\"\\n\" + \"\\n\" + \"ThreatStream E-mail Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_1_0[0])\n    \n    content = f\"User Email: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    \n    content += f\"**ThreatStream E-mail Repuation**\\n\"\n    content += f\"- Threat type: {results_item_1_0[0] if results_item_1_0[0] != None else '-'}\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] != None else 'NON-MALICIOUS'}\\n\\n\"\n    \n    note_title = \"User Email Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_user_email(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Email reputation TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def Add_note_user_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_user_email() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Email_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_user_email:condition_1:artifact:*.id', 'filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    #content = \"User Email: \" +  str(filtered_artifacts_item_1_1[0]) +\"\\n\" + \"\\n\" + \"ThreatStream E-mail Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_1_0[0])\n    \n    content = f\"User Email: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    \n    content += f\"**ThreatStream E-mail Repuation**\\n\"\n    content += f\"- Threat type: {results_item_1_0[0] if results_item_1_0[0] != None else '-'}\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] != None else 'NON-MALICIOUS'}\\n\\n\"\n    \n    note_title = \"User Email Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_user_email(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note user_email",
                        "description": "Add note user_email",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b232fd77-6251-4c97-8f86-046172a4b967",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2630,
                        "line_start": 2597,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note user_email",
                        "number": 30,
                        "order": 77,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_user_email:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "Email_reputation_TS:action_result.data.*.threat_type"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2040,
                            "y": 1960
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_user_email",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    #content = \"User Email: \" +  str(filtered_artifacts_item_1_1[0]) +\"\\n\" + \"\\n\" + \"ThreatStream E-mail Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_1_0[0])\n    \n    content = f\"User Email: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    \n    content += f\"**ThreatStream E-mail Repuation**\\n\"\n    content += f\"- Threat type: {results_item_1_0[0] if results_item_1_0[0] != None else '-'}\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] != None else 'NON-MALICIOUS'}\\n\\n\"\n    \n    note_title = \"User Email Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n",
                        "warn": false,
                        "z": 2400
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update user_email"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_user_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_user_email() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Email_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_user_email:condition_1:artifact:*.id', 'filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    phantom.debug(\"email-threat-type:\" + str(results_item_1_0[0]))\n    if results_item_1_0[0] != None:\n    \n        parameters = []\n\n        cef_json = {\"user_email_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_user_email\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Email reputation TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def Update_user_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_user_email() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Email_reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_user_email:condition_1:artifact:*.id', 'filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    phantom.debug(\"email-threat-type:\" + str(results_item_1_0[0]))\n    if results_item_1_0[0] != None:\n    \n        parameters = []\n\n        cef_json = {\"user_email_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_user_email\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update user_email",
                        "description": "Update user_email",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f8eb59dc-0c23-4ac7-a23d-1260a04d337d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2683,
                        "line_start": 2633,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update user_email",
                        "number": 31,
                        "order": 78,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_user_email:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Filter_out_user_email:condition_1:artifact:*.cef.user_email"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "Email_reputation_TS:action_result.data.*.threat_type"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 1960
                        },
                        "previous_function": "",
                        "previous_name": "Update_user_email",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "    phantom.debug(\"email-threat-type:\" + str(results_item_1_0[0]))\n    if results_item_1_0[0] != None:\n    \n        parameters = []\n\n        cef_json = {\"user_email_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_user_email\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n",
                        "warn": false,
                        "z": 2401
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 27
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_back_destinationDnsFQDN_to_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_back_destinationDnsFQDN_to_artifact() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationDnsFQDN\", \"in\", \"Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNExternal\"],\n        ],\n        name=\"Link_back_destinationDnsFQDN_to_artifact:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_note_destinationDnsFQDN(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "FQDN Reputation UBL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link back destinationDnsFQDN to artifact",
                        "description": "Link back destinationDnsFQDN to artifact",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e65b61d5-f038-4c81-b7d3-9c306ee12235",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2381,
                        "line_start": 2363,
                        "name": "filter",
                        "notes": "Link back destinationDnsFQDN to artifact",
                        "number": 27,
                        "order": 70,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationDnsFQDN",
                                        "value": "Check_if_destinationDnsFQDN_external:custom_function:destinationDnsFQDNExternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1960,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Link_back_destinationDnsFQDN_to_artifact",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2403
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 17
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_back_destinationDnsDoman_to_artifac(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_back_destinationDnsDoman_to_artifac() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationDnsDomain\", \"in\", \"Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainExternal\"],\n        ],\n        name=\"Link_back_destinationDnsDoman_to_artifac:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_note_destinationDnsDomain(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation UBL",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link back destinationDnsDoman to artifac",
                        "description": "Link back destinationDnsDoman to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cc053eeb-63d6-4648-bb1c-136645d30118",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1478,
                        "line_start": 1460,
                        "name": "filter",
                        "notes": "Link back destinationDnsDoman to artifact record",
                        "number": 17,
                        "order": 44,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationDnsDomain",
                                        "value": "Check_if_destinationDnsDomain_external:custom_function:destinationDnsDomainExternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1960,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Link_back_destinationDnsDoman_to_artifac",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2407
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note src IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_src_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_src_IP() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_src_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.cef.sourceAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"Source IP address: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal IP Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream IP Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**WhoIS IP**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\"\n    #phantom.debug(filtered_artifacts_item_1_1[0])\n    #phantom.debug(str(results_item_1_0[0]))\n    #phantom.debug(str(results_item_2_0[0]))\n    #phantom.debug(str(results_item_3_0[0]))\n    \n    note_title = \"sourceAddress Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_src_IP_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "WhoIS src IP TS, IP Reputation src IP TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Add_note_src_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_src_IP() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['IP_Reputation_src_IP_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['WhoIS_src_IP_TS:action_result.summary'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.cef.sourceAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"Source IP address: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal IP Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream IP Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**WhoIS IP**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\"\n    #phantom.debug(filtered_artifacts_item_1_1[0])\n    #phantom.debug(str(results_item_1_0[0]))\n    #phantom.debug(str(results_item_2_0[0]))\n    #phantom.debug(str(results_item_3_0[0]))\n    \n    note_title = \"sourceAddress Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_src_IP_artifact(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note src IP",
                        "description": "Add note src IP",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "96d330a2-65d6-4b0a-9cdb-8309a0caea84",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 259,
                        "legacy": true,
                        "line_end": 210,
                        "line_start": 159,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note src IP",
                        "number": 3,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_src_IP_to_artifact_record:condition_1:artifact:*.cef.sourceAddress"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "IP_Reputation_src_IP_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "IP_Reputation_src_IP_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "WhoIS_src_IP_TS:action_result.summary"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1940,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_src_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"Source IP address: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal IP Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream IP Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**WhoIS IP**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] != {} else '-'}\"\n    #phantom.debug(filtered_artifacts_item_1_1[0])\n    #phantom.debug(str(results_item_1_0[0]))\n    #phantom.debug(str(results_item_2_0[0]))\n    #phantom.debug(str(results_item_3_0[0]))\n    \n    note_title = \"sourceAddress Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n",
                        "warn": false,
                        "z": 2412
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Check if sourceAddress ..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_sourceAddress_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_sourceAddress_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_sourceAddress:condition_1:artifact:*.cef.sourceAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_sourceAddress_external__sourceAddressExternal = None\n    Check_if_sourceAddress_external__sourceAddressInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    extemplist = []\n    intemplist = []\n    for ip in filtered_artifacts_item_1_0:\n        try:\n            private = ipaddress.ip_address(ip).is_private\n            if private == True:\n                phantom.debug(\"{} is private\".format(ip))\n                intemplist.append(ip)\n            else:\n                phantom.debug(\"{} is public\".format(ip))\n                extemplist.append(ip)\n        except ValueError:\n            phantom.debug(f\">>>>>> address '{ip}' is invalid, skipping...\")\n            \n    Check_if_sourceAddress_external__sourceAddressExternal = extemplist\n    Check_if_sourceAddress_external__sourceAddressInternal = intemplist\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_sourceAddress_external:sourceAddressExternal', value=json.dumps(Check_if_sourceAddress_external__sourceAddressExternal))\n    phantom.save_run_data(key='Check_if_sourceAddress_external:sourceAddressInternal', value=json.dumps(Check_if_sourceAddress_external__sourceAddressInternal))\n    Check_if_sourceAddress_is_private(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def Check_if_sourceAddress_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_sourceAddress_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_sourceAddress:condition_1:artifact:*.cef.sourceAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_sourceAddress_external__sourceAddressExternal = None\n    Check_if_sourceAddress_external__sourceAddressInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    extemplist = []\n    intemplist = []\n    for ip in filtered_artifacts_item_1_0:\n        try:\n            private = ipaddress.ip_address(ip).is_private\n            if private == True:\n                phantom.debug(\"{} is private\".format(ip))\n                intemplist.append(ip)\n            else:\n                phantom.debug(\"{} is public\".format(ip))\n                extemplist.append(ip)\n        except ValueError:\n            phantom.debug(f\">>>>>> address '{ip}' is invalid, skipping...\")\n            \n    Check_if_sourceAddress_external__sourceAddressExternal = extemplist\n    Check_if_sourceAddress_external__sourceAddressInternal = intemplist\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_sourceAddress_external:sourceAddressExternal', value=json.dumps(Check_if_sourceAddress_external__sourceAddressExternal))\n    phantom.save_run_data(key='Check_if_sourceAddress_external:sourceAddressInternal', value=json.dumps(Check_if_sourceAddress_external__sourceAddressInternal))\n    Check_if_sourceAddress_is_private(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Check if sourceAddress external",
                        "description": "Check if sourceAddress external",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8e3e2b86-6a54-4716-96cd-be15ceec2657",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 89,
                        "line_start": 48,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Check if sourceAddress external",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "sourceAddressExternal"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "sourceAddressInternal"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_sourceAddress:condition_1:artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_sourceAddress_external",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    extemplist = []\n    intemplist = []\n    for ip in filtered_artifacts_item_1_0:\n        try:\n            private = ipaddress.ip_address(ip).is_private\n            if private == True:\n                phantom.debug(\"{} is private\".format(ip))\n                intemplist.append(ip)\n            else:\n                phantom.debug(\"{} is public\".format(ip))\n                extemplist.append(ip)\n        except ValueError:\n            phantom.debug(f\">>>>>> address '{ip}' is invalid, skipping...\")\n            \n    Check_if_sourceAddress_external__sourceAddressExternal = extemplist\n    Check_if_sourceAddress_external__sourceAddressInternal = intemplist\n\n",
                        "warn": false,
                        "z": 2413
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Check if destinationAddr..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_destinationAddress_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationAddress_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_destinationAddress:condition_1:artifact:*.cef.destinationAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_destinationAddress_external__destinationAddressExternal = None\n    Check_if_destinationAddress_external__destinationAddressInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    extemplist = []\n    intemplist = []\n    for ip in filtered_artifacts_item_1_0:\n        try:\n            private = ipaddress.ip_address(ip).is_private\n            if private == True:\n                phantom.debug(\"{} is private\".format(ip))\n                intemplist.append(ip)\n            else:\n                phantom.debug(\"{} is public\".format(ip))\n                extemplist.append(ip)\n        except ValueError:\n            phantom.debug(f\"address '{ip}' is invalid, skipping...\")\n            \n    Check_if_destinationAddress_external__destinationAddressExternal = extemplist\n    Check_if_destinationAddress_external__destinationAddressInternal = intemplist\n    ###################################################################\n    ###################################################################\n    ###################################################################\n    ###################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_destinationAddress_external:destinationAddressExternal', value=json.dumps(Check_if_destinationAddress_external__destinationAddressExternal))\n    phantom.save_run_data(key='Check_if_destinationAddress_external:destinationAddressInternal', value=json.dumps(Check_if_destinationAddress_external__destinationAddressInternal))\n    Check_if_destinationAddress_is_private(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def Check_if_destinationAddress_external(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationAddress_external() called')\n    \n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Filter_out_destinationAddress:condition_1:artifact:*.cef.destinationAddress'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    Check_if_destinationAddress_external__destinationAddressExternal = None\n    Check_if_destinationAddress_external__destinationAddressInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    extemplist = []\n    intemplist = []\n    for ip in filtered_artifacts_item_1_0:\n        try:\n            private = ipaddress.ip_address(ip).is_private\n            if private == True:\n                phantom.debug(\"{} is private\".format(ip))\n                intemplist.append(ip)\n            else:\n                phantom.debug(\"{} is public\".format(ip))\n                extemplist.append(ip)\n        except ValueError:\n            phantom.debug(f\"address '{ip}' is invalid, skipping...\")\n            \n    Check_if_destinationAddress_external__destinationAddressExternal = extemplist\n    Check_if_destinationAddress_external__destinationAddressInternal = intemplist\n    ###################################################################\n    ###################################################################\n    ###################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Check_if_destinationAddress_external:destinationAddressExternal', value=json.dumps(Check_if_destinationAddress_external__destinationAddressExternal))\n    phantom.save_run_data(key='Check_if_destinationAddress_external:destinationAddressInternal', value=json.dumps(Check_if_destinationAddress_external__destinationAddressInternal))\n    Check_if_destinationAddress_is_private(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Check if destinationAddress external",
                        "description": "Check if destinationAddress external",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6192cd8c-3540-4e9a-944d-1e28e12531c1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 369,
                        "line_start": 325,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Check if destinationAddress external",
                        "number": 5,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "destinationAddressExternal"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "destinationAddressInternal"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Filter_out_destinationAddress:condition_1:artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_destinationAddress_external",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    extemplist = []\n    intemplist = []\n    for ip in filtered_artifacts_item_1_0:\n        try:\n            private = ipaddress.ip_address(ip).is_private\n            if private == True:\n                phantom.debug(\"{} is private\".format(ip))\n                intemplist.append(ip)\n            else:\n                phantom.debug(\"{} is public\".format(ip))\n                extemplist.append(ip)\n        except ValueError:\n            phantom.debug(f\"address '{ip}' is invalid, skipping...\")\n            \n    Check_if_destinationAddress_external__destinationAddressExternal = extemplist\n    Check_if_destinationAddress_external__destinationAddressInternal = intemplist\n    ###################################################################\n    ###################################################################\n    ###################################################################\n    ###################################################################",
                        "warn": false,
                        "z": 2414
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 30
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_internal_src_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_internal_src_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.sourceAddress\", \"in\", \"Check_if_sourceAddress_external:custom_function:sourceAddressInternal\"],\n        ],\n        name=\"Link_internal_src_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Update_internal_sourceAddress_artifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link internal src to artifact record",
                        "description": "Link internal src to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b965913a-9cc8-4836-a7c9-88b9627dcb9a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2772,
                        "line_start": 2754,
                        "name": "filter",
                        "notes": "Link internal src to artifact record",
                        "number": 30,
                        "order": 81,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": "Check_if_sourceAddress_external:custom_function:sourceAddressInternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1820,
                            "y": 40
                        },
                        "previous_function": "",
                        "previous_name": "Link_internal_src_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2422
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_back_src_IP_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_back_src_IP_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.sourceAddress\", \"in\", \"Check_if_sourceAddress_external:custom_function:sourceAddressExternal\"],\n        ],\n        name=\"Link_back_src_IP_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_note_src_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "WhoIS src IP TS, IP Reputation src IP TS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link back src IP to artifact record",
                        "description": "Link back src IP to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "464b5873-263c-4832-8a3a-a8ca3785b6e0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_Link_back_src_IP_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_Link_back_src_IP_to_artifact_record() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['WhoIS_src_IP_TS', 'IP_Reputation_src_IP_TS']):\n        \n        # call connected block \"Link_back_src_IP_to_artifact_record\"\n        Link_back_src_IP_to_artifact_record(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 290,
                        "line_end": 301,
                        "line_start": 272,
                        "name": "filter",
                        "notes": "Link back src IP to artifact record",
                        "number": 3,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": "Check_if_sourceAddress_external:custom_function:sourceAddressExternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1820,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Link_back_src_IP_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2423
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7b39062b-b275-47c9-925d-f6f49320d5d9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1cbbc25f-ffd9-4bb9-8f8e-b411add211e2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "36fc41d9-7745-48e3-be45-f02651a532fd",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2425
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Check_if_destinationAddress_is_private(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Check_if_destinationAddress_is_private() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_destinationAddress_external:custom_function:destinationAddressExternal\", \"!=\", []],\n        ],\n        name=\"Check_if_destinationAddress_is_private:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_dst_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"Check_if_destinationAddress_external:custom_function:destinationAddressInternal\", \"!=\", []],\n        ],\n        name=\"Check_if_destinationAddress_is_private:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        Link_internal_dst_to_artifact_record(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Check if destinationAddress is private",
                        "description": "Check if destinationAddress is private",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "817453e7-0dab-4bd6-bfec-c1104acfcc93",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 437,
                        "line_start": 406,
                        "name": "filter",
                        "notes": "Check if destinationAddress is private",
                        "number": 6,
                        "order": 13,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_destinationAddress_external:custom_function:destinationAddressExternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "Check_if_destinationAddress_external:custom_function:destinationAddressInternal",
                                        "value": "[]"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "Check_if_destinationAddress_is_private",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2436
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0c111d77-54d8-422d-934f-7dc6f75a89f8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "24b3cbfa-2950-423e-9988-781f14733b5e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "42bb9183-176b-42c8-97d8-fb3b6e383cf4",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2437
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "70e0cc75-0e75-4df0-936c-2ad0b9f358bd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "488d9bb0-e5cb-41e9-9b79-701002e49705",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2492143a-9ad1-4380-8022-aafcd5264420",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2439
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_destinationAddress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_destinationAddress() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationAddress\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_destinationAddress:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Check_if_destinationAddress_external(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out destinationAddress",
                        "description": "Filter out destinationAddress",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "56d5c0e5-4dec-4bf8-9418-2dac22f10544",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 322,
                        "line_start": 304,
                        "name": "filter",
                        "notes": "Filter out destinationAddress",
                        "number": 4,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationAddress",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_destinationAddress",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2443
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_sourceAddress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_sourceAddress() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.sourceAddress\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_sourceAddress:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Check_if_sourceAddress_external(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out sourceAddress",
                        "description": "Filter out sourceAddress",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2cd3ce47-6ea3-439f-978f-f3bf233c5c71",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 45,
                        "line_start": 27,
                        "name": "filter",
                        "notes": "Filter out sourceAddress",
                        "number": 2,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": -100
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_sourceAddress",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2444
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 22
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_22(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_22() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationHostName\", \"!=\", \"\"],\n        ],\n        name=\"filter_22:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Format_data_for_kaspersky_query_on_hostn(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        Format_data_for_amp_query_on_hostname(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        Format_data_for_mcafee_query_on_hostname(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "29c6b1a9-f88d-4dbe-9d2e-0d8824d42a9a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1718,
                        "line_start": 1698,
                        "name": "filter",
                        "notes": "",
                        "number": 22,
                        "order": 50,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationHostName",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "filter_22",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2469
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "Format_data_for_kaspersky_query_on_hostn:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "Format_data_for_kaspersky_query_on_hostn:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Run kaspersky query on ...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Run_kaspersky_query_on_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Run_kaspersky_query_on_hostname() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Run_kaspersky_query_on_hostname' call\n    formatted_data_1 = phantom.get_format_data(name='Format_data_for_kaspersky_query_on_hostn')\n\n    parameters = []\n    \n    # build parameters list for 'Run_kaspersky_query_on_hostname' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=join_Extract_address_of_hostname, name=\"Run_kaspersky_query_on_hostname\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Run kaspersky query on hostname",
                        "delay": 0,
                        "description": "Run kaspersky query on hostname",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "36fc41d9-7745-48e3-be45-f02651a532fd",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1767,
                        "line_start": 1745,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "Run kaspersky query on hostname",
                        "number": 10,
                        "order": 52,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 280,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "Run_kaspersky_query_on_hostname",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2470
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "Format_data_for_mcafee_query_on_hostname:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "Format_data_for_mcafee_query_on_hostname:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Run mcafee query on ho...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Run_mcafee_query_on_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Run_mcafee_query_on_hostname() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Run_mcafee_query_on_hostname' call\n    formatted_data_1 = phantom.get_format_data(name='Format_data_for_mcafee_query_on_hostname')\n\n    parameters = []\n    \n    # build parameters list for 'Run_mcafee_query_on_hostname' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=join_Extract_address_of_hostname, name=\"Run_mcafee_query_on_hostname\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Run mcafee query on hostname",
                        "delay": 0,
                        "description": "Run mcafee query on hostname",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2492143a-9ad1-4380-8022-aafcd5264420",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2945,
                        "line_start": 2923,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "Run mcafee query on hostname",
                        "number": 12,
                        "order": 87,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 280,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "Run_mcafee_query_on_hostname",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2472
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5070021e-fb30-4747-8d04-0b4e71ae1c5f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "29c6b1a9-f88d-4dbe-9d2e-0d8824d42a9a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "24b3cbfa-2950-423e-9988-781f14733b5e",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2474
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ca0f327b-3e07-4d36-a25b-4bdd336ca3bd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "29c6b1a9-f88d-4dbe-9d2e-0d8824d42a9a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "488d9bb0-e5cb-41e9-9b79-701002e49705",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2475
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "77e3c533-5a21-4579-996c-0d73154dbd39",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "36fc41d9-7745-48e3-be45-f02651a532fd",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f38b8845-40c6-47ea-9cd1-943657b9b91f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2476
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7b60202d-b382-4068-bcbe-6fb3be0ded63",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "42bb9183-176b-42c8-97d8-fb3b6e383cf4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f38b8845-40c6-47ea-9cd1-943657b9b91f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2478
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cd62bfd3-ebf7-48ca-9c00-f1dbd1ff64d1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2492143a-9ad1-4380-8022-aafcd5264420",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f38b8845-40c6-47ea-9cd1-943657b9b91f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2479
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 7
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_back_dst_IP_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_back_dst_IP_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationAddress\", \"in\", \"Check_if_destinationAddress_external:custom_function:destinationAddressExternal\"],\n        ],\n        name=\"Link_back_dst_IP_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_note_dst_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "WhoIS dst IP TS, IP Reputation dst IP TS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link back dst IP to artifact record",
                        "description": "Link back dst IP to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0f238184-e26a-4132-a103-b978fe1213cf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_Link_back_dst_IP_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_Link_back_dst_IP_to_artifact_record() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['WhoIS_dst_IP_TS', 'IP_Reputation_dst_IP_TS']):\n        \n        # call connected block \"Link_back_dst_IP_to_artifact_record\"\n        Link_back_dst_IP_to_artifact_record(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 569,
                        "line_end": 580,
                        "line_start": 551,
                        "name": "filter",
                        "notes": "Link back dst IP to artifact record",
                        "number": 7,
                        "order": 19,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationAddress",
                                        "value": "Check_if_destinationAddress_external:custom_function:destinationAddressExternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1820,
                            "y": 180
                        },
                        "previous_function": "",
                        "previous_name": "Link_back_dst_IP_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2481
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "Format_data_for_amp_query_on_hostname:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "Format_data_for_amp_query_on_hostname:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "Run amp query on hostn...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def Run_amp_query_on_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Run_amp_query_on_hostname() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'Run_amp_query_on_hostname' call\n    formatted_data_1 = phantom.get_format_data(name='Format_data_for_amp_query_on_hostname')\n\n    parameters = []\n    \n    # build parameters list for 'Run_amp_query_on_hostname' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=join_Extract_address_of_hostname, name=\"Run_amp_query_on_hostname\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Run amp query on hostname",
                        "delay": 0,
                        "description": "Run amp query on hostname",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "42bb9183-176b-42c8-97d8-fb3b6e383cf4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2920,
                        "line_start": 2898,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "Run amp query on hostname",
                        "number": 11,
                        "order": 86,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 280,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "Run_amp_query_on_hostname",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2486
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 24
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_24(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_24() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationHostName\", \"!=\", \"\"],\n        ],\n        name=\"filter_24:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Add_note_hostname(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "IP Reputation Host TS, WhoIS Host IP TS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "def join_filter_24(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_filter_24() called')\n    Extract_address_of_hostname__ListAddressExternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressExternal'))\n    number_of_address = len(Extract_address_of_hostname__ListAddressExternal)\n    phantom.debug(f'Number of ExtIP: {number_of_address}')\n    phantom.debug(Extract_address_of_hostname__ListAddressExternal)\n    custom_action_list = [f\"IP_Reputation_Host_TS_{i}\" for i in range(number_of_address)] + [f\"WhoIS_Host_IP_TS_{i}\" for i in range(number_of_address)]\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    #if phantom.completed(action_names=['IP_Reputation_Host_TS', 'WhoIS_Host_IP_TS']):\n    if phantom.completed(action_names=custom_action_list): \n        \n        # call connected block \"filter_24\"\n        filter_24(container=container, handle=handle)\n    \n    return",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": true,
                        "id": "a12e3f5f-158e-4375-9a8b-f855d6698dcb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_filter_24(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_filter_24() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_filter_24_called'):\n        return\n\n    # no callbacks to check, call connected block \"filter_24\"\n    phantom.save_run_data(key='join_filter_24_called', value='filter_24', auto=True)\n\n    filter_24(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 1975,
                        "line_end": 1991,
                        "line_start": 1957,
                        "name": "filter",
                        "notes": "",
                        "number": 24,
                        "order": 58,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationHostName",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1820,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "filter_24",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2490
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 10
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Link_URL_to_artifact_record(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Link_URL_to_artifact_record() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.requestURL\", \"in\", \"Check_if_requestURL_external:custom_function:requestURLInternal\"],\n        ],\n        name=\"Link_URL_to_artifact_record:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Update_internal_requestURL_artifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Link URL to artifact record",
                        "description": "Link URL to artifact record",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f13ee761-6699-4715-8b20-2a7638649f6e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 880,
                        "line_start": 862,
                        "name": "filter",
                        "notes": "Link URL to artifact record",
                        "number": 10,
                        "order": 27,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "artifact:*.cef.requestURL",
                                        "value": "Check_if_requestURL_external:custom_function:requestURLInternal"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 460,
                            "y": 880
                        },
                        "previous_function": "",
                        "previous_name": "Link_URL_to_artifact_record",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2492
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c948c3bf-6c74-4047-bd76-527e29c1a6c4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f38b8845-40c6-47ea-9cd1-943657b9b91f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3f21ccf-6cf2-4caa-b7e0-128dea1078f7",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2493
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note details on inter..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_details_on_internal_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_details_on_internal_hostname() called')\n    \n    Extract_address_of_hostname__ListAddressInternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressInternal'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    if  Extract_address_of_hostname__ListAddressInternal != []:\n        content = f\"Hostname: {filtered_artifacts_item_1_0[0]}\\n\\n\" \n        content += \"Internal IP address found: \\n\\n\" \n        for ip in Extract_address_of_hostname__ListAddressInternal:\n            content += f\"- {ip}\\n\"\n\n        note_title = \"Hostname Internal Address Investigation\"\n        note_content = content\n        note_format = \"markdown\"\n        phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run kaspersky query on hostname, Run amp query on hostname, Run mcafee query on hostname",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def Add_note_details_on_internal_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_details_on_internal_hostname() called')\n    \n    Extract_address_of_hostname__ListAddressInternal = json.loads(phantom.get_run_data(key='Extract_address_of_hostname:ListAddressInternal'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    if  Extract_address_of_hostname__ListAddressInternal != []:\n        content = f\"Hostname: {filtered_artifacts_item_1_0[0]}\\n\\n\" \n        content += \"Internal IP address found: \\n\\n\" \n        for ip in Extract_address_of_hostname__ListAddressInternal:\n            content += f\"- {ip}\\n\"\n\n        note_title = \"Hostname Internal Address Investigation\"\n        note_content = content\n        note_format = \"markdown\"\n        phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note details on internal hostname",
                        "description": "Add note details on internal hostname",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c69c4f7d-ae30-48b4-9027-6d0ef63d8b19",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2159,
                        "line_start": 2131,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note details on internal hostname",
                        "number": 26,
                        "order": 61,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Extract_address_of_hostname:custom_function:ListAddressInternal"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 580
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_details_on_internal_hostname",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    if  Extract_address_of_hostname__ListAddressInternal != []:\n        content = f\"Hostname: {filtered_artifacts_item_1_0[0]}\\n\\n\" \n        content += \"Internal IP address found: \\n\\n\" \n        for ip in Extract_address_of_hostname__ListAddressInternal:\n            content += f\"- {ip}\\n\"\n\n        note_title = \"Hostname Internal Address Investigation\"\n        note_content = content\n        note_format = \"markdown\"\n        phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n",
                        "warn": false,
                        "z": 2494
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format data for kaspers..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_data_for_kaspersky_query_on_hostn(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_data_for_kaspersky_query_on_hostn() called')\n    \n    template = \"\"\"earliest = -7d@d index=ktb_mgmt_default sourcetype =\\\"kaspersky:klprci\\\"| search identNetBios= {0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\\\"%d-%m-%Y %H:%M:%S\\\" ctime(time) AS time\n| table time,identNetBios,src\n| dedup identNetBios,src\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_data_for_kaspersky_query_on_hostn\", separator=\", \")\n\n    Run_kaspersky_query_on_hostname(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format data for kaspersky query on hostn",
                        "delimiter": ", ",
                        "description": "Format data for kaspersky query on hostname",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1cbbc25f-ffd9-4bb9-8f8e-b411add211e2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1742,
                        "line_start": 1721,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format data for kaspersky query on hostname",
                        "number": 17,
                        "order": 51,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "Format_data_for_kaspersky_query_on_hostn",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "earliest = -7d@d index=ktb_mgmt_default sourcetype =\"kaspersky:klprci\"| search identNetBios= {0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\"%d-%m-%Y %H:%M:%S\" ctime(time) AS time\n| table time,identNetBios,src\n| dedup identNetBios,src",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2495
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format data for amp que..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_data_for_amp_query_on_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_data_for_amp_query_on_hostname() called')\n    \n    template = \"\"\"earliest = -7d@d index=ktb_csoc_default sourcetype= \\\"cisco:amp:event\\\"\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\\\"%d-%m-%Y %H:%M:%S\\\" ctime(time) AS time\n| spath \\\"event.computer.hostname\\\" | search \\\"event.computer.hostname\\\"=\\\"{0}*\\\"\n| table time,event.computer.hostname ,event.computer.network_addresses{{}}.ip ,event.computer.network_addresses{{}}.mac ,event.computer.connector_guid\n| dedup event.computer.connector_guid\n| rename event.computer.network_addresses{{}}.ip as ip\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_data_for_amp_query_on_hostname\", separator=\", \")\n\n    Run_amp_query_on_hostname(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format data for amp query on hostname",
                        "delimiter": ", ",
                        "description": "Format data for amp query on hostname",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "24b3cbfa-2950-423e-9988-781f14733b5e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2871,
                        "line_start": 2848,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format data for amp query on hostname",
                        "number": 19,
                        "order": 84,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "Format_data_for_amp_query_on_hostname",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "earliest = -7d@d index=ktb_csoc_default sourcetype= \"cisco:amp:event\"\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\"%d-%m-%Y %H:%M:%S\" ctime(time) AS time\n| spath \"event.computer.hostname\" | search \"event.computer.hostname\"=\"{0}*\"\n| table time,event.computer.hostname ,event.computer.network_addresses{{}}.ip ,event.computer.network_addresses{{}}.mac ,event.computer.connector_guid\n| dedup event.computer.connector_guid\n| rename event.computer.network_addresses{{}}.ip as ip",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2496
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Format data for mcafee ..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Format_data_for_mcafee_query_on_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Format_data_for_mcafee_query_on_hostname() called')\n    \n    template = \"\"\"earliest = -7d@d index=ktb_mgmt_default sourcetype=\\\"mcafee:epo\\\" dest_dns={0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\\\"%d-%m-%Y %H:%M:%S\\\" ctime(time) AS time\n| table time,dest_dns ,dest_ip,dest_mac,os,sp\n| dedup dest_dns ,dest_ip\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Format_data_for_mcafee_query_on_hostname\", separator=\", \")\n\n    Run_mcafee_query_on_hostname(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Format data for mcafee query on hostname",
                        "delimiter": ", ",
                        "description": "Format data for mcafee query on hostname",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "488d9bb0-e5cb-41e9-9b79-701002e49705",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 2895,
                        "line_start": 2874,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format data for mcafee query on hostname",
                        "number": 20,
                        "order": 85,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_22:condition_1:artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "Format_data_for_mcafee_query_on_hostname",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "earliest = -7d@d index=ktb_mgmt_default sourcetype=\"mcafee:epo\" dest_dns={0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\"%d-%m-%Y %H:%M:%S\" ctime(time) AS time\n| table time,dest_dns ,dest_ip,dest_mac,os,sp\n| dedup dest_dns ,dest_ip",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2497
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Extract address of hostn..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Extract_address_of_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Extract_address_of_hostname() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Run_kaspersky_query_on_hostname:action_result.data.*.time', 'Run_kaspersky_query_on_hostname:action_result.data.*.src'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['Run_amp_query_on_hostname:action_result.data.*.time', 'Run_amp_query_on_hostname:action_result.data.*.ip'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['Run_mcafee_query_on_hostname:action_result.data.*.time', 'Run_mcafee_query_on_hostname:action_result.data.*.dest_ip'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_2_1 = [item[1] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n    results_item_3_1 = [item[1] for item in results_data_3]\n\n    Extract_address_of_hostname__ListAddressExternal = None\n    Extract_address_of_hostname__ListAddressInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    import ipaddress\n    from datetime import datetime\n    \n    private_ip_address_list = []\n    public_ip_address_list = []\n    \n    latest_time = None\n    latest_ip = None\n\n    kaspersky_time = datetime.strptime(results_item_1_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_1_0[0] else None\n    kaspersky_ip = results_item_1_1[0] if results_item_1_1[0] else None\n    amp_time = datetime.strptime(results_item_2_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_2_0[0] else None\n    amp_ip = results_item_2_1[0] if results_item_2_1[0] else None\n    mcafee_time = datetime.strptime(results_item_3_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_3_0[0] else None\n    mcafee_ip = results_item_3_1[0] if results_item_3_1[0] else None\n        \n    # Get latest IP\n    if kaspersky_time != None and (latest_time == None or kaspersky_time > latest_time):\n        latest_time = kaspersky_time\n        latest_ip = kaspersky_ip\n    if amp_time != None and (latest_time == None or amp_time > latest_time):\n        latest_time = amp_time\n        latest_ip = amp_ip\n    if mcafee_time != None and (latest_time == None or mcafee_time > latest_time):\n        latest_time = mcafee_time\n        latest_ip = mcafee_ip\n        \n    phantom.debug(f\"latest_time: {latest_time}\")\n    phantom.debug(f\"latest_ip: {latest_ip}\")\n    \n    if latest_ip:\n        try:\n            ip = latest_ip\n            if ipaddress.ip_address(ip).is_private:\n                if ip not in private_ip_address_list:\n                    private_ip_address_list.append(ip)\n            else:\n                if ip not in public_ip_address_list:\n                    public_ip_address_list.append(ip)\n        except ValueError:\n            pass\n    \n    Extract_address_of_hostname__ListAddressExternal = public_ip_address_list\n    Extract_address_of_hostname__ListAddressInternal = private_ip_address_list\n    phantom.debug(f\"private_ip_address_list: {private_ip_address_list}\")\n    phantom.debug(f\"public_ip_address_list: {public_ip_address_list}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Extract_address_of_hostname:ListAddressExternal', value=json.dumps(Extract_address_of_hostname__ListAddressExternal))\n    phantom.save_run_data(key='Extract_address_of_hostname:ListAddressInternal', value=json.dumps(Extract_address_of_hostname__ListAddressInternal))\n    filter_23(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Run kaspersky query on hostname, Run amp query on hostname, Run mcafee query on hostname",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 19,
                        "custom_callback": "",
                        "custom_code": "def Extract_address_of_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Extract_address_of_hostname() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Run_kaspersky_query_on_hostname:action_result.data.*.time', 'Run_kaspersky_query_on_hostname:action_result.data.*.src'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['Run_amp_query_on_hostname:action_result.data.*.time', 'Run_amp_query_on_hostname:action_result.data.*.ip'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['Run_mcafee_query_on_hostname:action_result.data.*.time', 'Run_mcafee_query_on_hostname:action_result.data.*.dest_ip'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_2_1 = [item[1] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n    results_item_3_1 = [item[1] for item in results_data_3]\n\n    Extract_address_of_hostname__ListAddressExternal = None\n    Extract_address_of_hostname__ListAddressInternal = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n    import ipaddress\n    from datetime import datetime\n    \n    private_ip_address_list = []\n    public_ip_address_list = []\n    \n    latest_time = None\n    latest_ip = None\n\n    kaspersky_time = datetime.strptime(results_item_1_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_1_0[0] else None\n    kaspersky_ip = results_item_1_1[0] if results_item_1_1[0] else None\n    amp_time = datetime.strptime(results_item_2_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_2_0[0] else None\n    amp_ip = results_item_2_1[0] if results_item_2_1[0] else None\n    mcafee_time = datetime.strptime(results_item_3_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_3_0[0] else None\n    mcafee_ip = results_item_3_1[0] if results_item_3_1[0] else None\n        \n    # Get latest IP\n    if kaspersky_time != None and (latest_time == None or kaspersky_time > latest_time):\n        latest_time = kaspersky_time\n        latest_ip = kaspersky_ip\n    if amp_time != None and (latest_time == None or amp_time > latest_time):\n        latest_time = amp_time\n        latest_ip = amp_ip\n    if mcafee_time != None and (latest_time == None or mcafee_time > latest_time):\n        latest_time = mcafee_time\n        latest_ip = mcafee_ip\n        \n    phantom.debug(f\"latest_time: {latest_time}\")\n    phantom.debug(f\"latest_ip: {latest_ip}\")\n    \n    if latest_ip:\n        try:\n            ip = latest_ip\n            if ipaddress.ip_address(ip).is_private:\n                if ip not in private_ip_address_list:\n                    private_ip_address_list.append(ip)\n            else:\n                if ip not in public_ip_address_list:\n                    public_ip_address_list.append(ip)\n        except ValueError:\n            pass\n    \n    Extract_address_of_hostname__ListAddressExternal = public_ip_address_list\n    Extract_address_of_hostname__ListAddressInternal = private_ip_address_list\n    phantom.debug(f\"private_ip_address_list: {private_ip_address_list}\")\n    phantom.debug(f\"public_ip_address_list: {public_ip_address_list}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='Extract_address_of_hostname:ListAddressExternal', value=json.dumps(Extract_address_of_hostname__ListAddressExternal))\n    phantom.save_run_data(key='Extract_address_of_hostname:ListAddressInternal', value=json.dumps(Extract_address_of_hostname__ListAddressInternal))\n    filter_23(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Extract address of hostname",
                        "description": "Extract address of hostname",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f38b8845-40c6-47ea-9cd1-943657b9b91f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_Extract_address_of_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_Extract_address_of_hostname() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['Run_kaspersky_query_on_hostname', 'Run_amp_query_on_hostname', 'Run_mcafee_query_on_hostname']):\n        \n        # call connected block \"Extract_address_of_hostname\"\n        Extract_address_of_hostname(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 1846,
                        "legacy": true,
                        "line_end": 1857,
                        "line_start": 1770,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Extract address of hostname",
                        "number": 23,
                        "order": 53,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "ListAddressExternal"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "ListAddressInternal"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "Run_kaspersky_query_on_hostname:action_result.data.*.time"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "Run_kaspersky_query_on_hostname:action_result.data.*.src"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "Run_amp_query_on_hostname:action_result.data.*.time"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "Run_amp_query_on_hostname:action_result.data.*.ip"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "Run_mcafee_query_on_hostname:action_result.data.*.time"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "Run_mcafee_query_on_hostname:action_result.data.*.dest_ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "Extract_address_of_hostname",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "    import ipaddress\n    from datetime import datetime\n    \n    private_ip_address_list = []\n    public_ip_address_list = []\n    \n    latest_time = None\n    latest_ip = None\n\n    kaspersky_time = datetime.strptime(results_item_1_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_1_0[0] else None\n    kaspersky_ip = results_item_1_1[0] if results_item_1_1[0] else None\n    amp_time = datetime.strptime(results_item_2_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_2_0[0] else None\n    amp_ip = results_item_2_1[0] if results_item_2_1[0] else None\n    mcafee_time = datetime.strptime(results_item_3_0[0], \"%d-%m-%Y %H:%M:%S\") if results_item_3_0[0] else None\n    mcafee_ip = results_item_3_1[0] if results_item_3_1[0] else None\n        \n    # Get latest IP\n    if kaspersky_time != None and (latest_time == None or kaspersky_time > latest_time):\n        latest_time = kaspersky_time\n        latest_ip = kaspersky_ip\n    if amp_time != None and (latest_time == None or amp_time > latest_time):\n        latest_time = amp_time\n        latest_ip = amp_ip\n    if mcafee_time != None and (latest_time == None or mcafee_time > latest_time):\n        latest_time = mcafee_time\n        latest_ip = mcafee_ip\n        \n    phantom.debug(f\"latest_time: {latest_time}\")\n    phantom.debug(f\"latest_ip: {latest_ip}\")\n    \n    if latest_ip:\n        try:\n            ip = latest_ip\n            if ipaddress.ip_address(ip).is_private:\n                if ip not in private_ip_address_list:\n                    private_ip_address_list.append(ip)\n            else:\n                if ip not in public_ip_address_list:\n                    public_ip_address_list.append(ip)\n        except ValueError:\n            pass\n    \n    Extract_address_of_hostname__ListAddressExternal = public_ip_address_list\n    Extract_address_of_hostname__ListAddressInternal = private_ip_address_list\n    phantom.debug(f\"private_ip_address_list: {private_ip_address_list}\")\n    phantom.debug(f\"public_ip_address_list: {public_ip_address_list}\")\n\n",
                        "warn": false,
                        "z": 2498
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 8
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_requestURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_requestURL() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.requestURL\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_requestURL:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Check_if_requestURL_external(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out requestURL",
                        "description": "Filter out requestURL",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bc4c1234-e3de-46f6-92ea-8b73087fae60",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 734,
                        "line_start": 716,
                        "name": "filter",
                        "notes": "Filter out requestURL",
                        "number": 8,
                        "order": 22,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.requestURL",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_requestURL",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2499
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 15
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Filter_out_destinationDnsDomain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Filter_out_destinationDnsDomain() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.destinationDnsDomain\", \"!=\", \"\"],\n        ],\n        name=\"Filter_out_destinationDnsDomain:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        Check_if_destinationDnsDomain_external(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Set_last_automated_action",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Filter out destinationDnsDomain",
                        "description": "Filter out destinationDnsDomain",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bb8d7b5d-4363-4f14-98d3-92ec391c0448",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1308,
                        "line_start": 1290,
                        "name": "filter",
                        "notes": "Filter out destinationDnsDomain",
                        "number": 15,
                        "order": 38,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationDnsDomain",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Filter_out_destinationDnsDomain",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2500
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note requestURL"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_requestURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_requestURL() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['URL_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['URL_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.cef.requestURL'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"URL: `{filtered_artifacts_item_1_1[0]}`\\n\\n\"\n    content += f\"**VirusTotal URL Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream URL Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    note_title = \"URL Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_external_requestURL_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "URL Reputation TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 14,
                        "custom_callback": "",
                        "custom_code": "def Add_note_requestURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_requestURL() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['URL_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['URL_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.cef.requestURL'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"URL: `{filtered_artifacts_item_1_1[0]}`\\n\\n\"\n    content += f\"**VirusTotal URL Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream URL Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    note_title = \"URL Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_external_requestURL_artifact(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note requestURL",
                        "description": "Add note requestURL",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "df479613-d91b-45a9-8d88-a0c301275764",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1020,
                        "line_start": 965,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note requestURL",
                        "number": 10,
                        "order": 31,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.cef.requestURL"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "URL_Reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "URL_Reputation_TS:action_result.data.*.threat_type"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_requestURL",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n    \n    content = f\"URL: `{filtered_artifacts_item_1_1[0]}`\\n\\n\"\n    content += f\"**VirusTotal URL Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream URL Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    note_title = \"URL Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2502
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note destinationDns..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_destinationDnsDomain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_destinationDnsDomain() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Domain_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['Domain_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['Domain_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.cef.destinationDnsDomain'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    #content = \"Domain: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal Domain Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream Domain Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) +\"\\n\" + \"\\n\" + \"Umbrella Domain Reputation\" +\"\\n\" + \"Domain status: \" + str(results_item_3_0[0]) \n\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n            \n    content = f\"Domain: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal Domain Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream Domain Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**Umbrella Domain Reputation**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] else '-'}\"\n    \n    note_title = \"Domain Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_external_destinationDnsDomain_art(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation UBL",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Add_note_destinationDnsDomain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_destinationDnsDomain() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Domain_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['Domain_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['Domain_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.cef.destinationDnsDomain'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    #content = \"Domain: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal Domain Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream Domain Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) +\"\\n\" + \"\\n\" + \"Umbrella Domain Reputation\" +\"\\n\" + \"Domain status: \" + str(results_item_3_0[0]) \n\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n            \n    content = f\"Domain: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal Domain Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream Domain Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**Umbrella Domain Reputation**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] else '-'}\"\n    \n    note_title = \"Domain Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_external_destinationDnsDomain_art(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note destinationDnsDomain",
                        "description": "Add note destinationDnsDomain",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9a20fd03-9ed5-4eb7-9e26-ddeab4375e96",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1541,
                        "line_start": 1481,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note destinationDnsDomain",
                        "number": 19,
                        "order": 45,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.cef.destinationDnsDomain"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "Domain_Reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "Domain_Reputation_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "Domain_Reputation_UBL:action_result.summary.domain_status"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2100,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_destinationDnsDomain",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    #content = \"Domain: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal Domain Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream Domain Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) +\"\\n\" + \"\\n\" + \"Umbrella Domain Reputation\" +\"\\n\" + \"Domain status: \" + str(results_item_3_0[0]) \n\n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n            \n    content = f\"Domain: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal Domain Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream Domain Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**Umbrella Domain Reputation**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] else '-'}\"\n    \n    note_title = \"Domain Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2503
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update external request..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_external_requestURL_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_external_requestURL_artifact() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['URL_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['URL_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.cef.requestURL'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n            \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2):\n    \n        parameters = []\n\n        cef_json = {\"requestURL_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_requestURL\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "URL Reputation TS",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 14,
                        "custom_callback": "",
                        "custom_code": "def Update_external_requestURL_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_external_requestURL_artifact() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['URL_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['URL_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.id', 'filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.cef.requestURL'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n            \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2):\n    \n        parameters = []\n\n        cef_json = {\"requestURL_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_requestURL\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update external requestURL artifact",
                        "description": "Update external requestURL artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "641b24e0-be9e-44f7-9e0b-0a6442c6ef00",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1094,
                        "line_start": 1023,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update external requestURL artifact",
                        "number": 11,
                        "order": 32,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_requestURL_to_artifact_record:condition_1:artifact:*.cef.requestURL"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "URL_Reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "URL_Reputation_TS:action_result.data.*.threat_type"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "Update_external_requestURL_artifact",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n            \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2):\n    \n        parameters = []\n\n        cef_json = {\"requestURL_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_requestURL\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2505
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update external destinati..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_external_destinationDnsDomain_art(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_external_destinationDnsDomain_art() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Domain_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['Domain_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['Domain_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.cef.destinationDnsDomain'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    phantom.debug(results_item_2_0)\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    \n    phantom.debug(ts_ip_reputation_threat_type)\n    \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2) or results_item_3_0[0] == \"MALICIOUS\":\n        parameters = []\n\n        cef_json = {\"destinationDnsDomain_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationDnsDomain\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "Domain Reputation UBL",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Update_external_destinationDnsDomain_art(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_external_destinationDnsDomain_art() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['Domain_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['Domain_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['Domain_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.cef.destinationDnsDomain'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    phantom.debug(results_item_2_0)\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    \n    phantom.debug(ts_ip_reputation_threat_type)\n    \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2) or results_item_3_0[0] == \"MALICIOUS\":\n        parameters = []\n\n        cef_json = {\"destinationDnsDomain_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationDnsDomain\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update external destinationDnsDomain art",
                        "description": "Update external destinationDnsDomain artifact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8bbecafa-c1a7-41c8-aad3-07d5948f2baa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1614,
                        "line_start": 1544,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update external destinationDnsDomain artifact",
                        "number": 20,
                        "order": 46,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsDoman_to_artifac:condition_1:artifact:*.cef.destinationDnsDomain"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "Domain_Reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "Domain_Reputation_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "Domain_Reputation_UBL:action_result.summary.domain_status"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "Update_external_destinationDnsDomain_art",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    phantom.debug(results_item_2_0)\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    \n    phantom.debug(ts_ip_reputation_threat_type)\n    \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2) or results_item_3_0[0] == \"MALICIOUS\":\n        parameters = []\n\n        cef_json = {\"destinationDnsDomain_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationDnsDomain\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 2506
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Add note destinationDns..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Add_note_destinationDnsFQDN(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_destinationDnsFQDN() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['FQDN_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['FQDN_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['FQDN_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.cef.destinationDnsFQDN'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # content = \"FQDN: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal FQDN Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream FQDN Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) +\"\\n\" + \"\\n\" + \"Umbrella FQDN Reputation\" +\"\\n\" + \"FQDN status: \" + str(results_item_3_0[0]) \n    \n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n            \n    content = f\"FQDN: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal FQDN Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream FQDN Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**Umbrella FQDN Reputation**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] else '-'}\"\n    \n    note_title = \"FQDN Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_external_destinationDnsFQDN_artif(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "FQDN Reputation UBL",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Add_note_destinationDnsFQDN(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Add_note_destinationDnsFQDN() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['FQDN_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['FQDN_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['FQDN_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.cef.destinationDnsFQDN'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # content = \"FQDN: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal FQDN Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream FQDN Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) +\"\\n\" + \"\\n\" + \"Umbrella FQDN Reputation\" +\"\\n\" + \"FQDN status: \" + str(results_item_3_0[0]) \n    \n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n            \n    content = f\"FQDN: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal FQDN Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream FQDN Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**Umbrella FQDN Reputation**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] else '-'}\"\n    \n    note_title = \"FQDN Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    Update_external_destinationDnsFQDN_artif(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Add note destinationDnsFQDN",
                        "description": "Add note destinationDnsFQDN",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4622a74f-e926-475d-aa22-66b5140af3e9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2432,
                        "line_start": 2384,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Add note destinationDnsFQDN",
                        "number": 28,
                        "order": 71,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.cef.destinationDnsFQDN"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "FQDN_Reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "FQDN_Reputation_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "FQDN_Reputation_UBL:action_result.summary.domain_status"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2100,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Add_note_destinationDnsFQDN",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # content = \"FQDN: \" +  filtered_artifacts_item_1_1[0] +\"\\n\" + \"\\n\" + \"VirusTotal FQDN Reputation\" +\"\\n\" + \"Summary Malicious: \" + str(results_item_1_0[0]) +\"\\n\" + \"\\n\" + \"ThreatStream FQDN Repuation\" +\"\\n\" + \"Summary: \" + str(results_item_2_0[0]) +\"\\n\" + \"\\n\" + \"Umbrella FQDN Reputation\" +\"\\n\" + \"FQDN status: \" + str(results_item_3_0[0]) \n    \n    ts_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_reputation_threat_type and t != None:\n            ts_reputation_threat_type.append(t)\n            \n    content = f\"FQDN: {filtered_artifacts_item_1_1[0]}\\n\\n\"\n    content += f\"**VirusTotal FQDN Reputation**\\n\" \n    content += f\"- Malicious count: {results_item_1_0[0]}\\n\\n\"\n    content += f\"- Summary: {'N/A' if results_item_1_0[0] == None else 'MALICIOUS' if results_item_1_0[0] > 2 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**ThreatStream FQDN Repuation**\\n\"\n    content += f\"- Threat type: {', '.join(ts_reputation_threat_type) if ts_reputation_threat_type != [] else '-'}\\n\\n\"\n    content += f\"- Summary: {'MALICIOUS' if len(ts_reputation_threat_type) > 0 else 'NON-MALICIOUS'}\\n\\n\"\n    \n    content += f\"**Umbrella FQDN Reputation**\\n\"\n    content += f\"- Summary: {results_item_3_0[0] if results_item_3_0[0] else '-'}\"\n    \n    note_title = \"FQDN Investigation\"\n    note_content = content\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n",
                        "warn": false,
                        "z": 2509
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "Update external destinati..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Update_external_destinationDnsFQDN_artif(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_external_destinationDnsFQDN_artif() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['FQDN_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['FQDN_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['FQDN_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.cef.destinationDnsFQDN'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    phantom.debug(results_item_3_0[0])\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2) or results_item_3_0[0] == \"MALICIOUS\":\n        parameters = []\n\n        cef_json = {\"destinationDnsFQDN_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationDnsFQDN\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "FQDN Reputation UBL",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def Update_external_destinationDnsFQDN_artif(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Update_external_destinationDnsFQDN_artif() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['FQDN_Reputation_VT:action_result.summary.malicious'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['FQDN_Reputation_TS:action_result.data.*.threat_type'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['FQDN_Reputation_UBL:action_result.summary.domain_status'], action_results=results)\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.id', 'filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.cef.destinationDnsFQDN'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n    filtered_artifacts_item_1_1 = [item[1] for item in filtered_artifacts_data_1]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    phantom.debug(results_item_3_0[0])\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2) or results_item_3_0[0] == \"MALICIOUS\":\n        parameters = []\n\n        cef_json = {\"destinationDnsFQDN_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationDnsFQDN\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_filter_21(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "Update external destinationDnsFQDN artif",
                        "description": "Update external destinationDnsFQDN artif",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "17391579-34c3-4819-ae90-b155e9b66308",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 2494,
                        "line_start": 2435,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Update external destinationDnsFQDN artif",
                        "number": 29,
                        "order": 72,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "filtered-data:Link_back_destinationDnsFQDN_to_artifact:condition_1:artifact:*.cef.destinationDnsFQDN"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "FQDN_Reputation_VT:action_result.summary.malicious"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "FQDN_Reputation_TS:action_result.data.*.threat_type"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "FQDN_Reputation_UBL:action_result.summary.domain_status"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2360,
                            "y": 1420
                        },
                        "previous_function": "",
                        "previous_name": "Update_external_destinationDnsFQDN_artif",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    phantom.debug(results_item_3_0[0])\n    ts_ip_reputation_threat_type = []\n    for t in results_item_2_0:\n        if t not in ts_ip_reputation_threat_type and t != None:\n            ts_ip_reputation_threat_type.append(t)\n    \n    if ts_ip_reputation_threat_type != [] or (results_item_1_0[0] != None and results_item_1_0[0] > 2) or results_item_3_0[0] == \"MALICIOUS\":\n        parameters = []\n\n        cef_json = {\"destinationDnsFQDN_malicious\" : \"True\"}\n\n        # build parameters list for 'update_artifact_2' call\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n        })\n\n        phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationDnsFQDN\")\n\n        parameters = []\n        parameters.append({\n            'artifact_id': filtered_artifacts_item_1_0[0],\n            'add_tags': \"indicator_malicious\",\n            'remove_tags': \"\",\n        })\n\n        phantom.act(action=\"update artifact tags\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_tags\")\n\n",
                        "warn": false,
                        "z": 2510
                    }
                ]
            },
            "notes": "Inputs:\nTriggered by parent playbook.\n\nInteractions:\nPhantom, VirusTotal, Splunk, Anomali ThreatStream\n\nActions:\nFile Reputation, URL Reputation, IP Reputation, Domain Reputation, Run Query, Update artifact, Add note\nArtifacts:\nP1: Perform enrichment tasks on the indicatorsFilter out deviceHostname"
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-04-07T03:55:28.271941+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}