{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_31_to_port_19",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_21_to_port_32",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "id": "port_41_to_port_42",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_12_to_port_31",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_22_to_port_40",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "40",
                    "targetPort": "40_in"
                },
                {
                    "id": "port_42_to_port_22",
                    "sourceNode": "42",
                    "sourcePort": "42_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_19_to_port_20",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        },
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_20_to_port_16",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_9_to_port_11",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_11_to_port_39",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_39_to_port_16",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_16_to_port_21",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_30_to_port_44",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "44",
                    "targetPort": "44_in"
                },
                {
                    "id": "port_44_to_port_7",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        },
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_40_to_port_18",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_43",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "43",
                    "targetPort": "43_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_40_to_port_37",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "37",
                    "targetPort": "37_in"
                },
                {
                    "id": "port_37_to_port_8",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_8_to_port_17",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_43_to_port_2",
                    "sourceNode": "43",
                    "sourcePort": "43_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_15_to_port_29",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_32_to_port_33",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_33_to_port_30",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_8_to_port_3",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_6",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_1",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_17_to_port_4",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_4_to_port_1",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_2_to_port_5",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_1",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_32_to_port_30",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_39_to_port_30",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_7_to_port_24",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_24_to_port_1",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_12_to_port_13",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_38",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "id": "port_38_to_port_10",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_20",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_0_to_port_14",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_14_to_port_15",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_26_to_port_27",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "id": "port_27_to_port_12",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_20_to_port_9",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_36_to_port_23",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_23_to_port_25",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_25_to_port_1",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_29_to_port_28",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_28_to_port_1",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_28_to_port_26",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_33_to_port_34",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_33_to_port_35",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "id": "port_35_to_port_36",
                    "sourceNode": "35",
                    "sourcePort": "35_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "id": "port_34_to_port_36",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                }
            ],
            "hash": "8602d79ddce99139ecb51ac2736abb7bf0f4c783",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": -40,
                    "y": -320
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1040,
                    "y": 3260
                },
                "10": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "run splunk query hostname",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "run_splunk_query_hostname",
                        "id": "10",
                        "parameters": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_query_search_hostname:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "action",
                    "warnings": {},
                    "x": 160,
                    "y": 1520
                },
                "11": {
                    "customCode": "def custom_function_9(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('custom_function_9() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['get_events_2:action_result.data.*.attack_name', 'get_events_2:action_result.parameter.attacker_ip'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n\n    custom_function_9__ContainSourceAddress = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    custom_function_9__ContainSourceAddress = []\n    for item in results_item_1_0:\n        if item  == \"Deceptive Credential Usage\":\n            custom_function_9__ContainSourceAddress.append(results_item_1_1)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='custom_function_9:ContainSourceAddress', value=json.dumps(custom_function_9__ContainSourceAddress))\n    decision_8(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 9,
                        "functionName": "custom_function_9",
                        "id": "11",
                        "inputParameters": [
                            "get_events_2:action_result.data.*.attack_name",
                            "get_events_2:action_result.parameter.attacker_ip"
                        ],
                        "outputVariables": [
                            "ContainSourceAddress"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    custom_function_9__ContainSourceAddress = []\n    for item in results_item_1_0:\n        if item  == \"Deceptive Credential Usage\":\n            custom_function_9__ContainSourceAddress.append(results_item_1_1)\n\n",
                    "warnings": {},
                    "x": -400,
                    "y": 2300
                },
                "12": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_events_1:action_result.status",
                                        "value": "success"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": ">=",
                                        "param": "get_events_1:action_result.summary.total_events",
                                        "value": "3"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "decision_2",
                        "id": "12",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "decision",
                    "warnings": {},
                    "x": -80,
                    "y": 1040
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.sourceAddress_hostname",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 14,
                        "functionName": "decision_14",
                        "id": "13",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "decision",
                    "warnings": {},
                    "x": 160,
                    "y": 1040
                },
                "14": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 15,
                        "functionName": "decision_15",
                        "id": "14",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "decision",
                    "warnings": {},
                    "x": -80,
                    "y": -140
                },
                "15": {
                    "data": {
                        "action": "get events",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Attivo",
                        "connectorConfigs": [
                            "attivo-csoc"
                        ],
                        "connectorId": "efe238aa-d76b-43b8-bc4d-476c7dbcc72e",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_events_1",
                        "id": "15",
                        "parameters": {
                            "attacker_ip": "artifact:*.cef.sourceAddress",
                            "hours_back": "2",
                            "severity": "High"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "severity"
                            },
                            {
                                "data_type": "numeric",
                                "field": "hours_back"
                            },
                            {
                                "data_type": "string",
                                "field": "attacker_ip"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "action",
                    "warnings": {},
                    "x": -80,
                    "y": 40
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "run_query_search_splunk_event",
                                "run_splunk_query_hostname",
                                "get_events_2"
                            ]
                        },
                        "functionId": 2,
                        "functionName": "promote_to_case_set_status_2",
                        "id": "16",
                        "type": "utility",
                        "utilities": {
                            "promote": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "templates",
                                        "description": "",
                                        "label": "template",
                                        "name": "template",
                                        "placeholder": "Select a template",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "promote to case",
                                "name": "promote",
                                "refreshNotableData": true
                            },
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "promote": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "template": "KTB Workbook"
                            },
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "in progress"
                            }
                        }
                    },
                    "errors": {},
                    "id": "16",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 320,
                    "y": 2180
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "set_status_add_note_6",
                        "id": "17",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            },
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Address Contain Successfully",
                                "note_format": "markdown",
                                "title": "Note from Automate Playbook"
                            },
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "resolved"
                            }
                        }
                    },
                    "errors": {},
                    "id": "17",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 520,
                    "y": 2700
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "format unsuccessful request",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "check_before_contain_ise"
                            ],
                            "separator": ", "
                        },
                        "functionId": 7,
                        "functionName": "format_unsuccessful_request",
                        "id": "18",
                        "parameters": [
                            "container:name",
                            "container:id",
                            "artifact:*.cef.sourceAddress_QueryFrom"
                        ],
                        "template": "This is an automated message to inform you of the containment approval is denied or timer expired (30 minutes)\n\nCase Name: {0}\nCase ID: {1}\nContain Point: {2}\n\nManual action required. Please do not respond to this message.",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "warnings": {},
                    "x": 1480,
                    "y": 2300
                },
                "19": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run query search splunk event",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_search_splunk_event",
                        "id": "19",
                        "parameters": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_query_search_splunk_event:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "action",
                    "warnings": {},
                    "x": -80,
                    "y": 1520
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 8,
                        "functionName": "add_note_8",
                        "id": "2",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_unsuccessful_request:formatted_data",
                                "note_format": "markdown",
                                "title": "Note from Automate Playbook"
                            }
                        }
                    },
                    "errors": {},
                    "id": "2",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1480,
                    "y": 2740
                },
                "20": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">=",
                                        "param": "run_query_search_splunk_event:action_result.summary.total_events",
                                        "value": "1"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": ">=",
                                        "param": "run_splunk_query_hostname:action_result.summary.total_events",
                                        "value": "1"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": ">=",
                                        "param": "run_query_search_splunk_event:action_result.summary.total_events",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": ">=",
                                        "param": "run_splunk_query_hostname:action_result.summary.total_events",
                                        "value": "2"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "or",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 6,
                        "functionName": "decision_6",
                        "id": "20",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "decision",
                    "warnings": {},
                    "x": 40,
                    "y": 1860
                },
                "21": {
                    "customCode": "def check_critical_and_no_contain_list(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('check_critical_and_no_contain_list() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.sourceAddress', 'artifact:*.id'])\n    container_item_0 = [item[0] for item in container_data]\n\n    check_critical_and_no_contain_list__InNoContainList = None\n    check_critical_and_no_contain_list__InCriticalList = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    checknocontainlist = 0\n    checkcriticallist = 0\n\t\n    success, message, nocontainmentlist = phantom.get_list(list_name='nocontainmentlist')\n    success, message, criticallist = phantom.get_list(list_name='Servers and Critical desktops')\n    phantom.debug(container_item_0)\n    phantom.debug(nocontainmentlist)\n    phantom.debug(criticallist)\n    if nocontainmentlist is not None:\n        for item in container_item_0:\n            if not any(item in device for device in nocontainmentlist):\n                checknocontainlist = 0\n            else:\n                checknocontainlist = 1\n\n    if criticallist is not None:        \n        for item in container_item_0:\n            if not any(item in device for device in criticallist):\n                checkcriticallist = 0\n            else:\n                checkcriticallist = 1\n                \n    check_critical_and_no_contain_list__InNoContainList = checknocontainlist\n    check_critical_and_no_contain_list__InCriticalList = checkcriticallist\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='check_critical_and_no_contain_list:InNoContainList', value=json.dumps(check_critical_and_no_contain_list__InNoContainList))\n    phantom.save_run_data(key='check_critical_and_no_contain_list:InCriticalList', value=json.dumps(check_critical_and_no_contain_list__InCriticalList))\n    decision_4(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "check critical and no contain list",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "check_critical_and_no_contain_list",
                        "id": "21",
                        "inputParameters": [
                            "artifact:*.cef.sourceAddress"
                        ],
                        "outputVariables": [
                            "InNoContainList",
                            "InCriticalList"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    checknocontainlist = 0\n    checkcriticallist = 0\n\t\n    success, message, nocontainmentlist = phantom.get_list(list_name='nocontainmentlist')\n    success, message, criticallist = phantom.get_list(list_name='Servers and Critical desktops')\n    phantom.debug(container_item_0)\n    phantom.debug(nocontainmentlist)\n    phantom.debug(criticallist)\n    if nocontainmentlist is not None:\n        for item in container_item_0:\n            if not any(item in device for device in nocontainmentlist):\n                checknocontainlist = 0\n            else:\n                checknocontainlist = 1\n\n    if criticallist is not None:        \n        for item in container_item_0:\n            if not any(item in device for device in criticallist):\n                checkcriticallist = 0\n            else:\n                checkcriticallist = 1\n                \n    check_critical_and_no_contain_list__InNoContainList = checknocontainlist\n    check_critical_and_no_contain_list__InCriticalList = checkcriticallist\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################\n    ############################################################",
                    "warnings": {},
                    "x": 760,
                    "y": 780
                },
                "22": {
                    "data": {
                        "advanced": {
                            "customName": "Check Before Contain ISE",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "approver": {
                            "type": "role",
                            "value": "CSOC Manager"
                        },
                        "functionId": 1,
                        "functionName": "check_before_contain_ise",
                        "id": "22",
                        "message": "***WARNING*** \nDo you want to proceed with containment?\n\nAttacker Info:\nSource Address = {0}",
                        "parameters": [
                            "artifact:*.cef.sourceAddress"
                        ],
                        "responseTime": 30.0,
                        "responses": [
                            {
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {
                        "responses": [
                            {
                                "responsePrompt": "Questions cannot be empty."
                            }
                        ]
                    },
                    "id": "22",
                    "type": "prompt",
                    "warnings": {},
                    "x": 760,
                    "y": 1840
                },
                "23": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 11,
                        "functionName": "add_note_11",
                        "id": "23",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_contain_note:formatted_data",
                                "note_format": "markdown",
                                "title": ""
                            }
                        }
                    },
                    "errors": {},
                    "id": "23",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1600,
                    "y": 1860
                },
                "24": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_4",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 4,
                        "functionName": "cf_local_set_last_automated_action_4",
                        "id": "24",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Enriched"
                            }
                        }
                    },
                    "errors": {},
                    "id": "24",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1160,
                    "y": 2960
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_5",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 5,
                        "functionName": "cf_local_set_last_automated_action_5",
                        "id": "25",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Enriched"
                            }
                        }
                    },
                    "errors": {},
                    "id": "25",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1720,
                    "y": 2960
                },
                "26": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_PLAYBOOK_ENRICH_INDICATOR_ALL_01_1",
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_PLAYBOOK_ENRICH_INDICATOR_ALL_01_1",
                        "id": "26",
                        "inputs": {},
                        "playbookName": "PLAYBOOK-ENRICH-INDICATOR-ALL-01_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "playbook",
                    "warnings": {},
                    "x": -80,
                    "y": 540
                },
                "27": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 9,
                        "functionName": "set_status_9",
                        "id": "27",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "open"
                            }
                        }
                    },
                    "errors": {},
                    "id": "27",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": -80,
                    "y": 780
                },
                "28": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "container:status",
                                        "value": "closed"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 16,
                        "functionName": "decision_16",
                        "id": "28",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "28",
                    "type": "decision",
                    "warnings": {},
                    "x": 200,
                    "y": 520
                },
                "29": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_Triage_Playbook_for_Generic_Label_1",
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_triage_playbook_for_generic_label_1",
                        "id": "29",
                        "inputs": {},
                        "playbookName": "KTB Triage Playbook for Generic Label_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "playbook",
                    "warnings": {},
                    "x": -80,
                    "y": 280
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 7,
                        "functionName": "add_note_7",
                        "id": "3",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Internal Address contain  unsuccessful. Manual actionrequired.",
                                "note_format": "markdown",
                                "title": "Note from Automate Playbook"
                            }
                        }
                    },
                    "errors": {},
                    "id": "3",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 840,
                    "y": 2700
                },
                "30": {
                    "data": {
                        "advanced": {
                            "customName": "format no contain point found",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "run_query_search_splunk_event",
                                "get_events_2"
                            ],
                            "separator": ", "
                        },
                        "functionId": 5,
                        "functionName": "format_no_contain_point_found",
                        "id": "30",
                        "parameters": [
                            "get_events_1:action_result.data.*.attack_name",
                            "get_events_1:action_result.data.*.target_ip",
                            "get_events_1:action_result.data.*.severity",
                            "get_events_1:action_result.data.*.target_os",
                            "get_events_1:action_result.data.*.timestamp",
                            "get_events_1:action_result.parameter.attacker_ip",
                            "get_events_1:action_result.parameter.hours_back",
                            "container:id",
                            "container:name"
                        ],
                        "template": "Detail of Attack:\nEvent ID: {7}\nEvent Name: {8}\nSource IP: {5}\nTime Period: {6} hour(s)\n\nAction: No Contain Point Found. Further  investigation recommended.\n\n%%\n###\nAttack name:{0}\nTarget IP: {1}\nSeverity: {2}\nTarget OS: {3}\nTimestamp: {4}\n\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "format",
                    "warnings": {},
                    "x": 1560,
                    "y": 840
                },
                "31": {
                    "data": {
                        "advanced": {
                            "customName": "Format query search splunk event",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 3,
                        "functionName": "format_query_search_splunk_event",
                        "id": "31",
                        "parameters": [
                            "artifact:*.cef.sourceAddress"
                        ],
                        "template": "index=phantom_container name=\"*{0}*\" container_label!=attivo earliest=-2d@d latest=now | dedup id",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "format",
                    "warnings": {},
                    "x": -80,
                    "y": 1260
                },
                "32": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "check_critical_and_no_contain_list:custom_function:InNoContainList",
                                        "value": "0"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "check_critical_and_no_contain_list:custom_function:InCriticalList",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "decision_4",
                        "id": "32",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "decision",
                    "warnings": {},
                    "x": 840,
                    "y": 1100
                },
                "33": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.sourceAddress_QueryFrom",
                                        "value": "ISE"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "artifact:*.cef.sourceAddress_QueryFrom",
                                        "value": "AMP"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 12,
                        "functionName": "decision_12",
                        "id": "33",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "33",
                    "type": "decision",
                    "warnings": {},
                    "x": 1720,
                    "y": 1160
                },
                "34": {
                    "data": {
                        "advanced": {
                            "customName": "tag amp contain",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 12,
                        "functionName": "tag_amp_contain",
                        "id": "34",
                        "type": "utility",
                        "utilities": {
                            "add_tags": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "tags",
                                        "description": "",
                                        "label": "tag",
                                        "name": "tags",
                                        "placeholder": "Enter a tag",
                                        "renderType": "combobox",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add tag",
                                "name": "add_tags",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "add_tags": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "tags": "amp_contain"
                            }
                        }
                    },
                    "errors": {},
                    "id": "34",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1480,
                    "y": 1300
                },
                "35": {
                    "data": {
                        "advanced": {
                            "customName": "tag ise contain",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 13,
                        "functionName": "tag_ise_contain",
                        "id": "35",
                        "type": "utility",
                        "utilities": {
                            "add_tags": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "tags",
                                        "description": "",
                                        "label": "tag",
                                        "name": "tags",
                                        "placeholder": "Enter a tag",
                                        "renderType": "combobox",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add tag",
                                "name": "add_tags",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "add_tags": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "tags": "ise_contain"
                            }
                        }
                    },
                    "errors": {},
                    "id": "35",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1720,
                    "y": 1300
                },
                "36": {
                    "data": {
                        "advanced": {
                            "customName": "format contain note",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 9,
                        "functionName": "format_contain_note",
                        "id": "36",
                        "parameters": [
                            "container:name",
                            "artifact:*.cef.sourceAddress_QueryFrom",
                            "artifact:*.cef.sourceAddress"
                        ],
                        "template": "This is an automated message to inform you the IOC detected in incident. (No automatic containment is executed by the playbook). \n\nCase Name: {0}\nContain Point: {1}\nContain IOC: {2}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "36",
                    "type": "format",
                    "warnings": {},
                    "x": 1600,
                    "y": 1580
                },
                "37": {
                    "data": {
                        "advanced": {
                            "customName": "playbook_local_KTB_CONTAIN_INTERNAL_IP_1",
                            "join": [],
                            "notRequiredJoins": [
                                "check_before_contain_ise"
                            ]
                        },
                        "functionId": 1,
                        "functionName": "playbook_local_ktb_contain_internal_ip_1",
                        "id": "37",
                        "inputs": {},
                        "playbookName": "KTB CONTAIN INTERNAL IP_modern",
                        "playbookRepo": 3,
                        "playbookRepoName": "mfec_csoc_playbook",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "37",
                    "type": "playbook",
                    "warnings": {},
                    "x": 680,
                    "y": 2320
                },
                "38": {
                    "data": {
                        "advanced": {
                            "customName": "format query search hostname",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 8,
                        "functionName": "format_query_search_hostname",
                        "id": "38",
                        "parameters": [
                            "artifact:*.cef.sourceAddress_hostname"
                        ],
                        "template": "index=phantom_container name=\"*{0}*\" container_label!=attivo earliest=-2d@d latest=now  | dedup id",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "38",
                    "type": "format",
                    "warnings": {},
                    "x": 160,
                    "y": 1260
                },
                "39": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "custom_function_9:custom_function:ContainSourceAddress",
                                        "value": "[]"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 8,
                        "functionName": "decision_8",
                        "id": "39",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "39",
                    "type": "decision",
                    "warnings": {},
                    "x": 80,
                    "y": 2040
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_2",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 2,
                        "functionName": "cf_local_set_last_automated_action_2",
                        "id": "4",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Resolved"
                            }
                        }
                    },
                    "errors": {},
                    "id": "4",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 520,
                    "y": 2960
                },
                "40": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "check_before_contain_ise:action_result.status",
                                        "value": "success"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "check_before_contain_ise:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "check_before_contain_ise:action_result.status",
                                        "value": "success"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "check_before_contain_ise:action_result.summary.responses.0",
                                        "value": "No"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 5,
                        "functionName": "decision_5",
                        "id": "40",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "40",
                    "type": "decision",
                    "warnings": {},
                    "x": 760,
                    "y": 2080
                },
                "41": {
                    "data": {
                        "advanced": {
                            "customName": "format contain email",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 4,
                        "functionName": "format_contain_email",
                        "id": "41",
                        "parameters": [
                            "container:name",
                            "container:owner_name",
                            "artifact:*.cef.sourceAddress_QueryFrom"
                        ],
                        "template": "This is an automated message to inform you of the containment approval request in phantom, please login phantom and approve.\n\nCase Name: {0}\nCase Owner: {1}\nContain Point: {2}\n\nPlease do not respond to this message.",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "41",
                    "type": "format",
                    "warnings": {},
                    "x": 1080,
                    "y": 1680
                },
                "42": {
                    "data": {
                        "action": "send email",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "send email 2",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "SMTP",
                        "connectorConfigs": [
                            "smtp asset"
                        ],
                        "connectorId": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "send_email_2",
                        "id": "42",
                        "parameters": {
                            "attachments": "",
                            "bcc": "",
                            "body": "format_contain_email:formatted_data",
                            "cc": "",
                            "from": "no-reply-phantom@ktbcs.co.th",
                            "headers": "",
                            "subject": "SOAR - Containment Approval Needed - Notification",
                            "to": "csoc.mdr@ktcs.co.th"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "to"
                            },
                            {
                                "data_type": "string",
                                "field": "body"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "42",
                    "type": "action",
                    "warnings": {},
                    "x": 1080,
                    "y": 1920
                },
                "43": {
                    "data": {
                        "action": "send email",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "send email6",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "SMTP",
                        "connectorConfigs": [
                            "smtp asset"
                        ],
                        "connectorId": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "connectorVersion": "v1",
                        "functionId": 5,
                        "functionName": "send_email6",
                        "id": "43",
                        "parameters": {
                            "attachments": "",
                            "bcc": "",
                            "body": "format_unsuccessful_request:formatted_data",
                            "cc": "",
                            "from": "no-reply-phantom@ktbcs.co.th",
                            "headers": "",
                            "subject": "SOAR - Containment Approval Unsuccessful - Notification",
                            "to": "csoc.mdr@ktcs.co.th"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "to"
                            },
                            {
                                "data_type": "string",
                                "field": "body"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "43",
                    "type": "action",
                    "warnings": {},
                    "x": 1480,
                    "y": 2520
                },
                "44": {
                    "data": {
                        "action": "send email",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "send email 4",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "SMTP",
                        "connectorConfigs": [
                            "smtp asset"
                        ],
                        "connectorId": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "send_email_4",
                        "id": "44",
                        "parameters": {
                            "attachments": "",
                            "bcc": "",
                            "body": "format_no_contain_point_found:formatted_data",
                            "cc": "",
                            "from": "no-reply-phantom@ktbcs.co.th",
                            "headers": "",
                            "subject": "SOAR - Attivo Deception Notification",
                            "to": "csoc.mdr@ktcs.co.th"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "to"
                            },
                            {
                                "data_type": "string",
                                "field": "body"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "44",
                    "type": "action",
                    "warnings": {},
                    "x": 1360,
                    "y": 1580
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_3",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 3,
                        "functionName": "cf_local_set_last_automated_action_3",
                        "id": "5",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Containment Approval Rejected"
                            }
                        }
                    },
                    "errors": {},
                    "id": "5",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1480,
                    "y": 2960
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_Set_last_automated_action_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "Set_last_automated_action",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_set_last_automated_action_1",
                        "id": "6",
                        "type": "utility",
                        "utilities": {
                            "Set_last_automated_action": {
                                "description": "set custom field last_automated_action",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "Container_id",
                                        "name": "Container_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "a_status",
                                        "name": "a_status",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_last_automated_action",
                                "name": "set_last_automated_action"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "Set_last_automated_action": {
                                "Container_id": "container:id",
                                "a_status": "Containment Failed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "6",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 840,
                    "y": 2960
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "add_note_5",
                        "id": "7",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_no_contain_point_found:formatted_data",
                                "note_format": "markdown",
                                "title": "Note from Automation Playbook"
                            }
                        }
                    },
                    "errors": {},
                    "id": "7",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1360,
                    "y": 1860
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.sourceAddress_ContainResult",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 11,
                        "functionName": "decision_11",
                        "id": "8",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "decision",
                    "warnings": {},
                    "x": 680,
                    "y": 2560
                },
                "9": {
                    "data": {
                        "action": "get events",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Attivo",
                        "connectorConfigs": [
                            "attivo-csoc"
                        ],
                        "connectorId": "efe238aa-d76b-43b8-bc4d-476c7dbcc72e",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "get_events_2",
                        "id": "9",
                        "parameters": {
                            "attacker_ip": "artifact:*.cef.sourceAddress",
                            "hours_back": "72",
                            "severity": "Very High"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "severity"
                            },
                            {
                                "data_type": "numeric",
                                "field": "hours_back"
                            },
                            {
                                "data_type": "string",
                                "field": "attacker_ip"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "action",
                    "warnings": {},
                    "x": -400,
                    "y": 2040
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 230,
                "playbook_name": "PLAYBOOK-INVESTIGATE-ALERT-ATTIVO-01",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.1.1.211"
    },
    "create_time": "2025-03-27T15:21:05.046035+00:00",
    "draft_mode": false,
    "labels": [
        "attivo"
    ],
    "tags": []
}