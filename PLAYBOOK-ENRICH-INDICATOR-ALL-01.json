{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "hash": "8199fb0260aa20e61527ce8e56a4289ed19e70e1",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3d05a3b9-831b-4fad-b2dc-81e02c3ed933",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8fb04e4f-65c2-4d05-adbe-9b8e28a9d6dc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6ea61f98-6262-4dec-b678-7245a6d964e1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 113
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bea4df05-682a-47d8-8117-c92e36e3a884",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a76dada7-2336-48bc-93d1-3d69920a5f97",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "dbe31fc7-cc3d-4fe5-b241-38e187a80d5f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 329
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "84ffd55d-a27c-485a-9133-f80422e43dfe",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "dbe31fc7-cc3d-4fe5-b241-38e187a80d5f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1a48bc93-3b09-44c9-820d-9dd5f747a1f1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 357
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d7a35403-eec4-42fa-a2b9-ad10bb9b3106",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1a48bc93-3b09-44c9-820d-9dd5f747a1f1",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c72cece3-522f-4989-ad41-2d4a349e6451",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 359
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0557314c-b4e0-4a83-96fb-6ed0f1d3b66b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "51497a66-d927-4776-aac6-e53260c3d403",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a8dd6efb-543b-4a6f-9ed3-765c79c18b1a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 365
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a5e0f26b-608e-44e2-abaf-e9b3eb10546c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a8dd6efb-543b-4a6f-9ed3-765c79c18b1a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "80654ae4-1834-44ce-988e-dc0497ad87e3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 379
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4da98922-9ba9-4c29-86b9-6be004402479",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "80654ae4-1834-44ce-988e-dc0497ad87e3",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "61a02671-3d48-4a34-a795-7fcacb60358f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 382
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "76de28dc-54c1-40c6-a58f-8c335114337a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "61a02671-3d48-4a34-a795-7fcacb60358f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "164bb59d-7627-4947-9040-b939e13c33a9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 454
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "682f7abc-3e0d-425d-a85a-c4d9b6fde986",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "edf53aac-8b98-459f-b594-a3eedd726de4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cef7d5af-c32d-454d-9fcf-6cf148e95c06",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 479
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "eb77bc5e-2f0a-424e-807e-f9abfb34c2cf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cef7d5af-c32d-454d-9fcf-6cf148e95c06",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 483
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f538bc07-788a-49fe-b6c4-7876ba90f31e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c72cece3-522f-4989-ad41-2d4a349e6451",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 501
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "288bc4ad-3c2d-4d6d-a65f-8f4285f7e191",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "164bb59d-7627-4947-9040-b939e13c33a9",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ef19afa9-41e5-4451-bb1c-d9f89ec696bc",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 562
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0ddcaac9-7d41-4ac9-9c18-573c9a3a68ec",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "164bb59d-7627-4947-9040-b939e13c33a9",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a76dada7-2336-48bc-93d1-3d69920a5f97",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 566
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "49094f24-f6da-47f6-8086-a3b5c07f243b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "164bb59d-7627-4947-9040-b939e13c33a9",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "edf53aac-8b98-459f-b594-a3eedd726de4",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 568
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9fa301e6-9ce5-4ecd-82eb-d3f515e883ad",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8fb04e4f-65c2-4d05-adbe-9b8e28a9d6dc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9c8339db-5891-401c-8b4d-367f2984c0d1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 571
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6ab4c1c0-f9cb-4533-be4d-c8369e42d256",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d7a1ce12-60b8-48c6-8a38-ffe0fc0db557",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "db229a65-ba50-456b-9c28-7738ff838f43",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 582
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dbf34dfb-975f-492e-be0c-71a656863194",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9c8339db-5891-401c-8b4d-367f2984c0d1",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2982a163-6c32-4920-8916-e55944a6cfd2",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 607
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fa105169-1081-4055-8e0d-450a5cb22b71",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2982a163-6c32-4920-8916-e55944a6cfd2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d7a1ce12-60b8-48c6-8a38-ffe0fc0db557",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 608
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "efb46b58-291c-4e6d-b2bc-197638d79705",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "db229a65-ba50-456b-9c28-7738ff838f43",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 617
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'decision_2' block\n    decision_2(container=container)\n\n    # call 'decision_7' block\n    decision_7(container=container)\n\n    # call 'decision_8' block\n    decision_8(container=container)\n\n    # call 'decision_10' block\n    decision_10(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8fb04e4f-65c2-4d05-adbe-9b8e28a9d6dc",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 24,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 635
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dfb4e5ed-6c1a-497d-be7e-4153e1378930",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8fb04e4f-65c2-4d05-adbe-9b8e28a9d6dc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f37e6edc-4acc-4c4d-b04f-b2c7fd9f26d5",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 662
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c6ceb237-0bc7-4c39-bd69-81a2f3d8e914",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f37e6edc-4acc-4c4d-b04f-b2c7fd9f26d5",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "90002f4e-d554-4338-a2c8-ff955e9b4362",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 669
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ed275074-82b1-4531-9704-049b9884f9a7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "90002f4e-d554-4338-a2c8-ff955e9b4362",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4a693847-ea71-4d40-a9e3-3fb385440a2a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 674
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "466bbacb-091b-4594-95d7-b12cad6dd36d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4a693847-ea71-4d40-a9e3-3fb385440a2a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fd6fe128-c3a7-4b1d-9514-f97bc198505a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 688
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "25e951f4-b55c-48aa-9767-c4d84a31a448",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fd6fe128-c3a7-4b1d-9514-f97bc198505a",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c849e74f-5939-4014-ac0e-3edf5ec88917",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 694
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5871765c-0760-45bc-8a92-d1cd99d7aaa5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8fb04e4f-65c2-4d05-adbe-9b8e28a9d6dc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "547883d7-9bb5-4786-8ca1-f16c5634d522",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 699
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 8
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_8(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_8() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.destinationAddress\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        for_amp_query_dst_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f37e6edc-4acc-4c4d-b04f-b2c7fd9f26d5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 612,
                        "line_start": 595,
                        "name": "decision",
                        "notes": "",
                        "number": 8,
                        "order": 20,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationAddress",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "decision_8",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 701
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c2875d09-5756-4053-8a2d-42613522d337",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c849e74f-5939-4014-ac0e-3edf5ec88917",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e0cd0a54-9b47-45c0-937a-15b43cf272e4",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 717
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2f533906-0962-4569-b73f-2672271bd31e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e0cd0a54-9b47-45c0-937a-15b43cf272e4",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7c278302-bc8a-4f1e-99e4-b79f26dbbb58",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 725
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "69ccd306-0ed8-4a22-85a0-0f8871dc3886",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "790c8834-1d51-437a-8195-f65c6080001f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 746
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c206c2f7-246b-42fb-9e6b-e2050482c37b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e0cd0a54-9b47-45c0-937a-15b43cf272e4",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cb3ce126-c985-49b5-b48e-d12b6aec5f4e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 748
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cd401b39-47df-4d69-82e3-8432866a77a4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cb3ce126-c985-49b5-b48e-d12b6aec5f4e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9eb23782-d25e-4982-bb58-dd0b1cd4b198",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 755
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4ba93e4d-60c1-4694-922b-dff958669dc0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9eb23782-d25e-4982-bb58-dd0b1cd4b198",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 759
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "54bb2d39-e214-4f5c-b4c2-2c29ea806041",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e0cd0a54-9b47-45c0-937a-15b43cf272e4",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c6334eea-32be-4197-9dc2-267c97023d05",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 768
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "aa32b7a2-4f10-416e-b4c6-e24a04e9ed52",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c6334eea-32be-4197-9dc2-267c97023d05",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d3ea4711-c3c5-4492-bd30-38b125c5a792",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 772
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "39d6f3af-531b-41dd-8e7c-b6684e9c4dc8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d3ea4711-c3c5-4492-bd30-38b125c5a792",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7d5b4703-c9dc-4cd9-b165-374917727d08",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 778
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5844c116-e61f-44d6-9929-a7abbf364aad",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7d5b4703-c9dc-4cd9-b165-374917727d08",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "43fe5ae9-ea9a-4f99-914a-93841d1948d1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 780
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "34646f6a-7ddc-4303-a5e9-c3278eb2a3be",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "43fe5ae9-ea9a-4f99-914a-93841d1948d1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 782
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_4() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_amp_event_data_src_ip:action_result.status\", \"==\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        count_guid_src_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "80654ae4-1834-44ce-988e-dc0497ad87e3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 318,
                        "line_start": 300,
                        "name": "decision",
                        "notes": "",
                        "number": 4,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "get_amp_event_data_src_ip:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 800,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "decision_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 818
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip, run ISE query src IP, run query against 3 ad, run dst user query, get amp event data dst ip, run ISE query dst IP, run kaspersky query, run mcafee query, run amp query, run kaspersky query, run mcafee query, run amp query, run ISE query kaspersky, run src user query, run amp user query, run mcafee user query, run kaspersky user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1985,
                        "line_start": 1972,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 75,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 3000,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 822
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 7
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_7() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.destinationUserName\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        format_user_AD_query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9c8339db-5891-401c-8b4d-367f2984c0d1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 404,
                        "line_start": 387,
                        "name": "decision",
                        "notes": "",
                        "number": 7,
                        "order": 16,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationUserName",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "decision_7",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 838
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6b0a93b9-3953-43a5-b428-bd27701a29d1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "547883d7-9bb5-4786-8ca1-f16c5634d522",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca86f61d-1202-4413-9fbe-ebd0bdbae8f8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 860
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2764e1f2-4623-42a8-bb65-feca88399c5e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ca86f61d-1202-4413-9fbe-ebd0bdbae8f8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3f1fed7a-e1b2-4024-bcee-93d72d514092",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 863
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "for amp query dst ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def for_amp_query_dst_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('for_amp_query_dst_ip() called')\n    \n    template = \"\"\"/v1/computers?internal_ip={0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"for_amp_query_dst_ip\", separator=\", \")\n\n    get_amp_event_data_dst_ip(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "for amp query dst ip",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "90002f4e-d554-4338-a2c8-ff955e9b4362",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 628,
                        "line_start": 612,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 14,
                        "order": 21,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "for_amp_query_dst_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "/v1/computers?internal_ip={0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 870
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 11
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_11(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_11() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"count_guid_dst_ip:custom_function:connector_guid_count\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        get_device_info_dst_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"count_guid_dst_ip:custom_function:connector_guid_count\", \">\", 1],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        format_multiple_guid_dst_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 3\n    format_ISE_query_dst_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e0cd0a54-9b47-45c0-937a-15b43cf272e4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 754,
                        "line_start": 720,
                        "name": "decision",
                        "notes": "",
                        "number": 11,
                        "order": 26,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "count_guid_dst_ip:custom_function:connector_guid_count",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "count_guid_dst_ip:custom_function:connector_guid_count",
                                        "value": "1"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": -120
                        },
                        "previous_function": "",
                        "previous_name": "decision_11",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 880
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format user AD query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_user_AD_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_user_AD_query() called')\n    \n    template = \"\"\"(&(|(samaccountname={0})(userprincipalname={0}))(objectclass=user))\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationUserName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_user_AD_query\", separator=\", \")\n\n    run_query_against_3_ad(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format user AD query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2982a163-6c32-4920-8916-e55944a6cfd2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 420,
                        "line_start": 404,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 13,
                        "order": 17,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationUserName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "format_user_AD_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "(&(|(samaccountname={0})(userprincipalname={0}))(objectclass=user))",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 882
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "51588405-43a5-4aa0-9b01-b036a5405526",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "547883d7-9bb5-4786-8ca1-f16c5634d522",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1ad2e329-5b53-4946-8660-c5371fb81356",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 888
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a3eab5a7-06be-4e53-9657-5cfbfd95ae63",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "547883d7-9bb5-4786-8ca1-f16c5634d522",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "53c7023a-cf12-4f04-b43a-b94fa4821732",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 891
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "148a9ba9-0f82-4422-9f8c-00c9a0464789",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1ad2e329-5b53-4946-8660-c5371fb81356",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ccce3b69-1be9-4804-84d9-95d1d07561b8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 897
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1914c6cc-b4de-493d-9fc8-b078acd7a546",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "53c7023a-cf12-4f04-b43a-b94fa4821732",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9b93f576-2737-4416-8fb2-acf6a0410205",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 899
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 9
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_9(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_9() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"get_amp_event_data_dst_ip:action_result.status\", \"==\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        count_guid_dst_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fd6fe128-c3a7-4b1d-9514-f97bc198505a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 665,
                        "line_start": 647,
                        "name": "decision",
                        "notes": "",
                        "number": 9,
                        "order": 23,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "get_amp_event_data_dst_ip:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 800,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "decision_9",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 912
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format mcafee query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_mcafee_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_mcafee_query() called')\n    \n    template = \"\"\"earliest = -7d@d index=ktb_mgmt_default sourcetype=\\\"mcafee:epo\\\" dest_dns={0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\\\"%d-%m-%Y %H:%M:%S\\\" ctime(time) AS time\n| table time,dest_dns ,dest_ip,dest_mac,os,sp\n| dedup dest_dns ,dest_ip\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationHostName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_mcafee_query\", separator=\", \")\n\n    run_mcafee_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format mcafee query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "53c7023a-cf12-4f04-b43a-b94fa4821732",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1120,
                        "line_start": 1099,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 20,
                        "order": 39,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "format_mcafee_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "earliest = -7d@d index=ktb_mgmt_default sourcetype=\"mcafee:epo\" dest_dns={0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\"%d-%m-%Y %H:%M:%S\" ctime(time) AS time\n| table time,dest_dns ,dest_ip,dest_mac,os,sp\n| dedup dest_dns ,dest_ip",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 943
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6e187b8f-3874-4801-89aa-c13bd16b008d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3f1fed7a-e1b2-4024-bcee-93d72d514092",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6bda67fb-8205-4c14-9b56-7c9e61dd9d79",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 944
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3f060114-7953-4106-bf92-25cc878d170c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9b93f576-2737-4416-8fb2-acf6a0410205",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6bda67fb-8205-4c14-9b56-7c9e61dd9d79",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 945
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f0d63ef3-fd3a-4991-84dd-39434698eeeb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ccce3b69-1be9-4804-84d9-95d1d07561b8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6bda67fb-8205-4c14-9b56-7c9e61dd9d79",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 946
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "770b9aab-b13b-49f7-820b-b49125a92f2a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6bda67fb-8205-4c14-9b56-7c9e61dd9d79",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a4a5882b-aac3-4acf-9c72-3f8f42145fbd",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 955
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format amp query ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_amp_query_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_amp_query_ip() called')\n    \n    template = \"\"\"/v1/computers?internal_ip={0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.sourceAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_amp_query_ip\", separator=\", \")\n\n    get_amp_event_data_src_ip(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format amp query ip",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "51497a66-d927-4776-aac6-e53260c3d403",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 244,
                        "line_start": 228,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 11,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "format_amp_query_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "/v1/computers?internal_ip={0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 957
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bf0b0dc6-3747-4121-af53-767163170245",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a4a5882b-aac3-4acf-9c72-3f8f42145fbd",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "83e5c79b-84c5-45ab-bcf3-2d74ff9df352",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 958
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "97f9ddd4-7413-41ea-bc10-71e70b54c31a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "83e5c79b-84c5-45ab-bcf3-2d74ff9df352",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fc3a3f9a-3265-44e8-a071-88df5ba0ee47",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 963
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "11dbfc7d-1999-407a-8b6e-eb76675485e6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a4a5882b-aac3-4acf-9c72-3f8f42145fbd",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "88fa283e-15bb-4645-a81f-5954ee0e5be9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 966
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format multiple guid dst i..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_multiple_guid_dst_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_multiple_guid_dst_ip() called')\n    \n    template = \"\"\"{0} below endpoint guid found using same active IP {2}\n\n%%\n{1}\n\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"count_guid_dst_ip:custom_function:connector_guid_count\",\n        \"count_guid_dst_ip:custom_function:connector_guid\",\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_multiple_guid_dst_ip\", separator=\", \")\n\n    add_note_3(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format multiple guid dst ip",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cb3ce126-c985-49b5-b48e-d12b6aec5f4e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 852,
                        "line_start": 829,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 16,
                        "order": 29,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "count_guid_dst_ip:custom_function:connector_guid_count"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "count_guid_dst_ip:custom_function:connector_guid"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "format_multiple_guid_dst_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "{0} below endpoint guid found using same active IP {2}\n\n%%\n{1}\n\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 969
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f3fa6257-1265-4ccc-a929-5fcd0ac9e34a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a4a5882b-aac3-4acf-9c72-3f8f42145fbd",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1402254d-be91-45fc-91e5-67a7e4ee0109",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 971
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "00acef8a-40fd-4aff-85d5-c4c47645583c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "88fa283e-15bb-4645-a81f-5954ee0e5be9",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "136a6c23-cec8-4576-8539-2372633dd78f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 976
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format amp query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_amp_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_amp_query() called')\n    \n    template = \"\"\"earliest = -7d@d index=ktb_csoc_default sourcetype= \\\"cisco:amp:event\\\"\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\\\"%d-%m-%Y %H:%M:%S\\\" ctime(time) AS time\n| spath \\\"event.computer.hostname\\\" | search \\\"event.computer.hostname\\\"=\\\"{0}*\\\"\n| table time,event.computer.hostname ,event.computer.network_addresses{{}}.ip ,event.computer.network_addresses{{}}.mac ,event.computer.connector_guid\n| dedup event.computer.connector_guid\n| rename event.computer.network_addresses{{}}.ip  as ip \n| rename event.computer.network_addresses{{}}.mac as mac\n| rename event.computer.connector_guid as connector_guid\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationHostName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_amp_query\", separator=\", \")\n\n    run_amp_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format amp query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1ad2e329-5b53-4946-8660-c5371fb81356",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1099,
                        "line_start": 1074,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 19,
                        "order": 38,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 800
                        },
                        "previous_function": "",
                        "previous_name": "format_amp_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "earliest = -7d@d index=ktb_csoc_default sourcetype= \"cisco:amp:event\"\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\"%d-%m-%Y %H:%M:%S\" ctime(time) AS time\n| spath \"event.computer.hostname\" | search \"event.computer.hostname\"=\"{0}*\"\n| table time,event.computer.hostname ,event.computer.network_addresses{{}}.ip ,event.computer.network_addresses{{}}.mac ,event.computer.connector_guid\n| dedup event.computer.connector_guid\n| rename event.computer.network_addresses{{}}.ip  as ip \n| rename event.computer.network_addresses{{}}.mac as mac\n| rename event.computer.connector_guid as connector_guid",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1006
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format multiple matched..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_multiple_matched_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_multiple_matched_ip() called')\n    \n    template = \"\"\"Target hostname ({0}) matched multiple IPs\n\nList of IP:\n%%\nIP: {1}\n\nSource: {2}\n\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationHostName\",\n        \"custom_function_ip_result:custom_function:target_ip\",\n        \"custom_function_ip_result:custom_function:sources\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_multiple_matched_ip\", separator=\", \")\n\n    add_note_4(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format multiple matched ip",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "83e5c79b-84c5-45ab-bcf3-2d74ff9df352",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1220,
                        "line_start": 1194,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 21,
                        "order": 43,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "custom_function_ip_result:custom_function:target_ip"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "custom_function_ip_result:custom_function:sources"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1460,
                            "y": 960
                        },
                        "previous_function": "",
                        "previous_name": "format_multiple_matched_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Target hostname ({0}) matched multiple IPs\n\nList of IP:\n%%\nIP: {1}\n\nSource: {2}\n\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1016
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_5() called')\n\n    note_title = \"Note from Automated Playbook\"\n    note_content = \"hostname not found\"\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "hostname not found",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Note from Automated Playbook",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1402254d-be91-45fc-91e5-67a7e4ee0109",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1286,
                        "line_start": 1276,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 5,
                        "order": 46,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2040,
                            "y": 480
                        },
                        "previous_function": "",
                        "previous_name": "add_note_5",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1031
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a7b90593-ff58-4819-9a27-7914d0cc1c8f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1402254d-be91-45fc-91e5-67a7e4ee0109",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1049
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a83bdd68-920d-41dd-8d15-c403ac153826",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fc3a3f9a-3265-44e8-a071-88df5ba0ee47",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1054
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format ISE query dst IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_ISE_query_dst_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_ISE_query_dst_IP() called')\n    \n    template = \"\"\"index=ktb_mgmt_default earliest=-15m@m latest=now sourcetype=\\\"cisco:ise:syslog\\\"  Framed_IP_Address={0} |  dedup Framed_IP_Address\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_ISE_query_dst_IP\", separator=\", \")\n\n    run_ISE_query_dst_IP(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format ISE query dst IP",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c6334eea-32be-4197-9dc2-267c97023d05",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 880,
                        "line_start": 864,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 17,
                        "order": 31,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": -240
                        },
                        "previous_function": "",
                        "previous_name": "format_ISE_query_dst_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "index=ktb_mgmt_default earliest=-15m@m latest=now sourcetype=\"cisco:ise:syslog\"  Framed_IP_Address={0} |  dedup Framed_IP_Address",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1058
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bf342942-ee52-47e6-beb4-8948e9a21ab6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ca1a7e91-aaa1-40e9-be4e-2b8758da9652",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8d4dfdde-c4c9-4096-aecb-1fa560baaac2",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1065
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_ISE_query_dst_IP:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_ISE_query_dst_IP:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run ISE query dst IP"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_ISE_query_dst_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_ISE_query_dst_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_ISE_query_dst_IP' call\n    formatted_data_1 = phantom.get_format_data(name='format_ISE_query_dst_IP')\n\n    parameters = []\n    \n    # build parameters list for 'run_ISE_query_dst_IP' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=decision_12, name=\"run_ISE_query_dst_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run ISE query dst IP",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d3ea4711-c3c5-4492-bd30-38b125c5a792",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 902,
                        "line_start": 880,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 3,
                        "order": 32,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": -240
                        },
                        "previous_function": "",
                        "previous_name": "run_ISE_query_dst_IP",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1067
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "102aa0c7-539a-4704-942b-129d9fd52591",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8d4dfdde-c4c9-4096-aecb-1fa560baaac2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c26ad946-9d92-485d-8f51-9a55ff0290ed",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1072
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_ISE_query_kaspersky:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_ISE_query_kaspersky:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run ISE query kaspersky"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_ISE_query_kaspersky(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_ISE_query_kaspersky() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_ISE_query_kaspersky' call\n    formatted_data_1 = phantom.get_format_data(name='format_ISE_query_kaspersky')\n\n    parameters = []\n    \n    # build parameters list for 'run_ISE_query_kaspersky' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=decision_15, name=\"run_ISE_query_kaspersky\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run ISE query kaspersky",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8d4dfdde-c4c9-4096-aecb-1fa560baaac2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1507,
                        "line_start": 1485,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 7,
                        "order": 52,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1680,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "run_ISE_query_kaspersky",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1074
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "28ad01c9-182f-4c7a-b6bb-6d8c4ecb0cdb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "88fa283e-15bb-4645-a81f-5954ee0e5be9",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ca1a7e91-aaa1-40e9-be4e-2b8758da9652",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1081
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 15
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_15(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_15() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"run_ISE_query_kaspersky:action_result.summary.total_events\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        format_kaspersky_user_query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"run_ISE_query_kaspersky:action_result.summary.total_events\", \"==\", 0],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        update_artifact_kasper(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run ISE query kaspersky",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c26ad946-9d92-485d-8f51-9a55ff0290ed",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1538,
                        "line_start": 1507,
                        "name": "decision",
                        "notes": "",
                        "number": 15,
                        "order": 53,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "run_ISE_query_kaspersky:action_result.summary.total_events",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "run_ISE_query_kaspersky:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1900,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "decision_15",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1103
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d7dbda91-a430-428e-aa7c-732e0663103a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c26ad946-9d92-485d-8f51-9a55ff0290ed",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "07bd4e13-c326-438b-9e3f-73296e1de7b8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1106
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_4() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_multiple_matched_ip')\n\n    note_title = \"Note from Automated Playbook\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_multiple_matched_ip:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Note from Automated Playbook",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fc3a3f9a-3265-44e8-a071-88df5ba0ee47",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1232,
                        "line_start": 1220,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 4,
                        "order": 44,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2560,
                            "y": 1180
                        },
                        "previous_function": "",
                        "previous_name": "add_note_4",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1108
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dafa7456-256c-4881-a501-327e9a9bbcb3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "07bd4e13-c326-438b-9e3f-73296e1de7b8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1109
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_mcafee_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_mcafee_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run mcafee query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_mcafee_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_mcafee_query() called')\n\n    # collect data for 'run_mcafee_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_mcafee_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_mcafee_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=join_custom_function_ip_result, name=\"run_mcafee_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run mcafee query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9b93f576-2737-4416-8fb2-acf6a0410205",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1160,
                        "line_start": 1140,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 6,
                        "order": 41,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "run_mcafee_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1115
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_amp_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_amp_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run amp query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_amp_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_amp_query() called')\n\n    # collect data for 'run_amp_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_amp_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_amp_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=join_custom_function_ip_result, name=\"run_amp_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run amp query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ccce3b69-1be9-4804-84d9-95d1d07561b8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1140,
                        "line_start": 1120,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 5,
                        "order": 40,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 800
                        },
                        "previous_function": "",
                        "previous_name": "run_amp_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1117
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 12
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_12(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_12() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"run_ISE_query_dst_IP:action_result.summary.total_events\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        update_artifact_dst_macaddr_from_ise(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run ISE query dst IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7d5b4703-c9dc-4cd9-b165-374917727d08",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 920,
                        "line_start": 902,
                        "name": "decision",
                        "notes": "",
                        "number": 12,
                        "order": 33,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "run_ISE_query_dst_IP:action_result.summary.total_events",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1900,
                            "y": -240
                        },
                        "previous_function": "",
                        "previous_name": "decision_12",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1118
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attributes": "*",
                            "filter": "format_user_AD_query:formatted_data",
                            "search_base": ""
                        },
                        "angle": 0,
                        "app": "AD LDAP",
                        "appid": "a5730e5d-a396-4695-92c2-35ff391aaf45",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "set attribute",
                                    "get attributes",
                                    "run query",
                                    "move object",
                                    "set password",
                                    "reset password",
                                    "enable account",
                                    "disable account",
                                    "unlock account",
                                    "remove group members",
                                    "add group members",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AD LDAP",
                                "app_version": "2.0.4",
                                "appid": "a5730e5d-a396-4695-92c2-35ff391aaf45",
                                "asset_name": "csoc ad ldap asset containment",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attributes": "*",
                                    "filter": "format_user_AD_query:formatted_data",
                                    "search_base": ""
                                },
                                "has_app": true,
                                "id": 21,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc ad ldap asset containment",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.entries.*.attributes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.filter",
                                        "data_type": "string",
                                        "example_values": [
                                            "(sAMAccountName=*)"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.search_base",
                                        "data_type": "string",
                                        "example_values": [
                                            "ou=splunk,dc=splunk,dc=lab"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.attributes",
                                        "data_type": "string",
                                        "example_values": [
                                            "sAMAccountName"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total objects: 1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.entries.*.dn",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN=SVC-SPLUNK,OU=SPLUNK,DC=SPLUNK,DC=LAB"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.entries.*.attributes.samaccountname",
                                        "data_type": "string",
                                        "example_values": [
                                            "SVC-SPLUNK"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attributes": {
                                        "data_type": "string",
                                        "default": "sAMAccountName",
                                        "description": "Semi-colon separated list of attributes to collect (e.g. sAMAccountName;mail)",
                                        "key": "attributes",
                                        "order": 2,
                                        "primary": false,
                                        "required": true
                                    },
                                    "filter": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The LDAP filter (must be in LDAP Syntax)",
                                        "key": "filter",
                                        "order": 0,
                                        "primary": false,
                                        "required": true
                                    },
                                    "search_base": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The search base to use in its distinguishedName format. If not specified, the 'defaultNamingContext' will be used",
                                        "key": "search_base",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "Active Directory LDAP",
                                "product_vendor": "Splunk",
                                "targets": "21",
                                "type": "identity management"
                            },
                            {
                                "action": "run query",
                                "actions": [
                                    "set attribute",
                                    "get attributes",
                                    "run query",
                                    "move object",
                                    "set password",
                                    "reset password",
                                    "enable account",
                                    "disable account",
                                    "unlock account",
                                    "remove group members",
                                    "add group members",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AD LDAP",
                                "app_version": "2.0.4",
                                "appid": "a5730e5d-a396-4695-92c2-35ff391aaf45",
                                "asset_name": "ktb domain ad",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attributes": "*",
                                    "filter": "format_user_AD_query:formatted_data",
                                    "search_base": ""
                                },
                                "has_app": true,
                                "id": 30,
                                "loaded": false,
                                "missing": false,
                                "name": "ktb domain ad",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.entries.*.attributes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.filter",
                                        "data_type": "string",
                                        "example_values": [
                                            "(sAMAccountName=*)"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.search_base",
                                        "data_type": "string",
                                        "example_values": [
                                            "ou=splunk,dc=splunk,dc=lab"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.attributes",
                                        "data_type": "string",
                                        "example_values": [
                                            "sAMAccountName"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total objects: 1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.entries.*.dn",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN=SVC-SPLUNK,OU=SPLUNK,DC=SPLUNK,DC=LAB"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.entries.*.attributes.samaccountname",
                                        "data_type": "string",
                                        "example_values": [
                                            "SVC-SPLUNK"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attributes": {
                                        "data_type": "string",
                                        "default": "sAMAccountName",
                                        "description": "Semi-colon separated list of attributes to collect (e.g. sAMAccountName;mail)",
                                        "key": "attributes",
                                        "order": 2,
                                        "primary": false,
                                        "required": true
                                    },
                                    "filter": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The LDAP filter (must be in LDAP Syntax)",
                                        "key": "filter",
                                        "order": 0,
                                        "primary": false,
                                        "required": true
                                    },
                                    "search_base": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The search base to use in its distinguishedName format. If not specified, the 'defaultNamingContext' will be used",
                                        "key": "search_base",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "Active Directory LDAP",
                                "product_vendor": "Splunk",
                                "targets": "30",
                                "type": "identity management"
                            },
                            {
                                "action": "run query",
                                "actions": [
                                    "set attribute",
                                    "get attributes",
                                    "run query",
                                    "move object",
                                    "set password",
                                    "reset password",
                                    "enable account",
                                    "disable account",
                                    "unlock account",
                                    "remove group members",
                                    "add group members",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AD LDAP",
                                "app_version": "2.0.4",
                                "appid": "a5730e5d-a396-4695-92c2-35ff391aaf45",
                                "asset_name": "ktbcs domain ad",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attributes": "*",
                                    "filter": "format_user_AD_query:formatted_data",
                                    "search_base": ""
                                },
                                "has_app": true,
                                "id": 31,
                                "loaded": false,
                                "missing": false,
                                "name": "ktbcs domain ad",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.entries.*.attributes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.filter",
                                        "data_type": "string",
                                        "example_values": [
                                            "(sAMAccountName=*)"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.search_base",
                                        "data_type": "string",
                                        "example_values": [
                                            "ou=splunk,dc=splunk,dc=lab"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.attributes",
                                        "data_type": "string",
                                        "example_values": [
                                            "sAMAccountName"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Total objects: 1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.entries.*.dn",
                                        "data_type": "string",
                                        "example_values": [
                                            "CN=SVC-SPLUNK,OU=SPLUNK,DC=SPLUNK,DC=LAB"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.entries.*.attributes.samaccountname",
                                        "data_type": "string",
                                        "example_values": [
                                            "SVC-SPLUNK"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "attributes": {
                                        "data_type": "string",
                                        "default": "sAMAccountName",
                                        "description": "Semi-colon separated list of attributes to collect (e.g. sAMAccountName;mail)",
                                        "key": "attributes",
                                        "order": 2,
                                        "primary": false,
                                        "required": true
                                    },
                                    "filter": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The LDAP filter (must be in LDAP Syntax)",
                                        "key": "filter",
                                        "order": 0,
                                        "primary": false,
                                        "required": true
                                    },
                                    "search_base": {
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The search base to use in its distinguishedName format. If not specified, the 'defaultNamingContext' will be used",
                                        "key": "search_base",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "Active Directory LDAP",
                                "product_vendor": "Splunk",
                                "targets": "31",
                                "type": "identity management"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run query against 3 ad"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_query_against_3_ad(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_query_against_3_ad() called')\n\n    # collect data for 'run_query_against_3_ad' call\n    formatted_data_1 = phantom.get_format_data(name='format_user_AD_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_query_against_3_ad' call\n    parameters.append({\n        'filter': formatted_data_1,\n        'attributes': \"*\",\n        'search_base': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['csoc ad ldap asset containment','ktb domain ad','ktbcs domain ad'], callback=update_artifact_active_directory, name=\"run_query_against_3_ad\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 467,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run query against 3 ad",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d7a1ce12-60b8-48c6-8a38-ffe0fc0db557",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 439,
                        "line_start": 420,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 2,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "run_query_against_3_ad",
                        "required_params": {
                            "attributes": true,
                            "filter": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1126
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "count guid src ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def count_guid_src_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('count_guid_src_ip() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['get_amp_event_data_src_ip:action_result.status', 'get_amp_event_data_src_ip:action_result.data.*.response_body'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n\n    count_guid_src_ip__connector_guid = None\n    count_guid_src_ip__connector_guid_count = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    connector_guid = 0\n    connector_guid_count = 0\n    #phantom.debug(results_item_1_0)\n    for item in results_item_1_1[0]['data']:\n        if item['connector_guid']:\n            connector_guid = item['connector_guid']\n            connector_guid_count += 1\n            \n    count_guid_src_ip__connector_guid = connector_guid\n    count_guid_src_ip__connector_guid_count = connector_guid_count\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='count_guid_src_ip:connector_guid', value=json.dumps(count_guid_src_ip__connector_guid))\n    phantom.save_run_data(key='count_guid_src_ip:connector_guid_count', value=json.dumps(count_guid_src_ip__connector_guid_count))\n    decision_6(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 13,
                        "custom_callback": "",
                        "custom_code": "def count_guid_src_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('custom_function_4() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['get_data_1:action_result.status', 'get_data_1:action_result.data.*.response_body'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n\n    count_guid_src_ip__connector_guid = None\n    count_guid_src_ip__connector_guid_count = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    \n    connector_guid = 0\n    connector_guid_count = 0\n    #phantom.debug(results_item_1_0)\n    for item in results_item_1_1[0]['data']:\n        if item['connector_guid']:\n            connector_guid = item['connector_guid']\n            connector_guid_count += 1\n            \n    count_guid_src_ip__connector_guid = connector_guid\n    count_guid_src_ip__connector_guid_count = connector_guid_count\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='custom_function_4:connector_guid', value=json.dumps(count_guid_src_ip__connector_guid))\n    phantom.save_run_data(key='custom_function_4:connector_guid_count', value=json.dumps(count_guid_src_ip__connector_guid_count))\n    decision_6(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "count guid src ip",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "61a02671-3d48-4a34-a795-7fcacb60358f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 300,
                        "line_start": 263,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 4,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "connector_guid"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "connector_guid_count"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_amp_event_data_src_ip:action_result.status"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_amp_event_data_src_ip:action_result.data.*.response_body"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "count_guid_src_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    \n    connector_guid = 0\n    connector_guid_count = 0\n    #phantom.debug(results_item_1_0)\n    for item in results_item_1_1[0]['data']:\n        if item['connector_guid']:\n            connector_guid = item['connector_guid']\n            connector_guid_count += 1\n            \n    count_guid_src_ip__connector_guid = connector_guid\n    count_guid_src_ip__connector_guid_count = connector_guid_count\n\n",
                        "warn": false,
                        "z": 1128
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.sourceAddress\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        format_amp_query_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6ea61f98-6262-4dec-b678-7245a6d964e1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 41,
                        "line_start": 24,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.sourceAddress",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1133
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ce7caec0-02fb-4be5-858a-3ee9adbce0e7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2a6e09fb-fd8d-4318-8040-ac9d425fed45",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "344dfe6a-29c6-4652-9fed-5a22513f2e0c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1137
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8330700c-10c2-43dd-9274-04edfa51acbb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6ea61f98-6262-4dec-b678-7245a6d964e1",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "51497a66-d927-4776-aac6-e53260c3d403",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1160
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e317129d-9c72-4658-ae9b-92bee078d227",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ef19afa9-41e5-4451-bb1c-d9f89ec696bc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2a6e09fb-fd8d-4318-8040-ac9d425fed45",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1161
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_kaspersky_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_kaspersky_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run kaspersky query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_kaspersky_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_kaspersky_query() called')\n\n    # collect data for 'run_kaspersky_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_kaspersky_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_kaspersky_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=join_custom_function_ip_result, name=\"run_kaspersky_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run kaspersky query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3f1fed7a-e1b2-4024-bcee-93d72d514092",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1004,
                        "line_start": 984,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 4,
                        "order": 36,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "run_kaspersky_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1170
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_2() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_multiple_guid_src_ip')\n\n    note_title = \"Multiple Active GUID detected\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_multiple_guid_src_ip:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Multiple Active GUID detected",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cef7d5af-c32d-454d-9fcf-6cf148e95c06",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 387,
                        "line_start": 375,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 2,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "add_note_2",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1194
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e3e741eb-f828-4a18-9b48-a0b42ed7c095",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "13498753-5acd-4266-9baa-9d39f8f4e1a9",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1195
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_3() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"run_ISE_query_src_IP:action_result.summary.total_events\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        update_artifact_src_macaddr_from_ise(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run ISE query src IP",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1a48bc93-3b09-44c9-820d-9dd5f747a1f1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 228,
                        "line_start": 210,
                        "name": "decision",
                        "notes": "",
                        "number": 3,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "run_ISE_query_src_IP:action_result.summary.total_events",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1900,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "decision_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1197
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dcb6f941-b4da-41a8-a1f4-da10f917d6a1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7c278302-bc8a-4f1e-99e4-b79f26dbbb58",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f7b1b4e9-d212-44b1-83c2-dcbc31c5dff8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1205
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format kaspersky query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_kaspersky_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_kaspersky_query() called')\n    \n    template = \"\"\"earliest = -7d@d index=ktb_mgmt_default sourcetype =\\\"kaspersky:klprci\\\"| search identNetBios= {0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\\\"%d-%m-%Y %H:%M:%S\\\" ctime(time) AS time\n\n| table time,identNetBios,src\n| dedup identNetBios,src\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationHostName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_kaspersky_query\", separator=\", \")\n\n    run_kaspersky_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format kaspersky query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ca86f61d-1202-4413-9fbe-ebd0bdbae8f8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 984,
                        "line_start": 962,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 18,
                        "order": 35,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "format_kaspersky_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "earliest = -7d@d index=ktb_mgmt_default sourcetype =\"kaspersky:klprci\"| search identNetBios= {0}\n| sort 0 - _time\n| eval time = _time\n|convert timeformat=\"%d-%m-%Y %H:%M:%S\" ctime(time) AS time\n\n| table time,identNetBios,src\n| dedup identNetBios,src",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1212
                    },
                    {
                        "action": "get device info",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "connector_guid": "count_guid_src_ip:custom_function:connector_guid"
                        },
                        "angle": 0,
                        "app": "FireAMP",
                        "appid": "897890aa-14f5-4d6c-b68c-e557ff30d251",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get device info",
                                "actions": [
                                    "get device info",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt file",
                                    "list endpoints",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "FireAMP",
                                "app_version": "2.0.5",
                                "appid": "897890aa-14f5-4d6c-b68c-e557ff30d251",
                                "asset_name": "cisco fireamp asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "connector_guid": "count_guid_src_ip:custom_function:connector_guid"
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "cisco fireamp asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_path": "action_result.parameter.connector_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Active",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.data.active",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Connector GUID",
                                        "column_order": 2,
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_path": "action_result.data.*.data.connector_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.connector_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.external_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.group_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Host Name",
                                        "column_order": 1,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.data.hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.install_date",
                                        "data_type": "string",
                                        "example_value": "2021-03-01T08:34:23Z"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.internal_ips",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.is_compromised",
                                        "data_type": "boolean",
                                        "example_value": false
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.isolation.available",
                                        "data_type": "boolean",
                                        "example_value": false
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.isolation.status",
                                        "data_type": "string",
                                        "example_value": "not_isolated"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.last_seen",
                                        "data_type": "string",
                                        "example_value": "2021-03-01T08:37:05Z"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.computer",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.group",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.trajectory",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IPs",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "mac address"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.mac",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Operating System",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.data.operating_system",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.orbital.status",
                                        "data_type": "string",
                                        "example_value": "not_enabled"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.policy.guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.policy.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.windows_processor_id",
                                        "data_type": "string",
                                        "example_value": "b927af6438501de"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.metadata.links.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_endpoints",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "connector_guid": {
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Connector GUID on endpoint",
                                        "key": "connector_guid",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "FireAMP",
                                "product_vendor": "Cisco Systems",
                                "targets": "13",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get device info src ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_device_info_src_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_device_info_src_ip() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    count_guid_src_ip__connector_guid = json.loads(phantom.get_run_data(key='count_guid_src_ip:connector_guid'))\n    # collect data for 'get_device_info_src_ip' call\n\n    parameters = []\n    \n    # build parameters list for 'get_device_info_src_ip' call\n    parameters.append({\n        'connector_guid': count_guid_src_ip__connector_guid,\n    })\n\n    phantom.act(action=\"get device info\", parameters=parameters, assets=['cisco fireamp asset'], callback=format_user_query, name=\"get_device_info_src_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 63,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get device info src ip",
                        "delay": "0",
                        "description": "Gets information about an endpoint where Cisco AMP is installed.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ef19afa9-41e5-4451-bb1c-d9f89ec696bc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 63,
                        "line_start": 44,
                        "message": "Configuring now",
                        "name": "get device info",
                        "notes": "",
                        "number": 2,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "get_device_info_src_ip",
                        "required_params": {
                            "connector_guid": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1214
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_6(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_6() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"count_guid_src_ip:custom_function:connector_guid_count\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        get_device_info_src_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"count_guid_src_ip:custom_function:connector_guid_count\", \">\", 1],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        format_multiple_guid_src_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 3\n    format_ISE_query_src_IP(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "164bb59d-7627-4947-9040-b939e13c33a9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 352,
                        "line_start": 318,
                        "name": "decision",
                        "notes": "",
                        "number": 6,
                        "order": 13,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "count_guid_src_ip:custom_function:connector_guid_count",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "count_guid_src_ip:custom_function:connector_guid_count",
                                        "value": "1"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "decision_6",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1216
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e940aca6-3244-4371-909b-1ae675e23ffd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f7b1b4e9-d212-44b1-83c2-dcbc31c5dff8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ace8ad3a-3f42-4eea-b58f-8eefbee83478",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1218
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "custom function ip result"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def custom_function_ip_result(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('custom_function_ip_result() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['run_kaspersky_query:action_result.status', 'run_kaspersky_query:action_result.data.*.src'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['run_amp_query:action_result.status', 'run_amp_query:action_result.data.*.ip', 'run_amp_query:action_result.data.*.connector_guid'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['run_mcafee_query:action_result.status', 'run_mcafee_query:action_result.data.*.dest_ip'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_2_1 = [item[1] for item in results_data_2]\n    results_item_2_2 = [item[2] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n    results_item_3_1 = [item[1] for item in results_data_3]\n\n    custom_function_ip_result__unique_ip = None\n    custom_function_ip_result__target_ip = None\n    custom_function_ip_result__sources = None\n    custom_function_ip_result__connector_guid = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    target_ip = []\n    sources = []\n    unique_ip = 0\n    connector_guid = \"\"\n    \n    if results_item_1_1[0]:\n        target_ip.append(results_item_1_1[0])\n        sources.append(\"KASPERSKY\")\n    if results_item_2_1[0]:\n        target_ip.append(results_item_2_1[0])\n        sources.append(\"AMP\")\n        connector_guid = results_item_2_2[0]\n    if results_item_3_1[0]:\n        target_ip.append(results_item_3_1[0])\n        sources.append(\"MCAFEE\")\n    \n    unique_ip = len(set(target_ip))\n    \n    custom_function_ip_result__unique_ip = unique_ip\n    custom_function_ip_result__target_ip = target_ip\n    custom_function_ip_result__sources = sources\n    custom_function_ip_result__connector_guid = connector_guid\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='custom_function_ip_result:unique_ip', value=json.dumps(custom_function_ip_result__unique_ip))\n    phantom.save_run_data(key='custom_function_ip_result:target_ip', value=json.dumps(custom_function_ip_result__target_ip))\n    phantom.save_run_data(key='custom_function_ip_result:sources', value=json.dumps(custom_function_ip_result__sources))\n    phantom.save_run_data(key='custom_function_ip_result:connector_guid', value=json.dumps(custom_function_ip_result__connector_guid))\n    decision_13(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 10,
                        "customCodeStartLine": 22,
                        "custom_callback": "",
                        "custom_code": "def custom_function_ip_result(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('custom_function_ip_result() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['run_kaspersky_query:action_result.status', 'run_kaspersky_query:action_result.data.*.src'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['run_amp_query:action_result.status', 'run_amp_query:action_result.data.*.ip', 'run_amp_query:action_result.data.*.connector_guid'], action_results=results)\n    results_data_3 = phantom.collect2(container=container, datapath=['run_mcafee_query:action_result.status', 'run_mcafee_query:action_result.data.*.dest_ip'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n    results_item_2_1 = [item[1] for item in results_data_2]\n    results_item_2_2 = [item[2] for item in results_data_2]\n    results_item_3_0 = [item[0] for item in results_data_3]\n    results_item_3_1 = [item[1] for item in results_data_3]\n\n    custom_function_ip_result__unique_ip = None\n    custom_function_ip_result__target_ip = None\n    custom_function_ip_result__sources = None\n    custom_function_ip_result__connector_guid = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    target_ip = []\n    sources = []\n    unique_ip = 0\n    connector_guid = \"\"\n    \n    if results_item_1_1[0]:\n        target_ip.append(results_item_1_1[0])\n        sources.append(\"KASPERSKY\")\n    if results_item_2_1[0]:\n        target_ip.append(results_item_2_1[0])\n        sources.append(\"AMP\")\n        connector_guid = results_item_2_2[0]\n    if results_item_3_1[0]:\n        target_ip.append(results_item_3_1[0])\n        sources.append(\"MCAFEE\")\n    \n    unique_ip = len(set(target_ip))\n    \n    custom_function_ip_result__unique_ip = unique_ip\n    custom_function_ip_result__target_ip = target_ip\n    custom_function_ip_result__sources = sources\n    custom_function_ip_result__connector_guid = connector_guid\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='custom_function_ip_result:unique_ip', value=json.dumps(custom_function_ip_result__unique_ip))\n    phantom.save_run_data(key='custom_function_ip_result:target_ip', value=json.dumps(custom_function_ip_result__target_ip))\n    phantom.save_run_data(key='custom_function_ip_result:sources', value=json.dumps(custom_function_ip_result__sources))\n    phantom.save_run_data(key='custom_function_ip_result:connector_guid', value=json.dumps(custom_function_ip_result__connector_guid))\n    decision_13(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "custom function ip result",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6bda67fb-8205-4c14-9b56-7c9e61dd9d79",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_custom_function_ip_result(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_custom_function_ip_result() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['run_kaspersky_query', 'run_mcafee_query', 'run_amp_query']):\n        \n        # call connected block \"custom_function_ip_result\"\n        custom_function_ip_result(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 1063,
                        "legacy": true,
                        "line_end": 1074,
                        "line_start": 1004,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 10,
                        "order": 37,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "unique_ip"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "target_ip"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "sources"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "connector_guid"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_kaspersky_query:action_result.status"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_amp_query:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_mcafee_query:action_result.status"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_kaspersky_query:action_result.data.*.src"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "run_mcafee_query:action_result.data.*.dest_ip"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "run_amp_query:action_result.data.*.ip"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "run_amp_query:action_result.data.*.connector_guid"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "custom_function_ip_result",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    target_ip = []\n    sources = []\n    unique_ip = 0\n    connector_guid = \"\"\n    \n    if results_item_1_1[0]:\n        target_ip.append(results_item_1_1[0])\n        sources.append(\"KASPERSKY\")\n    if results_item_2_1[0]:\n        target_ip.append(results_item_2_1[0])\n        sources.append(\"AMP\")\n        connector_guid = results_item_2_2[0]\n    if results_item_3_1[0]:\n        target_ip.append(results_item_3_1[0])\n        sources.append(\"MCAFEE\")\n    \n    unique_ip = len(set(target_ip))\n    \n    custom_function_ip_result__unique_ip = unique_ip\n    custom_function_ip_result__target_ip = target_ip\n    custom_function_ip_result__sources = sources\n    custom_function_ip_result__connector_guid = connector_guid\n\n",
                        "warn": false,
                        "z": 1237
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 13
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_13(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_13() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"custom_function_ip_result:custom_function:unique_ip\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        decision_14(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"custom_function_ip_result:custom_function:unique_ip\", \">\", 1],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        format_multiple_matched_ip(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 3\n    add_note_5(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a4a5882b-aac3-4acf-9c72-3f8f42145fbd",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1194,
                        "line_start": 1160,
                        "name": "decision",
                        "notes": "",
                        "number": 13,
                        "order": 42,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "custom_function_ip_result:custom_function:unique_ip",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "custom_function_ip_result:custom_function:unique_ip",
                                        "value": "1"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1200,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "decision_13",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1239
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format multiple guid src i..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_multiple_guid_src_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_multiple_guid_src_ip() called')\n    \n    template = \"\"\"{0} below endpoint guid found using same active IP {2}\n\n%%\n{1}\n\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"count_guid_src_ip:custom_function:connector_guid_count\",\n        \"count_guid_src_ip:custom_function:connector_guid\",\n        \"artifact:*.cef.sourceAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_multiple_guid_src_ip\", separator=\", \")\n\n    add_note_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format multiple guid src ip",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "edf53aac-8b98-459f-b594-a3eedd726de4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 379,
                        "line_end": 375,
                        "line_start": 352,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 12,
                        "order": 14,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "count_guid_src_ip:custom_function:connector_guid_count"
                            },
                            {
                                "position": 0,
                                "type": "",
                                "value": "count_guid_src_ip:custom_function:connector_guid"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "format_multiple_guid_src_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "{0} below endpoint guid found using same active IP {2}\n\n%%\n{1}\n\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1251
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "update artifact dst maca..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_dst_macaddr_from_ise(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_dst_macaddr_from_ise() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_ISE_query_dst_IP:action_result.data.*.raw_msg'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n\n    for item in results_item_1_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"destinationAddress_MacAddress\" : item2.split('=')[1].replace('-',':') , \"destinationAddress_QueryFrom\" : \"ISE\" }\n                \n    # build parameters list for 'update_mac' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress_mac\")\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run ISE query dst IP",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def update_artifact_dst_macaddr_from_ise(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_dst_macaddr_from_ise() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n\n    for item in results_item_1_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"destinationAddress_MacAddress\" : item2.split('=')[1].replace('-',':') , \"destinationAddress_QueryFrom\" : \"ISE\" }\n                \n    # build parameters list for 'update_mac' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress_mac\")\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "update artifact dst macaddr from ise",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "43fe5ae9-ea9a-4f99-914a-93841d1948d1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 962,
                        "line_start": 920,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 9,
                        "order": 34,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_ISE_query_dst_IP:action_result.data.*.raw_msg"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": -240
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_dst_macaddr_from_ise",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    parameters = []\n\n    for item in results_item_1_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"destinationAddress_MacAddress\" : item2.split('=')[1].replace('-',':') , \"destinationAddress_QueryFrom\" : \"ISE\" }\n                \n    # build parameters list for 'update_mac' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress_mac\")\n    ################################################################################",
                        "warn": false,
                        "z": 1257
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "count guid dst ip"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def count_guid_dst_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('count_guid_dst_ip() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['get_amp_event_data_dst_ip:action_result.status', 'get_amp_event_data_dst_ip:action_result.data.*.response_body'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n\n    count_guid_dst_ip__connector_guid = None\n    count_guid_dst_ip__connector_guid_count = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    connector_guid = 0\n    connector_guid_count = 0\n    #phantom.debug(results_item_1_0)\n    for item in results_item_1_1[0]['data']:\n        if item['connector_guid']:\n            connector_guid = item['connector_guid']\n            connector_guid_count += 1\n            \n    count_guid_dst_ip__connector_guid = connector_guid\n    count_guid_dst_ip__connector_guid_count = connector_guid_count\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='count_guid_dst_ip:connector_guid', value=json.dumps(count_guid_dst_ip__connector_guid))\n    phantom.save_run_data(key='count_guid_dst_ip:connector_guid_count', value=json.dumps(count_guid_dst_ip__connector_guid_count))\n    decision_11(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 13,
                        "custom_callback": "",
                        "custom_code": "def count_guid_dst_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('count_guid_dst_ip() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['get_amp_event_data_dst_ip:action_result.status', 'get_amp_event_data_dst_ip:action_result.data.*.response_body'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n\n    count_guid_dst_ip__connector_guid = None\n    count_guid_dst_ip__connector_guid_count = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    connector_guid = 0\n    connector_guid_count = 0\n    #phantom.debug(results_item_1_0)\n    for item in results_item_1_1[0]['data']:\n        if item['connector_guid']:\n            connector_guid = item['connector_guid']\n            connector_guid_count += 1\n            \n    count_guid_dst_ip__connector_guid = connector_guid\n    count_guid_dst_ip__connector_guid_count = connector_guid_count\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='count_guid_dst_ip:connector_guid', value=json.dumps(count_guid_dst_ip__connector_guid))\n    phantom.save_run_data(key='count_guid_dst_ip:connector_guid_count', value=json.dumps(count_guid_dst_ip__connector_guid_count))\n    decision_11(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "count guid dst ip",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c849e74f-5939-4014-ac0e-3edf5ec88917",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 701,
                        "line_start": 665,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 7,
                        "order": 24,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "connector_guid"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "connector_guid_count"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "get_amp_event_data_dst_ip:action_result.status"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_amp_event_data_dst_ip:action_result.data.*.response_body"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "count_guid_dst_ip",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    connector_guid = 0\n    connector_guid_count = 0\n    #phantom.debug(results_item_1_0)\n    for item in results_item_1_1[0]['data']:\n        if item['connector_guid']:\n            connector_guid = item['connector_guid']\n            connector_guid_count += 1\n            \n    count_guid_dst_ip__connector_guid = connector_guid\n    count_guid_dst_ip__connector_guid_count = connector_guid_count\n\n",
                        "warn": false,
                        "z": 1264
                    },
                    {
                        "action": "get device info",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "connector_guid": "count_guid_dst_ip:custom_function:connector_guid"
                        },
                        "angle": 0,
                        "app": "FireAMP",
                        "appid": "897890aa-14f5-4d6c-b68c-e557ff30d251",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get device info",
                                "actions": [
                                    "get device info",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt file",
                                    "list endpoints",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "FireAMP",
                                "app_version": "2.0.5",
                                "appid": "897890aa-14f5-4d6c-b68c-e557ff30d251",
                                "asset_name": "cisco fireamp asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "connector_guid": "count_guid_dst_ip:custom_function:connector_guid"
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "cisco fireamp asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_path": "action_result.parameter.connector_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Active",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.data.active",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Connector GUID",
                                        "column_order": 2,
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_path": "action_result.data.*.data.connector_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.connector_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.external_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.group_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Host Name",
                                        "column_order": 1,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.data.hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.install_date",
                                        "data_type": "string",
                                        "example_value": "2021-03-01T08:34:23Z"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.internal_ips",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.is_compromised",
                                        "data_type": "boolean",
                                        "example_value": false
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.isolation.available",
                                        "data_type": "boolean",
                                        "example_value": false
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.isolation.status",
                                        "data_type": "string",
                                        "example_value": "not_isolated"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.last_seen",
                                        "data_type": "string",
                                        "example_value": "2021-03-01T08:37:05Z"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.computer",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.group",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.trajectory",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IPs",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "mac address"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.mac",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Operating System",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.data.operating_system",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.orbital.status",
                                        "data_type": "string",
                                        "example_value": "not_enabled"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.policy.guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.policy.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.windows_processor_id",
                                        "data_type": "string",
                                        "example_value": "b927af6438501de"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.metadata.links.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_endpoints",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "connector_guid": {
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Connector GUID on endpoint",
                                        "key": "connector_guid",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "FireAMP",
                                "product_vendor": "Cisco Systems",
                                "targets": "13",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get device info dst ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_device_info_dst_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_device_info_dst_ip() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    count_guid_dst_ip__connector_guid = json.loads(phantom.get_run_data(key='count_guid_dst_ip:connector_guid'))\n    # collect data for 'get_device_info_dst_ip' call\n\n    parameters = []\n    \n    # build parameters list for 'get_device_info_dst_ip' call\n    parameters.append({\n        'connector_guid': count_guid_dst_ip__connector_guid,\n    })\n\n    phantom.act(action=\"get device info\", parameters=parameters, assets=['cisco fireamp asset'], callback=format_dst_user_query, name=\"get_device_info_dst_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get device info dst ip",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7c278302-bc8a-4f1e-99e4-b79f26dbbb58",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 773,
                        "line_start": 754,
                        "message": "Configuring now",
                        "name": "get device info",
                        "notes": "",
                        "number": 3,
                        "order": 27,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": -120
                        },
                        "previous_function": "",
                        "previous_name": "get_device_info_dst_ip",
                        "required_params": {
                            "connector_guid": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1271
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "",
                            "parse_only": "",
                            "query": "format_dst_user_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_dst_user_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run dst user query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_dst_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_dst_user_query() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_dst_user_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_dst_user_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_dst_user_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"tstats\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=format_33, name=\"run_dst_user_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1683,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get device info dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run dst user query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ace8ad3a-3f42-4eea-b58f-8eefbee83478",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1661,
                        "line_start": 1639,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 9,
                        "order": 58,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1860,
                            "y": -120
                        },
                        "previous_function": "",
                        "previous_name": "run_dst_user_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1274
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "update artifact kasper"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_kasper(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_kasper() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.cef.destinationHostName', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_kaspersky_query:action_result.data.*.src'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    cef_json = {\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_QueryFrom\" : \"KASPERSKY\" }\n    \n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run ISE query kaspersky",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def update_artifact_kasper(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_kasper() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.cef.destinationHostName', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_kaspersky_query:action_result.data.*.src'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    cef_json = {\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_QueryFrom\" : \"KASPERSKY\" }\n    \n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "update artifact kasper",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "07bd4e13-c326-438b-9e3f-73296e1de7b8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1577,
                        "line_start": 1538,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 14,
                        "order": 54,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_kaspersky_query:action_result.data.*.src"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2560,
                            "y": 1060
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_kasper",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    parameters = []\n    cef_json = {\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_QueryFrom\" : \"KASPERSKY\" }\n    \n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n\n",
                        "warn": false,
                        "z": 1287
                    },
                    {
                        "action": "get data",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "headers": "{\"Authorization\": \"Basic NzU4MWVjYTU3YjAzMjZhMTJiM2U6ODJjNGFhZmYtNzExMS00N2JmLTg4YjUtNzg2N2E0MTQzZTY1\"}",
                            "location": "format_amp_query_ip:formatted_data",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "cisco amp base64",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "headers": "{\"Authorization\": \"Basic NzU4MWVjYTU3YjAzMjZhMTJiM2U6ODJjNGFhZmYtNzExMS00N2JmLTg4YjUtNzg2N2E0MTQzZTY1\"}",
                                    "location": "format_amp_query_ip:formatted_data",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 103,
                                "loaded": false,
                                "missing": false,
                                "name": "cisco amp base64",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 2,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint?query=string)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 1,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "103",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get amp event data src ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_amp_event_data_src_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_amp_event_data_src_ip() called')\n\n    # collect data for 'get_amp_event_data_src_ip' call\n    formatted_data_1 = phantom.get_format_data(name='format_amp_query_ip')\n\n    parameters = []\n    \n    # build parameters list for 'get_amp_event_data_src_ip' call\n    parameters.append({\n        'headers': \"{\\\"Authorization\\\": \\\"Basic NzU4MWVjYTU3YjAzMjZhMTJiM2U6ODJjNGFhZmYtNzExMS00N2JmLTg4YjUtNzg2N2E0MTQzZTY1\\\"}\",\n        'location': formatted_data_1,\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"get data\", parameters=parameters, assets=['cisco amp base64'], callback=decision_4, name=\"get_amp_event_data_src_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get amp event data src ip",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a8dd6efb-543b-4a6f-9ed3-765c79c18b1a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 263,
                        "line_start": 244,
                        "message": "Configuring now",
                        "name": "get data",
                        "notes": "",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "get_amp_event_data_src_ip",
                        "required_params": {
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1320
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 14
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_14(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_14() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"AMP\", \"in\", \"custom_function_ip_result:custom_function:sources\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        get_device_info_hostname(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"KASPERSKY\", \"in\", \"custom_function_ip_result:custom_function:sources\"],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        format_ISE_query_kaspersky(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 3\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"MCAFEE\", \"in\", \"custom_function_ip_result:custom_function:sources\"],\n        ])\n\n    # call connected blocks if condition 3 matched\n    if matched:\n        format_mcafee_user_query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "88fa283e-15bb-4645-a81f-5954ee0e5be9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1276,
                        "line_start": 1232,
                        "name": "decision",
                        "notes": "",
                        "number": 14,
                        "order": 45,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "AMP",
                                        "value": "custom_function_ip_result:custom_function:sources"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "KASPERSKY",
                                        "value": "custom_function_ip_result:custom_function:sources"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "MCAFEE",
                                        "value": "custom_function_ip_result:custom_function:sources"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1340,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "decision_14",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1322
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "57197e98-af40-42fc-9422-f352e5b90f3a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "88fa283e-15bb-4645-a81f-5954ee0e5be9",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2b72d32b-ccc7-4212-a273-08358b422297",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1335
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cde1db89-47d5-4eca-a572-5bea47871136",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c26ad946-9d92-485d-8f51-9a55ff0290ed",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0dc1cbbc-d989-47b9-a178-37443f7177a3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1340
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format ISE query src IP"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_ISE_query_src_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_ISE_query_src_IP() called')\n    \n    template = \"\"\"index=ktb_mgmt_default earliest=-15m@m latest=now sourcetype=\\\"cisco:ise:syslog\\\"  Framed_IP_Address={0} |  dedup Framed_IP_Address\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.sourceAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_ISE_query_src_IP\", separator=\", \")\n\n    run_ISE_query_src_IP(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format ISE query src IP",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a76dada7-2336-48bc-93d1-3d69920a5f97",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 140,
                        "line_start": 124,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 10,
                        "order": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.sourceAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "format_ISE_query_src_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "index=ktb_mgmt_default earliest=-15m@m latest=now sourcetype=\"cisco:ise:syslog\"  Framed_IP_Address={0} |  dedup Framed_IP_Address",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1342
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 10
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_10(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_10() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.destinationHostName\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        format_kaspersky_query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        format_amp_query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        format_mcafee_query(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "547883d7-9bb5-4786-8ca1-f16c5634d522",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 720,
                        "line_start": 701,
                        "name": "decision",
                        "notes": "",
                        "number": 10,
                        "order": 25,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.destinationHostName",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 680
                        },
                        "previous_function": "",
                        "previous_name": "decision_10",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1345
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format ISE query kasper..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_ISE_query_kaspersky(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_ISE_query_kaspersky() called')\n    \n    template = \"\"\"index=ktb_mgmt_default earliest=-15m@m latest=now sourcetype=\\\"cisco:ise:syslog\\\"  Framed_IP_Address={0} |  dedup Framed_IP_Address\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"run_kaspersky_query:action_result.data.*.src\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_ISE_query_kaspersky\", separator=\", \")\n\n    run_ISE_query_kaspersky(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format ISE query kaspersky",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ca1a7e91-aaa1-40e9-be4e-2b8758da9652",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1461,
                        "line_end": 1485,
                        "line_start": 1469,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 22,
                        "order": 51,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_kaspersky_query:action_result.data.*.src"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1460,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "format_ISE_query_kaspersky",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "index=ktb_mgmt_default earliest=-15m@m latest=now sourcetype=\"cisco:ise:syslog\"  Framed_IP_Address={0} |  dedup Framed_IP_Address",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1349
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5144b104-eded-40df-9702-574f48292be3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2b72d32b-ccc7-4212-a273-08358b422297",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d754de80-4aa7-46a1-a87d-1ad494d2951c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1362
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c121504f-b11e-42ac-be81-c08d22ab9cc3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "015d78b4-697f-4125-bf67-ebe193c048c0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c89762a0-0547-4235-81cd-1b69adf7f829",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1364
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1562103d-9ba1-46d9-b7be-f03c3a8a4f39",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0dc1cbbc-d989-47b9-a178-37443f7177a3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9362785b-e278-42d4-ac4e-3340b2be7382",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1366
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2af7192e-0c71-4d2a-bdbd-b87df18f52b8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "136a6c23-cec8-4576-8539-2372633dd78f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "015d78b4-697f-4125-bf67-ebe193c048c0",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1379
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0b13608e-04ad-46f0-9d05-26231ace68dd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c89762a0-0547-4235-81cd-1b69adf7f829",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8e269d4f-018a-405d-9e82-09d9753025bb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1395
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2fc4bbdb-990b-46ce-b3d8-a1ae306d6167",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8e269d4f-018a-405d-9e82-09d9753025bb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "27d9a359-f1ae-407f-8a1b-3a4c0ee552ab",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1402
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8ed73295-7e7f-401e-b8d3-b15ae77674ac",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "27d9a359-f1ae-407f-8a1b-3a4c0ee552ab",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6e6669fb-3142-41a1-b951-08686c81d0b5",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1409
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "183f3492-0d8f-4d77-ac44-f9c0b73cdf27",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6e6669fb-3142-41a1-b951-08686c81d0b5",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1410
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "update artifact amp"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_amp(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_amp() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationHostName', 'artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['get_device_info_hostname:action_result.data.*.data.active', 'get_device_info_hostname:action_result.data.*.data.internal_ips', 'get_device_info_hostname:action_result.data.*.data.network_addresses.*.ip', 'get_device_info_hostname:action_result.data.*.data.network_addresses.*.mac', 'get_device_info_hostname:action_result.data.*.data.connector_guid', 'get_device_info_hostname:action_result.data.*.data.operating_system'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_1_3 = [item[3] for item in results_data_1]\n    results_item_1_4 = [item[4] for item in results_data_1]\n    results_item_1_5 = [item[5] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    parameters = []\n    \n    cef_json = {\n    \"destinationHostName_connector_guid\" : results_item_1_4[0] ,\n    \"destinationHostName_MacAddress\" : results_item_1_3[0] ,\n    \"destinationHostName_IP\" : results_item_1_2[0] ,\n    \"destinationHostName_OS\" : results_item_1_5[0] ,\n    \"destinationHostName_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_guid\")\n    \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run amp user query",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 17,
                        "custom_callback": "",
                        "custom_code": "def update_artifact_amp(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_amp() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationHostName', 'artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['get_device_info_hostname:action_result.data.*.data.active', 'get_device_info_hostname:action_result.data.*.data.internal_ips', 'get_device_info_hostname:action_result.data.*.data.network_addresses.*.ip', 'get_device_info_hostname:action_result.data.*.data.network_addresses.*.mac', 'get_device_info_hostname:action_result.data.*.data.connector_guid', 'get_device_info_hostname:action_result.data.*.data.operating_system'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_1_3 = [item[3] for item in results_data_1]\n    results_item_1_4 = [item[4] for item in results_data_1]\n    results_item_1_5 = [item[5] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    parameters = []\n    \n    cef_json = {\n    \"destinationHostName_connector_guid\" : results_item_1_4[0] ,\n    \"destinationHostName_MacAddress\" : results_item_1_3[0] ,\n    \"destinationHostName_IP\" : results_item_1_2[0] ,\n    \"destinationHostName_OS\" : results_item_1_5[0] ,\n    \"destinationHostName_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_guid\")\n    \n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "update artifact amp",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6e6669fb-3142-41a1-b951-08686c81d0b5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1357,
                        "line_start": 1305,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 11,
                        "order": 48,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_device_info_hostname:action_result.data.*.data.active"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "get_device_info_hostname:action_result.data.*.data.internal_ips"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "get_device_info_hostname:action_result.data.*.data.network_addresses.*.ip"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "get_device_info_hostname:action_result.data.*.data.network_addresses.*.mac"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "get_device_info_hostname:action_result.data.*.data.connector_guid"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "artifact:*.id"
                            },
                            {
                                "position": 7,
                                "type": "",
                                "value": "get_device_info_hostname:action_result.data.*.data.operating_system"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2560,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_amp",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n\n    parameters = []\n    \n    cef_json = {\n    \"destinationHostName_connector_guid\" : results_item_1_4[0] ,\n    \"destinationHostName_MacAddress\" : results_item_1_3[0] ,\n    \"destinationHostName_IP\" : results_item_1_2[0] ,\n    \"destinationHostName_OS\" : results_item_1_5[0] ,\n    \"destinationHostName_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_guid\")\n    \n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 1411
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ac7558b0-4a58-4f4a-ae5c-51cc32105330",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "defd1a12-c594-4e85-9f8e-62fddcdfb959",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1416
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "",
                            "parse_only": "",
                            "query": "format_amp_user_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_amp_user_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run amp user query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_amp_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_amp_user_query() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_amp_user_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_amp_user_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_amp_user_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"tstats\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=format_30, name=\"run_amp_user_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1895,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get device info hostname",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run amp user query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c89762a0-0547-4235-81cd-1b69adf7f829",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1765,
                        "line_start": 1743,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 12,
                        "order": 63,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1900,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "run_amp_user_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1417
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "41c85fb3-56fb-4be9-920c-11c1b3a370cf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d754de80-4aa7-46a1-a87d-1ad494d2951c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4666ecde-6ceb-4fe4-b24d-572ae6aadb5e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1419
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ebedd21b-a5c8-4bbc-8c8e-732cf2ca4314",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4666ecde-6ceb-4fe4-b24d-572ae6aadb5e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "681c6448-4505-44f5-9a3a-75708c661db3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1425
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_7() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_30')\n\n    note_title = \"AMP User\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_amp(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_30:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "AMP User",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "run amp user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "27d9a359-f1ae-407f-8a1b-3a4c0ee552ab",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1824,
                        "line_start": 1811,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 7,
                        "order": 66,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2340,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "add_note_7",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1427
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_8(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_8() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_31')\n\n    note_title = \"McAfee User\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_mcafee(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_31:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "McAfee User",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "run mcafee user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "681c6448-4505-44f5-9a3a-75708c661db3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1861,
                        "line_start": 1848,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 8,
                        "order": 68,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2340,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "add_note_8",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1428
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "670ac67d-517c-42d3-9e0b-12b42d89dc6b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "681c6448-4505-44f5-9a3a-75708c661db3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "defd1a12-c594-4e85-9f8e-62fddcdfb959",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1429
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "88ca93b7-c0a6-44b1-ac59-70761bdfe6ab",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "50738ecd-ff1a-4606-9ffc-2f022ec187ab",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "33988c07-ace2-4603-9ab7-ee6836af9daa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1430
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "update artifact kasper ise"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_kasper_ise(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_kasper_ise() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.cef.destinationHostName', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_kaspersky_query:action_result.data.*.src'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['run_ISE_query_kaspersky:action_result.data.*._raw'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    cef_json = {\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_QueryFrom\" : \"KASPERSKY\" }\n    \n    phantom.debug(len(results_item_2_0))\n\n    for item in results_item_2_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"destinationAddress_MacAddress\" : \n                item2.split('=')[1].replace('-',':') , \n                \"destinationAddress_QueryFrom\" : \"KASPERSKY+ISE\" }\n\n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n     \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky user query",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 14,
                        "custom_callback": "",
                        "custom_code": "def update_artifact_kasper_ise(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_kasper_ise() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.cef.destinationHostName', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_kaspersky_query:action_result.data.*.src'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['run_ISE_query_kaspersky:action_result.data.*._raw'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    cef_json = {\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_QueryFrom\" : \"KASPERSKY\" }\n    \n    phantom.debug(len(results_item_2_0))\n\n    for item in results_item_2_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"destinationAddress_MacAddress\" : \n                item2.split('=')[1].replace('-',':') , \n                \"destinationAddress_QueryFrom\" : \"KASPERSKY+ISE\" }\n\n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n     \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "update artifact kasper ise",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "50738ecd-ff1a-4606-9ffc-2f022ec187ab",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1398,
                        "legacy": true,
                        "line_end": 1418,
                        "line_start": 1357,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 12,
                        "order": 49,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_kaspersky_query:action_result.data.*.src"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.id"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_ISE_query_kaspersky:action_result.data.*._raw"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2560,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_kasper_ise",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    parameters = []\n    cef_json = {\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_QueryFrom\" : \"KASPERSKY\" }\n    \n    phantom.debug(len(results_item_2_0))\n\n    for item in results_item_2_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"destinationAddress_MacAddress\" : \n                item2.split('=')[1].replace('-',':') , \n                \"destinationAddress_QueryFrom\" : \"KASPERSKY+ISE\" }\n\n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n     \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 1431
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bfa513bb-3daa-4351-8efd-3b4648872364",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9362785b-e278-42d4-ac4e-3340b2be7382",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "14799914-e58c-4f7f-b242-41d2c4528a6e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1432
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format 30"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_30(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_30() called')\n    \n    template = \"\"\"|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}|{1}|{2}|{3}|{4}|\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"run_amp_user_query:action_result.data.*.user\",\n        \"run_amp_user_query:action_result.data.*.src\",\n        \"run_amp_user_query:action_result.data.*.dest\",\n        \"run_amp_user_query:action_result.data.*.time\",\n        \"run_amp_user_query:action_result.data.*.count\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_30\", separator=\", \")\n\n    add_note_7(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run amp user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8e269d4f-018a-405d-9e82-09d9753025bb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1811,
                        "line_start": 1787,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 30,
                        "order": 65,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_amp_user_query:action_result.data.*.user"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_amp_user_query:action_result.data.*.src"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_amp_user_query:action_result.data.*.dest"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_amp_user_query:action_result.data.*.time"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "run_amp_user_query:action_result.data.*.count"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2120,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "format_30",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}|{1}|{2}|{3}|{4}|\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1434
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format 32"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_32(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_32() called')\n    \n    template = \"\"\"|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}|{1}|{2}|{3}|{4}|\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"run_kaspersky_user_query:action_result.data.*.user\",\n        \"run_kaspersky_user_query:action_result.data.*.src\",\n        \"run_kaspersky_user_query:action_result.data.*.dest\",\n        \"run_kaspersky_user_query:action_result.data.*.time\",\n        \"run_kaspersky_user_query:action_result.data.*.count\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_32\", separator=\", \")\n\n    add_note_9(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "14799914-e58c-4f7f-b242-41d2c4528a6e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1885,
                        "line_start": 1861,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 32,
                        "order": 69,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_kaspersky_user_query:action_result.data.*.user"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_kaspersky_user_query:action_result.data.*.src"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_kaspersky_user_query:action_result.data.*.dest"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_kaspersky_user_query:action_result.data.*.time"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "run_kaspersky_user_query:action_result.data.*.count"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2120,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "format_32",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}|{1}|{2}|{3}|{4}|\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1435
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7ec502dd-2523-4459-9a0a-85e2ce6acb13",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "14799914-e58c-4f7f-b242-41d2c4528a6e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "942c505c-5446-4b79-a698-d7de2f5be66a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1436
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_9(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_9() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_32')\n\n    note_title = \"McAfee User\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_kasper_ise(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_32:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "McAfee User",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "run kaspersky user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "942c505c-5446-4b79-a698-d7de2f5be66a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1898,
                        "line_start": 1885,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 9,
                        "order": 70,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2340,
                            "y": 840
                        },
                        "previous_function": "",
                        "previous_name": "add_note_9",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1437
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "update artifact mcafee"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_mcafee(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_mcafee() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.cef.destinationHostName', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_mcafee_query:action_result.data.*.dest_ip', 'run_mcafee_query:action_result.data.*.dest_mac', 'run_mcafee_query:action_result.data.*.os'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    \n    cef_json = {\n    \"destinationHostName_MacAddresss\" : results_item_1_1[0] ,\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_OS\" : results_item_1_2[0] ,\n    \"destinationHostName_QueryFrom\" : \"MCAFEE\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "run mcafee user query",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 14,
                        "custom_callback": "",
                        "custom_code": "def update_artifact_mcafee(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_mcafee() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.cef.destinationHostName', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_mcafee_query:action_result.data.*.dest_ip', 'run_mcafee_query:action_result.data.*.dest_mac', 'run_mcafee_query:action_result.data.*.os'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['run_mcafee_user_query:action_result.data.*.count'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_2_0 = [item[0] for item in results_data_2]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    \n    cef_json = {\n    \"destinationHostName_MacAddresss\" : results_item_1_1[0] ,\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_OS\" : results_item_1_2[0] ,\n    \"destinationHostName_QueryFrom\" : \"MCAFEE\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n    \n    \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "update artifact mcafee",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "defd1a12-c594-4e85-9f8e-62fddcdfb959",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 1469,
                        "line_start": 1418,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 13,
                        "order": 50,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_mcafee_query:action_result.data.*.dest_ip"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_mcafee_query:action_result.data.*.dest_mac"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_mcafee_query:action_result.data.*.os"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2560,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_mcafee",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    parameters = []\n    \n    cef_json = {\n    \"destinationHostName_MacAddresss\" : results_item_1_1[0] ,\n    \"destinationHostName_IP\" : results_item_1_0[0] ,\n    \"destinationHostName_OS\" : results_item_1_2[0] ,\n    \"destinationHostName_QueryFrom\" : \"MCAFEE\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationHostName\")\n    \n    \n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 1438
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bbc9e384-9431-48a6-8b52-52a9b6c82020",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "942c505c-5446-4b79-a698-d7de2f5be66a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "50738ecd-ff1a-4606-9ffc-2f022ec187ab",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1439
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "update artifact active dir..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def update_artifact_active_directory(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_active_directory() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_query_against_3_ad:action_result.data.*.entries.*.attributes'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    user_found = False\n    UAC_FLAG = {\n    \"SCRIPT\" : 0x0001 ,\n    \"ACCOUNTDISABLE\" : 0x0002 ,\n    \"HOMEDIR_REQUIRED\" : 0x0008 ,\n    \"LOCKOUT\" : 0x0010 ,\n    \"PASSWD_NOTREQD\" : 0x0020 ,\n    \"PASSWD_CANT_CHANGE\" : 0x0040 ,\n    \"ENCRYPTED_TEXT_PWD_ALLOWED\" : 0x0080 ,\n    \"TEMP_DUPLICATE_ACCOUNT\" : 0x0100 ,\n    \"NORMAL_ACCOUNT\" : 0x0200 ,\n    \"INTERDOMAIN_TRUST_ACCOUNT\" : 0x0800 ,\n    \"WORKSTATION_TRUST_ACCOUNT\" : 0x1000 ,\n    \"SERVER_TRUST_ACCOUNT\" : 0x2000 ,\n    \"DONT_EXPIRE_PASSWORD\" : 0x10000 ,\n    \"MNS_LOGON_ACCOUNT\" : 0x20000 ,\n    \"SMARTCARD_REQUIRED\" : 0x40000 ,\n    \"TRUSTED_FOR_DELEGATION\" : 0x80000 ,\n    \"NOT_DELEGATED\" : 0x100000 ,\n    \"USE_DES_KEY_ONLY\" : 0x200000 ,\n    \"DONT_REQ_PREAUTH\" : 0x400000 ,\n    \"PASSWORD_EXPIRED\" : 0x800000 ,\n    \"TRUSTED_TO_AUTH_FOR_DELEGATION\" : 0x1000000 ,\n    \"PARTIAL_SECRETS_ACCOUNT\" : 0x04000000\n    }\n    uac_flag = \"\"\n    for item in results_item_1_0:\n        if item:\n            user_uac = item['useraccountcontrol']\n            uac_flag = str(user_uac)\n            for flag in UAC_FLAG:\n                if UAC_FLAG[flag] & int(hex(user_uac),16):\n    \t            uac_flag += \",\" + flag\n        #phantom.debug(\"uac flag = \" + uac_flag)\n        if item and item['distinguishedname'].find('OU=CSOC-Users,DC=csoc,DC=krungthai,DC=local') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"CSOC AD\"  , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n        elif item and item['distinguishedname'].find('DC=KTBDOMAIN') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"KTB AD\"  , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n        elif item and item['distinguishedname'].find('DC=ktbcs') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"KTBCS AD\" , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n    if not user_found:\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"user not found\" }\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run query against 3 ad",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def update_artifact_active_directory(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_active_directory() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_query_against_3_ad:action_result.data.*.entries.*.attributes'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    user_found = False\n    UAC_FLAG = {\n    \"SCRIPT\" : 0x0001 ,\n    \"ACCOUNTDISABLE\" : 0x0002 ,\n    \"HOMEDIR_REQUIRED\" : 0x0008 ,\n    \"LOCKOUT\" : 0x0010 ,\n    \"PASSWD_NOTREQD\" : 0x0020 ,\n    \"PASSWD_CANT_CHANGE\" : 0x0040 ,\n    \"ENCRYPTED_TEXT_PWD_ALLOWED\" : 0x0080 ,\n    \"TEMP_DUPLICATE_ACCOUNT\" : 0x0100 ,\n    \"NORMAL_ACCOUNT\" : 0x0200 ,\n    \"INTERDOMAIN_TRUST_ACCOUNT\" : 0x0800 ,\n    \"WORKSTATION_TRUST_ACCOUNT\" : 0x1000 ,\n    \"SERVER_TRUST_ACCOUNT\" : 0x2000 ,\n    \"DONT_EXPIRE_PASSWORD\" : 0x10000 ,\n    \"MNS_LOGON_ACCOUNT\" : 0x20000 ,\n    \"SMARTCARD_REQUIRED\" : 0x40000 ,\n    \"TRUSTED_FOR_DELEGATION\" : 0x80000 ,\n    \"NOT_DELEGATED\" : 0x100000 ,\n    \"USE_DES_KEY_ONLY\" : 0x200000 ,\n    \"DONT_REQ_PREAUTH\" : 0x400000 ,\n    \"PASSWORD_EXPIRED\" : 0x800000 ,\n    \"TRUSTED_TO_AUTH_FOR_DELEGATION\" : 0x1000000 ,\n    \"PARTIAL_SECRETS_ACCOUNT\" : 0x04000000\n    }\n    uac_flag = \"\"\n    for item in results_item_1_0:\n        if item:\n            user_uac = item['useraccountcontrol']\n            uac_flag = str(user_uac)\n            for flag in UAC_FLAG:\n                if UAC_FLAG[flag] & int(hex(user_uac),16):\n    \t            uac_flag += \",\" + flag\n        #phantom.debug(\"uac flag = \" + uac_flag)\n        if item and item['distinguishedname'].find('OU=CSOC-Users,DC=csoc,DC=krungthai,DC=local') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"CSOC AD\"  , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n        elif item and item['distinguishedname'].find('DC=KTBDOMAIN') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"KTB AD\"  , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n        elif item and item['distinguishedname'].find('DC=ktbcs') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"KTBCS AD\" , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n    if not user_found:\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"user not found\" }\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "update artifact active directory",
                        "description": "run query against 3 AD (csoc, ktb and ktbcs). append artifact regarding AD found.",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "db229a65-ba50-456b-9c28-7738ff838f43",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 595,
                        "line_start": 442,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "run query against 3 AD (csoc, ktb and ktbcs). append artifact regarding AD found.",
                        "number": 6,
                        "order": 19,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_query_against_3_ad:action_result.data.*.entries.*.attributes"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_active_directory",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    user_found = False\n    UAC_FLAG = {\n    \"SCRIPT\" : 0x0001 ,\n    \"ACCOUNTDISABLE\" : 0x0002 ,\n    \"HOMEDIR_REQUIRED\" : 0x0008 ,\n    \"LOCKOUT\" : 0x0010 ,\n    \"PASSWD_NOTREQD\" : 0x0020 ,\n    \"PASSWD_CANT_CHANGE\" : 0x0040 ,\n    \"ENCRYPTED_TEXT_PWD_ALLOWED\" : 0x0080 ,\n    \"TEMP_DUPLICATE_ACCOUNT\" : 0x0100 ,\n    \"NORMAL_ACCOUNT\" : 0x0200 ,\n    \"INTERDOMAIN_TRUST_ACCOUNT\" : 0x0800 ,\n    \"WORKSTATION_TRUST_ACCOUNT\" : 0x1000 ,\n    \"SERVER_TRUST_ACCOUNT\" : 0x2000 ,\n    \"DONT_EXPIRE_PASSWORD\" : 0x10000 ,\n    \"MNS_LOGON_ACCOUNT\" : 0x20000 ,\n    \"SMARTCARD_REQUIRED\" : 0x40000 ,\n    \"TRUSTED_FOR_DELEGATION\" : 0x80000 ,\n    \"NOT_DELEGATED\" : 0x100000 ,\n    \"USE_DES_KEY_ONLY\" : 0x200000 ,\n    \"DONT_REQ_PREAUTH\" : 0x400000 ,\n    \"PASSWORD_EXPIRED\" : 0x800000 ,\n    \"TRUSTED_TO_AUTH_FOR_DELEGATION\" : 0x1000000 ,\n    \"PARTIAL_SECRETS_ACCOUNT\" : 0x04000000\n    }\n    uac_flag = \"\"\n    for item in results_item_1_0:\n        if item:\n            user_uac = item['useraccountcontrol']\n            uac_flag = str(user_uac)\n            for flag in UAC_FLAG:\n                if UAC_FLAG[flag] & int(hex(user_uac),16):\n    \t            uac_flag += \",\" + flag\n        #phantom.debug(\"uac flag = \" + uac_flag)\n        if item and item['distinguishedname'].find('OU=CSOC-Users,DC=csoc,DC=krungthai,DC=local') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"CSOC AD\"  , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n        elif item and item['distinguishedname'].find('DC=KTBDOMAIN') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"KTB AD\"  , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n        elif item and item['distinguishedname'].find('DC=ktbcs') != -1:\n            #phantom.debug(item['useraccountcontrol'])\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"KTBCS AD\" , \"destinationUserName_UAC\" : uac_flag}\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n            user_found = True\n    if not user_found:\n            parameters = []\n            cef_json = {\"destinationUserName_AD\" : \"user not found\" }\n            # build parameters list for 'update_guid' call\n            parameters.append({\n            'artifact_id': container_item_0[0],\n            'name': \"\",\n            'label': \"\",\n            'severity': \"\",\n            'cef_json': cef_json,\n            'cef_types_json': \"\",\n            'tags': \"\",\n            'overwrite': \"\",\n            'artifact_json': \"\",\n            })\n            phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_ad\")\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################",
                        "warn": false,
                        "z": 1440
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "check active IP match sr..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def check_active_IP_match_src_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('check_active_IP_match_src_IP() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.sourceAddress', 'artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['get_device_info_src_ip:action_result.data.*.data.active', 'get_device_info_src_ip:action_result.data.*.data.internal_ips', 'get_device_info_src_ip:action_result.data.*.data.connector_guid', 'get_device_info_src_ip:action_result.data.*.data.network_addresses.*.mac', 'get_device_info_src_ip:action_result.data.*.data.hostname'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_1_3 = [item[3] for item in results_data_1]\n    results_item_1_4 = [item[4] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    #phantom.debug(results_data_1)\n    matched_guid = []\n    matched_mac = []\n    matched_hostname = []\n    matched_guid_count = 0\n    phantom.debug(container_item_0)\n    phantom.debug(results_data_1)\n    for cguid in results_data_1:\n        if  cguid[0] == True and container_item_0[0] in cguid[1]:\n            matched_guid.append(cguid[2])\n            matched_mac.append(cguid[3])\n            matched_hostname.append(cguid[4])\n            matched_guid_count += 1\n    phantom.debug(matched_guid)\n    \n    parameters = []\n    \n    cef_json = {\"sourceAddress_connector_guid\" : matched_guid[0] , \"sourceAddress_MacAddresss\" : matched_mac[0] ,\"sourceAddress_hostname\" : matched_hostname[0].split(\".\")[0] ,\"sourceAddress_fullhostname\" : matched_hostname[0] , \"sourceAddress_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_guid\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run src user query",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def check_active_IP_match_src_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('check_active_IP_match_src_IP() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.sourceAddress', 'artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['get_device_info_src_ip:action_result.data.*.data.active', 'get_device_info_src_ip:action_result.data.*.data.internal_ips', 'get_device_info_src_ip:action_result.data.*.data.connector_guid', 'get_device_info_src_ip:action_result.data.*.data.network_addresses.*.mac', 'get_device_info_src_ip:action_result.data.*.data.hostname'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_1_3 = [item[3] for item in results_data_1]\n    results_item_1_4 = [item[4] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    #phantom.debug(results_data_1)\n    matched_guid = []\n    matched_mac = []\n    matched_hostname = []\n    matched_guid_count = 0\n    phantom.debug(container_item_0)\n    phantom.debug(results_data_1)\n    for cguid in results_data_1:\n        if  cguid[0] == True and container_item_0[0] in cguid[1]:\n            matched_guid.append(cguid[2])\n            matched_mac.append(cguid[3])\n            matched_hostname.append(cguid[4])\n            matched_guid_count += 1\n    phantom.debug(matched_guid)\n    \n    parameters = []\n    \n    cef_json = {\"sourceAddress_connector_guid\" : matched_guid[0] , \"sourceAddress_MacAddresss\" : matched_mac[0] ,\"sourceAddress_hostname\" : matched_hostname[0].split(\".\")[0] ,\"sourceAddress_fullhostname\" : matched_hostname[0] , \"sourceAddress_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_guid\")\n    \n    \n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "check active IP match src IP",
                        "description": "check recent IP in each result to match sourceaddress from container",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "13498753-5acd-4266-9baa-9d39f8f4e1a9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 124,
                        "legacy": true,
                        "line_end": 124,
                        "line_start": 66,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 2,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 1,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "artifact:*.cef.sourceAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_device_info_src_ip:action_result.data.*.data.active"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_device_info_src_ip:action_result.data.*.data.internal_ips"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "get_device_info_src_ip:action_result.data.*.data.connector_guid"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "get_device_info_src_ip:action_result.data.*.data.network_addresses.*.mac"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "get_device_info_src_ip:action_result.data.*.data.hostname"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "artifact:*.id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2560,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "check_active_IP_match_src_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    #phantom.debug(results_data_1)\n    matched_guid = []\n    matched_mac = []\n    matched_hostname = []\n    matched_guid_count = 0\n    phantom.debug(container_item_0)\n    phantom.debug(results_data_1)\n    for cguid in results_data_1:\n        if  cguid[0] == True and container_item_0[0] in cguid[1]:\n            matched_guid.append(cguid[2])\n            matched_mac.append(cguid[3])\n            matched_hostname.append(cguid[4])\n            matched_guid_count += 1\n    phantom.debug(matched_guid)\n    \n    parameters = []\n    \n    cef_json = {\"sourceAddress_connector_guid\" : matched_guid[0] , \"sourceAddress_MacAddresss\" : matched_mac[0] ,\"sourceAddress_hostname\" : matched_hostname[0].split(\".\")[0] ,\"sourceAddress_fullhostname\" : matched_hostname[0] , \"sourceAddress_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_guid\")\n    \n    \n\n",
                        "warn": false,
                        "z": 1442
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "check active IP match ds..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def check_active_IP_match_dst_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('check_active_IP_match_dst_IP() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationAddress', 'artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['get_device_info_dst_ip:action_result.data.*.data.active', 'get_device_info_dst_ip:action_result.data.*.data.internal_ips', 'get_device_info_dst_ip:action_result.data.*.data.connector_guid', 'get_device_info_dst_ip:action_result.data.*.data.network_addresses.*.mac', 'get_device_info_dst_ip:action_result.data.*.data.hostname'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_1_3 = [item[3] for item in results_data_1]\n    results_item_1_4 = [item[4] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    matched_guid = []\n    matched_mac = []\n    matched_hostname = []\n    matched_guid_count = 0\n    phantom.debug(container_item_0)\n    phantom.debug(results_data_1)\n    for cguid in results_data_1:\n        if  cguid[0] == True and container_item_0[0] in cguid[1]:\n            matched_guid.append(cguid[2])\n            matched_mac.append(cguid[3])\n            matched_hostname.append(cguid[4])\n            matched_guid_count += 1\n    phantom.debug(matched_guid)\n    \n    parameters = []\n    cef_json = {\"destinationAddress_connector_guid\" : matched_guid[0] , \"destinationAddress_MacAddresss\" : matched_mac[0] ,\"destinationAddress_hostname\" : matched_hostname[0].split(\".\")[0] ,\"destinationAddress_fullhostname\" : matched_hostname[0] , \"destinationAddress_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress_guid\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run dst user query",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 16,
                        "custom_callback": "",
                        "custom_code": "def check_active_IP_match_dst_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('check_active_IP_match_dst_IP() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationAddress', 'artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['get_device_info_dst_ip:action_result.data.*.data.active', 'get_device_info_dst_ip:action_result.data.*.data.internal_ips', 'get_device_info_dst_ip:action_result.data.*.data.connector_guid', 'get_device_info_dst_ip:action_result.data.*.data.network_addresses.*.mac', 'get_device_info_dst_ip:action_result.data.*.data.hostname'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    container_item_1 = [item[1] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n    results_item_1_1 = [item[1] for item in results_data_1]\n    results_item_1_2 = [item[2] for item in results_data_1]\n    results_item_1_3 = [item[3] for item in results_data_1]\n    results_item_1_4 = [item[4] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    matched_guid = []\n    matched_mac = []\n    matched_hostname = []\n    matched_guid_count = 0\n    phantom.debug(container_item_0)\n    phantom.debug(results_data_1)\n    for cguid in results_data_1:\n        if  cguid[0] == True and container_item_0[0] in cguid[1]:\n            matched_guid.append(cguid[2])\n            matched_mac.append(cguid[3])\n            matched_hostname.append(cguid[4])\n            matched_guid_count += 1\n    phantom.debug(matched_guid)\n    \n    parameters = []\n    cef_json = {\"destinationAddress_connector_guid\" : matched_guid[0] , \"destinationAddress_MacAddresss\" : matched_mac[0] ,\"destinationAddress_hostname\" : matched_hostname[0].split(\".\")[0] ,\"destinationAddress_fullhostname\" : matched_hostname[0] , \"destinationAddress_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress_guid\")\n    \n    \n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "check active IP match dst IP",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "790c8834-1d51-437a-8195-f65c6080001f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 829,
                        "line_start": 773,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 8,
                        "order": 28,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_device_info_dst_ip:action_result.data.*.data.active"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "get_device_info_dst_ip:action_result.data.*.data.internal_ips"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "get_device_info_dst_ip:action_result.data.*.data.connector_guid"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "get_device_info_dst_ip:action_result.data.*.data.network_addresses.*.mac"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "get_device_info_dst_ip:action_result.data.*.data.hostname"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "artifact:*.id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2560,
                            "y": -120
                        },
                        "previous_function": "",
                        "previous_name": "check_active_IP_match_dst_IP",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    matched_guid = []\n    matched_mac = []\n    matched_hostname = []\n    matched_guid_count = 0\n    phantom.debug(container_item_0)\n    phantom.debug(results_data_1)\n    for cguid in results_data_1:\n        if  cguid[0] == True and container_item_0[0] in cguid[1]:\n            matched_guid.append(cguid[2])\n            matched_mac.append(cguid[3])\n            matched_hostname.append(cguid[4])\n            matched_guid_count += 1\n    phantom.debug(matched_guid)\n    \n    parameters = []\n    cef_json = {\"destinationAddress_connector_guid\" : matched_guid[0] , \"destinationAddress_MacAddresss\" : matched_mac[0] ,\"destinationAddress_hostname\" : matched_hostname[0].split(\".\")[0] ,\"destinationAddress_fullhostname\" : matched_hostname[0] , \"destinationAddress_QueryFrom\" : \"AMP\" }\n    \n    # build parameters list for 'update_guid' call\n    parameters.append({\n    'artifact_id': container_item_1[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_destinationAddress_guid\")\n    \n    \n\n",
                        "warn": false,
                        "z": 1443
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "89aac08a-c461-4507-b53e-b7b4225a9573",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ace8ad3a-3f42-4eea-b58f-8eefbee83478",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a85760e8-89c7-4b22-bbb8-bc04ccaab439",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1444
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format 33"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_33(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_33() called')\n    \n    template = \"\"\"|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}||{2}|{3}|{4}|\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"run_dst_user_query:action_result.data.*.user\",\n        \"run_dst_user_query:action_result.data.*.src\",\n        \"run_dst_user_query:action_result.data.*.dest\",\n        \"run_dst_user_query:action_result.data.*.time\",\n        \"run_dst_user_query:action_result.data.*.count\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_33\", separator=\", \")\n\n    add_note_11(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run dst user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a85760e8-89c7-4b22-bbb8-bc04ccaab439",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1922,
                        "line_start": 1898,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 33,
                        "order": 71,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_dst_user_query:action_result.data.*.user"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_dst_user_query:action_result.data.*.src"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_dst_user_query:action_result.data.*.dest"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_dst_user_query:action_result.data.*.time"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "run_dst_user_query:action_result.data.*.count"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": -120
                        },
                        "previous_function": "",
                        "previous_name": "format_33",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}||{2}|{3}|{4}|\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1447
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "78e81387-8bae-4b2b-80d8-fbb1d854f99c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "344dfe6a-29c6-4652-9fed-5a22513f2e0c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "577c9ff8-3c7c-4c00-8a52-84bd61485f0e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1448
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7b62fd83-b00d-47e2-a4ed-c44406baa3f5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "577c9ff8-3c7c-4c00-8a52-84bd61485f0e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "566ed595-fdfc-4473-9b22-a60cb3d596de",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1450
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b8e7f9f2-3d22-4a0e-a98f-5914e231c6cd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a85760e8-89c7-4b22-bbb8-bc04ccaab439",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9116c038-6ef6-4001-b6b4-b5738e05a609",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1452
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "96d507bc-078b-43f4-a45e-abb5dc92b968",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9116c038-6ef6-4001-b6b4-b5738e05a609",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "790c8834-1d51-437a-8195-f65c6080001f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1454
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c2d668d2-d897-43d9-8b3b-a6bfabf516a1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "566ed595-fdfc-4473-9b22-a60cb3d596de",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "13498753-5acd-4266-9baa-9d39f8f4e1a9",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1455
                    },
                    {
                        "action": "get data",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "headers": "{\"Authorization\": \"Basic NzU4MWVjYTU3YjAzMjZhMTJiM2U6ODJjNGFhZmYtNzExMS00N2JmLTg4YjUtNzg2N2E0MTQzZTY1\"}",
                            "location": "for_amp_query_dst_ip:formatted_data",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "cisco amp base64",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "headers": "{\"Authorization\": \"Basic NzU4MWVjYTU3YjAzMjZhMTJiM2U6ODJjNGFhZmYtNzExMS00N2JmLTg4YjUtNzg2N2E0MTQzZTY1\"}",
                                    "location": "for_amp_query_dst_ip:formatted_data",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 103,
                                "loaded": false,
                                "missing": false,
                                "name": "cisco amp base64",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 2,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint?query=string)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 1,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "103",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get amp event data dst ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_amp_event_data_dst_ip(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_amp_event_data_dst_ip() called')\n\n    # collect data for 'get_amp_event_data_dst_ip' call\n    formatted_data_1 = phantom.get_format_data(name='for_amp_query_dst_ip')\n\n    parameters = []\n    \n    # build parameters list for 'get_amp_event_data_dst_ip' call\n    parameters.append({\n        'headers': \"{\\\"Authorization\\\": \\\"Basic NzU4MWVjYTU3YjAzMjZhMTJiM2U6ODJjNGFhZmYtNzExMS00N2JmLTg4YjUtNzg2N2E0MTQzZTY1\\\"}\",\n        'location': formatted_data_1,\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"get data\", parameters=parameters, assets=['cisco amp base64'], callback=decision_9, name=\"get_amp_event_data_dst_ip\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get amp event data dst ip",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4a693847-ea71-4d40-a9e3-3fb385440a2a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 647,
                        "line_start": 628,
                        "message": "Configuring now",
                        "name": "get data",
                        "notes": "",
                        "number": 2,
                        "order": 22,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "get_amp_event_data_dst_ip",
                        "required_params": {
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1457
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "update artifact src maca..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_src_macaddr_from_ise(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_src_macaddr_from_ise() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_ISE_query_src_IP:action_result.data.*.raw_msg'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n\n    for item in results_item_1_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"sourceAddress_MacAddress\" : item2.split('=')[1].replace('-',':') , \"sourceAddress_QueryFrom\" : \"ISE\" }\n                \n    # build parameters list for 'update_mac' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_mac\")\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run ISE query src IP",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def update_artifact_src_macaddr_from_ise(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_macaddr_from_ise() called')\n    \n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n    results_data_1 = phantom.collect2(container=container, datapath=['run_query_1:action_result.data.*.raw_msg'], action_results=results)\n    container_item_0 = [item[0] for item in container_data]\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n\n    for item in results_item_1_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"sourceAddress_MacAddress\" : item2.split('=')[1].replace('-',':') , \"sourceAddress_QueryFrom\" : \"ISE\" }\n                \n    # build parameters list for 'update_mac' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_mac\")\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "update artifact src macaddr from ise",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c72cece3-522f-4989-ad41-2d4a349e6451",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 210,
                        "line_start": 162,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 3,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.id"
                            },
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_ISE_query_src_IP:action_result.data.*.raw_msg"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_src_macaddr_from_ise",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    parameters = []\n\n    for item in results_item_1_0:\n        ltmp = item.split(',')\n        for item2 in ltmp:\n            if item2.split('=')[0].strip() == \"Calling-Station-ID\":\n                cef_json = {\"sourceAddress_MacAddress\" : item2.split('=')[1].replace('-',':') , \"sourceAddress_QueryFrom\" : \"ISE\" }\n                \n    # build parameters list for 'update_mac' call\n    parameters.append({\n    'artifact_id': container_item_0[0],\n    'name': \"\",\n    'label': \"\",\n    'severity': \"\",\n    'cef_json': cef_json,\n    'cef_types_json': \"\",\n    'tags': \"\",\n    'overwrite': \"\",\n    'artifact_json': \"\",\n    })\n    \n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_sourceAddress_mac\")\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################\n    #####################################",
                        "warn": false,
                        "z": 1458
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format dst user query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_dst_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_dst_user_query() called')\n    \n    template = \"\"\"summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\\\"$\\\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\\\"%m-%d-%Y %H:%M:%S\\\" ctime(time) AS time\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"get_device_info_dst_ip:action_result.data.*.data.hostname\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_dst_user_query\", separator=\", \")\n\n    run_dst_user_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get device info dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format dst user query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f7b1b4e9-d212-44b1-83c2-dcbc31c5dff8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1639,
                        "line_start": 1619,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 24,
                        "order": 57,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_device_info_dst_ip:action_result.data.*.data.hostname"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": -120
                        },
                        "previous_function": "",
                        "previous_name": "format_dst_user_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\"$\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\"%m-%d-%Y %H:%M:%S\" ctime(time) AS time",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1459
                    },
                    {
                        "action": "get device info",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "connector_guid": "custom_function_ip_result:custom_function:connector_guid"
                        },
                        "angle": 0,
                        "app": "FireAMP",
                        "appid": "897890aa-14f5-4d6c-b68c-e557ff30d251",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get device info",
                                "actions": [
                                    "get device info",
                                    "hunt url",
                                    "hunt ip",
                                    "hunt file",
                                    "list endpoints",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "FireAMP",
                                "app_version": "2.0.5",
                                "appid": "897890aa-14f5-4d6c-b68c-e557ff30d251",
                                "asset_name": "cisco fireamp asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "connector_guid": "custom_function_ip_result:custom_function:connector_guid"
                                },
                                "has_app": true,
                                "id": 13,
                                "loaded": false,
                                "missing": false,
                                "name": "cisco fireamp asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_path": "action_result.parameter.connector_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Active",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.data.active",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "Connector GUID",
                                        "column_order": 2,
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_path": "action_result.data.*.data.connector_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.connector_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.external_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.group_guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Host Name",
                                        "column_order": 1,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.data.hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.install_date",
                                        "data_type": "string",
                                        "example_value": "2021-03-01T08:34:23Z"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.internal_ips",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.is_compromised",
                                        "data_type": "boolean",
                                        "example_value": false
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.isolation.available",
                                        "data_type": "boolean",
                                        "example_value": false
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.isolation.status",
                                        "data_type": "string",
                                        "example_value": "not_isolated"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.last_seen",
                                        "data_type": "string",
                                        "example_value": "2021-03-01T08:37:05Z"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.computer",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.group",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.data.links.trajectory",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "IPs",
                                        "column_order": 0,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "mac address"
                                        ],
                                        "data_path": "action_result.data.*.data.network_addresses.*.mac",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Operating System",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.data.operating_system",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.orbital.status",
                                        "data_type": "string",
                                        "example_value": "not_enabled"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.policy.guid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.policy.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.data.windows_processor_id",
                                        "data_type": "string",
                                        "example_value": "b927af6438501de"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.metadata.links.self",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_endpoints",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "connector_guid": {
                                        "contains": [
                                            "fireamp connector guid"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Connector GUID on endpoint",
                                        "key": "connector_guid",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "FireAMP",
                                "product_vendor": "Cisco Systems",
                                "targets": "13",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "get device info hostname"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_device_info_hostname(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_device_info_hostname() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    custom_function_ip_result__connector_guid = json.loads(phantom.get_run_data(key='custom_function_ip_result:connector_guid'))\n    # collect data for 'get_device_info_hostname' call\n\n    parameters = []\n    \n    # build parameters list for 'get_device_info_hostname' call\n    parameters.append({\n        'connector_guid': custom_function_ip_result__connector_guid,\n    })\n\n    phantom.act(action=\"get device info\", parameters=parameters, assets=['cisco fireamp asset'], callback=format_amp_user_query, name=\"get_device_info_hostname\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1339,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "get device info hostname",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "136a6c23-cec8-4576-8539-2372633dd78f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1305,
                        "line_start": 1286,
                        "message": "Configuring now",
                        "name": "get device info",
                        "notes": "",
                        "number": 4,
                        "order": 47,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1460,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "get_device_info_hostname",
                        "required_params": {
                            "connector_guid": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1462
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format amp user query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_amp_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_amp_user_query() called')\n    \n    template = \"\"\"summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\\\"$\\\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\\\"%m-%d-%Y %H:%M:%S\\\" ctime(time) AS time\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationHostName\",\n        \"get_device_info_hostname:action_result.data.*.data.network_addresses.*.ip\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_amp_user_query\", separator=\", \")\n\n    run_amp_user_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get device info hostname",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format amp user query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "015d78b4-697f-4125-bf67-ebe193c048c0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1701,
                        "line_start": 1681,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 28,
                        "order": 60,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_device_info_hostname:action_result.data.*.data.network_addresses.*.ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1680,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "format_amp_user_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\"$\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\"%m-%d-%Y %H:%M:%S\" ctime(time) AS time",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1464
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_11(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_11() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_33')\n\n    note_title = \"Destination User\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    check_active_IP_match_dst_IP(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_33:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Destination User",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "run dst user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9116c038-6ef6-4001-b6b4-b5738e05a609",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1972,
                        "line_start": 1959,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 11,
                        "order": 74,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2320,
                            "y": -120
                        },
                        "previous_function": "",
                        "previous_name": "add_note_11",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1467
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_10(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_10() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_34')\n\n    note_title = \"Source User\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    check_active_IP_match_src_IP(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_34:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Source User",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "run src user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "566ed595-fdfc-4473-9b22-a60cb3d596de",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1959,
                        "line_start": 1946,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 10,
                        "order": 73,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2300,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "add_note_10",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1468
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "",
                            "parse_only": "",
                            "query": "format_kaspersky_user_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_kaspersky_user_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run kaspersky user query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_kaspersky_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_kaspersky_user_query() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_kaspersky_user_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_kaspersky_user_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_kaspersky_user_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"tstats\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=format_32, name=\"run_kaspersky_user_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "run ISE query kaspersky",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run kaspersky user query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9362785b-e278-42d4-ac4e-3340b2be7382",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1787,
                        "line_start": 1765,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 13,
                        "order": 64,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2340,
                            "y": 980
                        },
                        "previous_function": "",
                        "previous_name": "run_kaspersky_user_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1469
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format kaspersky user q..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_kaspersky_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_kaspersky_user_query() called')\n    \n    template = \"\"\"summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\\\"$\\\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\\\"%m-%d-%Y %H:%M:%S\\\" ctime(time) AS time\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationHostName\",\n        \"run_kaspersky_query:action_result.data.*.src\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_kaspersky_user_query\", separator=\", \")\n\n    run_kaspersky_user_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run ISE query kaspersky",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format kaspersky user query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0dc1cbbc-d989-47b9-a178-37443f7177a3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1721,
                        "line_start": 1701,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 29,
                        "order": 61,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_kaspersky_query:action_result.data.*.src"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2120,
                            "y": 980
                        },
                        "previous_function": "",
                        "previous_name": "format_kaspersky_user_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\"$\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\"%m-%d-%Y %H:%M:%S\" ctime(time) AS time",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1470
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format mcafee user query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_mcafee_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_mcafee_user_query() called')\n    \n    template = \"\"\"summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\\\"$\\\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\\\"%m-%d-%Y %H:%M:%S\\\" ctime(time) AS time\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationHostName\",\n        \"run_mcafee_query:action_result.data.*.dest_ip\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_mcafee_user_query\", separator=\", \")\n\n    run_mcafee_user_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format mcafee user query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2b72d32b-ccc7-4212-a273-08358b422297",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1681,
                        "line_start": 1661,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 27,
                        "order": 59,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationHostName"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_mcafee_query:action_result.data.*.dest_ip"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1460,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "format_mcafee_user_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\"$\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\"%m-%d-%Y %H:%M:%S\" ctime(time) AS time",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1471
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "",
                            "parse_only": "",
                            "query": "format_mcafee_user_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_mcafee_user_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run mcafee user query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_mcafee_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_mcafee_user_query() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_mcafee_user_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_mcafee_user_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_mcafee_user_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"tstats\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=format_31, name=\"run_mcafee_user_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "run kaspersky query, run mcafee query, run amp query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run mcafee user query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d754de80-4aa7-46a1-a87d-1ad494d2951c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1743,
                        "line_start": 1721,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 11,
                        "order": 62,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1680,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "run_mcafee_user_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1472
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format 31"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_31(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_31() called')\n    \n    template = \"\"\"|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}||{2}|{3}|{4}|\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"run_mcafee_user_query:action_result.data.*.user\",\n        \"run_mcafee_user_query:action_result.data.*.src\",\n        \"run_mcafee_user_query:action_result.data.*.dest\",\n        \"run_mcafee_user_query:action_result.data.*.time\",\n        \"run_mcafee_user_query:action_result.data.*.count\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_31\", separator=\", \")\n\n    add_note_8(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run mcafee user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4666ecde-6ceb-4fe4-b24d-572ae6aadb5e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1848,
                        "line_start": 1824,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 31,
                        "order": 67,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_mcafee_user_query:action_result.data.*.user"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_mcafee_user_query:action_result.data.*.src"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_mcafee_user_query:action_result.data.*.dest"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_mcafee_user_query:action_result.data.*.time"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "run_mcafee_user_query:action_result.data.*.count"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2120,
                            "y": 600
                        },
                        "previous_function": "",
                        "previous_name": "format_31",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}||{2}|{3}|{4}|\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1473
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "tstats",
                            "display": "",
                            "parse_only": "",
                            "query": "format_user_query:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "tstats",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_user_query:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run src user query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_src_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_src_user_query() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_src_user_query' call\n    formatted_data_1 = phantom.get_format_data(name='format_user_query')\n\n    parameters = []\n    \n    # build parameters list for 'run_src_user_query' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"tstats\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=format_34, name=\"run_src_user_query\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get device info src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run src user query",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "344dfe6a-29c6-4652-9fed-5a22513f2e0c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1619,
                        "line_start": 1597,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 8,
                        "order": 56,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1860,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "run_src_user_query",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1474
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format user query"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_user_query(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_user_query() called')\n    \n    template = \"\"\"summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\\\"$\\\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\\\"%m-%d-%Y %H:%M:%S\\\" ctime(time) AS time\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.sourceAddress\",\n        \"get_device_info_src_ip:action_result.data.*.data.hostname\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_user_query\", separator=\", \")\n\n    run_src_user_query(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "get device info src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format user query",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2a6e09fb-fd8d-4318-8040-ac9d425fed45",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1597,
                        "line_start": 1577,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 23,
                        "order": 55,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.sourceAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "get_device_info_src_ip:action_result.data.*.data.hostname"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "format_user_query",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "summariesonly=true count max(_time) as _time from datamodel=Authentication where Authentication.user!=unknown AND (Authentication.src={1}* OR Authentication.src={0}) AND Authentication.user!=\"$\" Authentication.action=success earliest=-24d latest=now by Authentication.user Authentication.src Authentication.dest Authentication.action\n| rename Authentication.* AS *\n| rename _time as time \n| convert timeformat=\"%m-%d-%Y %H:%M:%S\" ctime(time) AS time",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1475
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "command": "search",
                            "display": "",
                            "parse_only": "",
                            "query": "format_ISE_query_src_IP:formatted_data"
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "2.3.3",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk es asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "command": "search",
                                    "display": "",
                                    "parse_only": "",
                                    "query": "format_ISE_query_src_IP:formatted_data"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk es asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.command",
                                        "data_type": "string",
                                        "example_values": [
                                            "savedsearch"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.display",
                                        "data_type": "string",
                                        "example_values": [
                                            "_time",
                                            "index"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.parse_only",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "\"Send to test\""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*._bkt",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._cd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._indextime",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._kv",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "column_name": "Raw",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*._raw",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._serial",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._si",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*._subsecond",
                                        "data_type": "string",
                                        "example_value": ".427"
                                    },
                                    {
                                        "column_name": "Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*._time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.a",
                                        "data_type": "string",
                                        "example_value": "abc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.host",
                                        "data_type": "string",
                                        "example_value": "test"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.info",
                                        "data_type": "string",
                                        "example_value": "granted"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search",
                                        "data_type": "string",
                                        "example_value": "search [| makeresults | eval myfield = \"test\" | table search] `notable` | table event_id"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.search_type",
                                        "data_type": "string",
                                        "example_value": "adhoc"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sid",
                                        "data_type": "string",
                                        "example_value": "1621953839.25275"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.source",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.content.sourcetype",
                                        "data_type": "string",
                                        "example_value": "source"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count",
                                        "data_type": "string",
                                        "example_value": "3058733"
                                    },
                                    {
                                        "data_path": "action_result.data.*.count(host)",
                                        "data_type": "string",
                                        "example_value": "28"
                                    },
                                    {
                                        "column_name": "Host",
                                        "column_order": 0,
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.host",
                                        "data_type": "string",
                                        "example_values": [
                                            "10.1.67.187:8088"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.index",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Acceleration_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Adhoc_Jobs",
                                        "data_type": "string",
                                        "example_value": "0"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Failed_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Realtime_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Scheduled_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.is_not_Subsearch_Jobs",
                                        "data_type": "string",
                                        "example_value": "1"
                                    },
                                    {
                                        "data_path": "action_result.data.*.linecount",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.source",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sourcetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.splunk_server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.user",
                                        "data_type": "string",
                                        "example_value": "admin"
                                    },
                                    {
                                        "data_path": "action_result.data.*.values(source)",
                                        "data_type": "string",
                                        "example_value": "/opt/splunk/var/log/splunk/scheduler.log"
                                    },
                                    {
                                        "data_path": "action_result.summary.sid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1612177958.977510"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.total_events",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Sid: 1612177958.977510, Total events: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "command": {
                                        "data_type": "string",
                                        "default": "search",
                                        "description": "Beginning command (in Splunk Processing Language)",
                                        "key": "command",
                                        "order": 0,
                                        "required": false,
                                        "value_list": [
                                            "search",
                                            "eval",
                                            "savedsearch",
                                            "stats",
                                            "table",
                                            "tstats"
                                        ]
                                    },
                                    "display": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Display fields (comma-separated)",
                                        "key": "display",
                                        "order": 2,
                                        "required": false
                                    },
                                    "parse_only": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Parse only",
                                        "key": "parse_only",
                                        "order": 3,
                                        "required": false
                                    },
                                    "query": {
                                        "contains": [
                                            "splunk query"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Query to run (in Splunk Processing Language)",
                                        "key": "query",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "35",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run ISE query src IP"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_ISE_query_src_IP(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_ISE_query_src_IP() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_ISE_query_src_IP' call\n    formatted_data_1 = phantom.get_format_data(name='format_ISE_query_src_IP')\n\n    parameters = []\n    \n    # build parameters list for 'run_ISE_query_src_IP' call\n    parameters.append({\n        'query': formatted_data_1,\n        'command': \"search\",\n        'display': \"\",\n        'parse_only': \"\",\n    })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['splunk es asset'], callback=decision_3, name=\"run_ISE_query_src_IP\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 194,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "get amp event data src ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "run ISE query src IP",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "dbe31fc7-cc3d-4fe5-b241-38e187a80d5f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 162,
                        "line_start": 140,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "run_ISE_query_src_IP",
                        "required_params": {
                            "query": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1476
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_3() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_multiple_guid_dst_ip')\n\n    note_title = \"Multiple Active GUID detected\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_multiple_guid_dst_ip:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Multiple Active GUID detected",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "get amp event data dst ip",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9eb23782-d25e-4982-bb58-dd0b1cd4b198",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 864,
                        "line_start": 852,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 3,
                        "order": 30,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "add_note_3",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1477
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format 34"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_34(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_34() called')\n    \n    template = \"\"\"|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}|{1}|{2}|{3}|{4}|\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"run_src_user_query:action_result.data.*.user\",\n        \"run_src_user_query:action_result.data.*.src\",\n        \"run_src_user_query:action_result.data.*.dest\",\n        \"run_src_user_query:action_result.data.*.time\",\n        \"run_src_user_query:action_result.data.*.count\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_34\", separator=\", \")\n\n    add_note_10(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run src user query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "577c9ff8-3c7c-4c00-8a52-84bd61485f0e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 1946,
                        "line_start": 1922,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 34,
                        "order": 72,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "run_src_user_query:action_result.data.*.user"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "run_src_user_query:action_result.data.*.src"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "run_src_user_query:action_result.data.*.dest"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "run_src_user_query:action_result.data.*.time"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "run_src_user_query:action_result.data.*.count"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2080,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "format_34",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "|user|src|dest|time|count|\n| :--- | :--- | :--- | :--- | :--- |\n%%\n|{0}|{1}|{2}|{3}|{4}|\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1478
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-06-07T10:06:00.877623+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}