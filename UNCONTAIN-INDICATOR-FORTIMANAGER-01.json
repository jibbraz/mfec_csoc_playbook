{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "hash": "f04ce146f33d607eaaa08a02f2cc08bafc3d0b83",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ea8755e0-0348-483f-8654-1f077c8e5a3b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2f378091-5300-4648-8eef-79f0078dd0fa",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e8d82a0b-6497-4978-ab72-f2ff939d218d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 13
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "debug",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 238,
                        "line_start": 225,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 10,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1160,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 92
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5b07291a-3dbb-438f-b0c6-d5d1902bee48",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a68bf4e8-acd4-4983-83cc-debf0b2bbee1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 355
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9fe642bc-f573-47ad-9802-9c08b074ee36",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6c1eb799-ffd8-4974-ba6a-648ec91d8cd1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b636cab4-a44b-4709-88d6-3633d14e271d",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 362
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4fe004b6-712b-45b4-a9a8-010d7c9906e2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b636cab4-a44b-4709-88d6-3633d14e271d",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a68bf4e8-acd4-4983-83cc-debf0b2bbee1",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 364
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "ReqInstallPolicyPackage"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def ReqInstallPolicyPackage(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('ReqInstallPolicyPackage() called')\n    \n    template = \"\"\"%%\n{{\n\t\\\"session\\\": \\\"{0}\\\",\n\t\\\"id\\\": 1,\n\t\\\"method\\\": \\\"exec\\\" ,\n\t\\\"params\\\": [\n\t\t{{\n\t\t\t\\\"url\\\": \\\"/securityconsole/install/package\\\",\n            \\\"data\\\": [\n                {{\n                    \\\"adom\\\": \\\"root\\\",\n                    \\\"pkg\\\": \\\"FortiGate CSOC\\\",\n                    \\\"scope member\\\": [\n                        {{\n                            \\\"name\\\": \\\"FGVM01TM22001286\\\",\n                            \\\"vdom\\\": \\\"root\\\"\n                        }}\n                    ],\n                    \\\"flags\\\": \\\"none\\\"\n                }}\n            ]\n\t\t}}\n\t],\n\t\\\"verbose\\\": 1\t\t\t\t\n}}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"GetAuthSessionID:formatted_data\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"ReqInstallPolicyPackage\", separator=\", \")\n\n    InstallPolicyPackage(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "DelAddrObjToAddrGrp",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ReqInstallPolicyPackage",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6c1eb799-ffd8-4974-ba6a-648ec91d8cd1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 185,
                        "line_start": 144,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 10,
                        "order": 7,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "GetAuthSessionID:formatted_data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "ReqInstallPolicyPackage",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{{\n\t\"session\": \"{0}\",\n\t\"id\": 1,\n\t\"method\": \"exec\" ,\n\t\"params\": [\n\t\t{{\n\t\t\t\"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {{\n                    \"adom\": \"root\",\n                    \"pkg\": \"FortiGate CSOC\",\n                    \"scope member\": [\n                        {{\n                            \"name\": \"FGVM01TM22001286\",\n                            \"vdom\": \"root\"\n                        }}\n                    ],\n                    \"flags\": \"none\"\n                }}\n            ]\n\t\t}}\n\t],\n\t\"verbose\": 1\t\t\t\t\n}}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 371
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "ReqInstallPolicyPackage:formatted_data",
                            "headers": "{\"Content-Type\":\"application/json\"}",
                            "location": "/jsonrpc",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortimanager",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "ReqInstallPolicyPackage:formatted_data",
                                    "headers": "{\"Content-Type\":\"application/json\"}",
                                    "location": "/jsonrpc",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 106,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortimanager",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "106",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "InstallPolicyPackage"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def InstallPolicyPackage(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('InstallPolicyPackage() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'InstallPolicyPackage' call\n    formatted_data_1 = phantom.get_format_data(name='ReqInstallPolicyPackage')\n\n    parameters = []\n    \n    # build parameters list for 'InstallPolicyPackage' call\n    parameters.append({\n        'body': formatted_data_1,\n        'headers': \"{\\\"Content-Type\\\":\\\"application/json\\\"}\",\n        'location': \"/jsonrpc\",\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortimanager'], callback=cf_community_debug_1, name=\"InstallPolicyPackage\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "DelAddrObjToAddrGrp",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "InstallPolicyPackage",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b636cab4-a44b-4709-88d6-3633d14e271d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 207,
                        "line_start": 185,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 7,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 840,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "InstallPolicyPackage",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 374
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'AuthReqToFortiManager' block\n    AuthReqToFortiManager(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 15,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -120,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 375
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a6f53e39-a4ae-474a-b625-68a3fdd0d22e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2f378091-5300-4648-8eef-79f0078dd0fa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 401
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "{ \t\"id\": 1, \t\"method\": \"exec\", \t\"params\": [ \t\t{ \t\t\t\"data\": [ \t\t\t{ \t\t\t\t\"passwd\": \"soar\", \t\t\t\t\"user\": \"soar\" \t\t\t} \t\t\t], \t\t\t\"url\": \"sys/login/user\" \t\t} \t], \t\"session\": null, \t\"verbose\": 1 }",
                            "headers": "{\"Content-Type\":\"application/json\"}",
                            "location": "/jsonrpc",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "artifact_scope": "all",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortimanager",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "{ \t\"id\": 1, \t\"method\": \"exec\", \t\"params\": [ \t\t{ \t\t\t\"data\": [ \t\t\t{ \t\t\t\t\"passwd\": \"soar\", \t\t\t\t\"user\": \"soar\" \t\t\t} \t\t\t], \t\t\t\"url\": \"sys/login/user\" \t\t} \t], \t\"session\": null, \t\"verbose\": 1 }",
                                    "headers": "{\"Content-Type\":\"application/json\"}",
                                    "location": "/jsonrpc",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 106,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortimanager",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "106",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "AuthReqToFortiManager"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def AuthReqToFortiManager(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('AuthReqToFortiManager() called')\n\n    # collect data for 'AuthReqToFortiManager' call\n\n    parameters = []\n    \n    # build parameters list for 'AuthReqToFortiManager' call\n    parameters.append({\n        'body': \"{ \t\\\"id\\\": 1, \t\\\"method\\\": \\\"exec\\\", \t\\\"params\\\": [ \t\t{ \t\t\t\\\"data\\\": [ \t\t\t{ \t\t\t\t\\\"passwd\\\": \\\"soar\\\", \t\t\t\t\\\"user\\\": \\\"soar\\\" \t\t\t} \t\t\t], \t\t\t\\\"url\\\": \\\"sys/login/user\\\" \t\t} \t], \t\\\"session\\\": null, \t\\\"verbose\\\": 1 }\",\n        'headers': \"{\\\"Content-Type\\\":\\\"application/json\\\"}\",\n        'location': \"/jsonrpc\",\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortimanager'], callback=GetAuthSessionID, name=\"AuthReqToFortiManager\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "AuthReqToFortiManager",
                        "delay": "0",
                        "description": "HTTP method: POST\nAPI execute method: exec\nURL: /sys/login/user",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2f378091-5300-4648-8eef-79f0078dd0fa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 39,
                        "line_start": 20,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "AuthReqToFortiManager",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 429
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "715dd8b5-529d-4246-b7b0-ddf1ec7b2dc9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e8d82a0b-6497-4978-ab72-f2ff939d218d",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5850e94c-a68f-44b0-afa3-17f7eb47b73f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 444
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5c46f7d7-91a6-4a85-ae87-a81260c1dfa6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5850e94c-a68f-44b0-afa3-17f7eb47b73f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a3ea334e-0175-4d6d-b686-97647ad299ae",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 446
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "889ab7ee-f384-4da7-9cba-ec52ee4e24d7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a3ea334e-0175-4d6d-b686-97647ad299ae",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "550a4a9d-151f-4681-8f43-ee89e6137d65",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 449
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "527b55d5-7e7d-4f14-b75f-32e89104c654",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "550a4a9d-151f-4681-8f43-ee89e6137d65",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6c1eb799-ffd8-4974-ba6a-648ec91d8cd1",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 451
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "ReqDelAddrObjFromAddrGrp:formatted_data",
                            "headers": "{\"Content-Type\":\"application/json\"}",
                            "location": "/jsonrpc",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "csoc-fortimanager",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "ReqDelAddrObjFromAddrGrp:formatted_data",
                                    "headers": "{\"Content-Type\":\"application/json\"}",
                                    "location": "/jsonrpc",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 106,
                                "loaded": false,
                                "missing": false,
                                "name": "csoc-fortimanager",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "106",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "DelAddrObjToAddrGrp"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def DelAddrObjToAddrGrp(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('DelAddrObjToAddrGrp() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'DelAddrObjToAddrGrp' call\n    formatted_data_1 = phantom.get_format_data(name='ReqDelAddrObjFromAddrGrp')\n\n    parameters = []\n    \n    # build parameters list for 'DelAddrObjToAddrGrp' call\n    parameters.append({\n        'body': formatted_data_1,\n        'headers': \"{\\\"Content-Type\\\":\\\"application/json\\\"}\",\n        'location': \"/jsonrpc\",\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['csoc-fortimanager'], callback=ReqInstallPolicyPackage, name=\"DelAddrObjToAddrGrp\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "AuthReqToFortiManager",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "DelAddrObjToAddrGrp",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "550a4a9d-151f-4681-8f43-ee89e6137d65",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 144,
                        "line_start": 122,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 6,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "DelAddrObjToAddrGrp",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 452
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "artifact_scope": "new",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "GetAuthSessionID"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def GetAuthSessionID(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('GetAuthSessionID() called')\n    \n    template = \"\"\"{0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"AuthReqToFortiManager:action_result.data.*.parsed_response_body.session\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"GetAuthSessionID\", scope=\"new\", separator=\", \")\n\n    BodyReqDelAddrObjFromAddrGrp(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "AuthReqToFortiManager",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "GetAuthSessionID",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e8d82a0b-6497-4978-ab72-f2ff939d218d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 55,
                        "line_start": 39,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 2,
                        "order": 3,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "AuthReqToFortiManager:action_result.data.*.parsed_response_body.session"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "GetAuthSessionID",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "{0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 454
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "BodyReqDelAddrObjFro..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def BodyReqDelAddrObjFromAddrGrp(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('BodyReqDelAddrObjFromAddrGrp() called')\n    \n    template = \"\"\"%%\n\\\"Phantom {0}_32\\\",\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"BodyReqDelAddrObjFromAddrGrp\", separator=\", \")\n\n    ReqDelAddrObjFromAddrGrp(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "AuthReqToFortiManager",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "BodyReqDelAddrObjFromAddrGrp",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5850e94c-a68f-44b0-afa3-17f7eb47b73f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 225,
                        "line_start": 207,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 13,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "BodyReqDelAddrObjFromAddrGrp",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n\"Phantom {0}_32\",\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 455
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "ReqDelAddrObjFromAddr..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def ReqDelAddrObjFromAddrGrp(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('ReqDelAddrObjFromAddrGrp() called')\n    \n    template = \"\"\"%%\n{{\n\t\\\"session\\\": \\\"{0}\\\",\n\t\\\"id\\\": 1,\n\t\\\"method\\\": \\\"delete\\\" ,\n    \\\"params\\\": [\n        {{\n            \\\"url\\\": \\\"/pm/config/adom/root/obj/firewall/addrgrp/Phantom-Blacklist/member/\\\",\n              \\\"data\\\": [      \n                        {1}\n            ]\n        }}\n    ]\t\t\t\n}}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"GetAuthSessionID:formatted_data\",\n        \"BodyReqDelAddrObjFromAddrGrp:formatted_data\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"ReqDelAddrObjFromAddrGrp\", separator=\", \")\n\n    DelAddrObjToAddrGrp(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "AuthReqToFortiManager",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ReqDelAddrObjFromAddrGrp",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a3ea334e-0175-4d6d-b686-97647ad299ae",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 122,
                        "line_start": 91,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 9,
                        "order": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "GetAuthSessionID:formatted_data"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "BodyReqDelAddrObjFromAddrGrp:formatted_data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 540,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "ReqDelAddrObjFromAddrGrp",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n{{\n\t\"session\": \"{0}\",\n\t\"id\": 1,\n\t\"method\": \"delete\" ,\n    \"params\": [\n        {{\n            \"url\": \"/pm/config/adom/root/obj/firewall/addrgrp/Phantom-Blacklist/member/\",\n              \"data\": [      \n                        {1}\n            ]\n        }}\n    ]\t\t\t\n}}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 456
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "debug"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_community_debug_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_community_debug_1() called')\n    \n    container_data_0 = phantom.collect2(container=container, datapath=['artifact:*.cef.destinationAddress', 'artifact:*.id'])\n\n    parameters = []\n\n    container_data_0_0 = [item[0] for item in container_data_0]\n\n    parameters.append({\n        'input_1': container_data_0_0,\n        'input_2': None,\n        'input_3': None,\n        'input_4': None,\n        'input_5': None,\n        'input_6': None,\n        'input_7': None,\n        'input_8': None,\n        'input_9': None,\n        'input_10': None,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/debug\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/debug', parameters=parameters, name='cf_community_debug_1')\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/debug",
                        "cfInputs": {
                            "input_1": {
                                "collectionType": "container_data",
                                "dataPath": "artifact:*.cef.destinationAddress",
                                "paramName": "container_data_0_0",
                                "type": "list"
                            },
                            "input_10": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_2": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_3": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_4": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_5": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_6": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_7": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_8": {
                                "dataPath": "",
                                "type": "list"
                            },
                            "input_9": {
                                "dataPath": "",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "InstallPolicyPackage",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 24,
                        "customFunction": "community/debug",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a68bf4e8-acd4-4983-83cc-debf0b2bbee1",
                        "inPorts": [
                            "in"
                        ],
                        "input_1-0": "artifact:*.cef.destinationAddress",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 91,
                        "line_start": 55,
                        "message": "Configuring now",
                        "name": "debug",
                        "notes": "",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 840,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "cf_community_debug_1",
                        "selectedCustomFunction": {
                            "description": "Print debug messages with the type and value of 0-10 different inputs. This is useful for checking the values of input data or the outputs of other playbook blocks.",
                            "draftMode": false,
                            "id": 8,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 41,
                                    "input_type": "list",
                                    "name": "input_1",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 42,
                                    "input_type": "list",
                                    "name": "input_2",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 43,
                                    "input_type": "list",
                                    "name": "input_3",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 44,
                                    "input_type": "list",
                                    "name": "input_4",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 45,
                                    "input_type": "list",
                                    "name": "input_5",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 46,
                                    "input_type": "list",
                                    "name": "input_6",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 47,
                                    "input_type": "list",
                                    "name": "input_7",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 48,
                                    "input_type": "list",
                                    "name": "input_8",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 49,
                                    "input_type": "list",
                                    "name": "input_9",
                                    "placeholder": ""
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "description": "",
                                    "id": 50,
                                    "input_type": "list",
                                    "name": "input_10",
                                    "placeholder": ""
                                }
                            ],
                            "name": "debug",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [],
                                    "custom_function": 8,
                                    "data_path": "*.input_name",
                                    "description": "The variable name used for this input, such as input_1 or input_7",
                                    "id": 27
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 8,
                                    "data_path": "*.value",
                                    "description": "The string representation of the value of this input",
                                    "id": 28
                                },
                                {
                                    "_pretty_custom_function": "debug",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 8,
                                    "data_path": "*.types",
                                    "description": "The string representation of the type of this input, such as \"<type 'list'>\"",
                                    "id": 29
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/Explore-FortiManager",
                                        "draft_mode": false,
                                        "id": 2895,
                                        "name": "Explore-FortiManager",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 457
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2022-04-05T08:14:12.938672+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}