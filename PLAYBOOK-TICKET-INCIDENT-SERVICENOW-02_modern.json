{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_19",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_19_to_port_2",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_20",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_20_to_port_3",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_3_to_port_21",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_21_to_port_5",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_5_to_port_22",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_22_to_port_4",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_27",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_26_to_port_29",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_29_to_port_28",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_28_to_port_30",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_7_to_port_38",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "id": "port_38_to_port_15",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_40_to_port_13",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_31",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_31_to_port_12",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_12_to_port_17",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_18",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_18_to_port_35",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "id": "port_35_to_port_16",
                    "sourceNode": "35",
                    "sourcePort": "35_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_36_to_port_10",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_10_to_port_34",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "id": "port_34_to_port_9",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_32_to_port_1",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_37_to_port_11",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_11_to_port_36",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "id": "port_27_to_port_26",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_25_to_port_6",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_6_to_port_23",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_16_to_port_36",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_16_to_port_37",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "37",
                    "targetPort": "37_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_26_to_port_24",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_24_to_port_25",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_23_to_port_7",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_9_to_port_33",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_33_to_port_8",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_8_to_port_32",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_15_to_port_39",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "id": "port_39_to_port_14",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_14_to_port_40",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "40",
                    "targetPort": "40_in"
                }
            ],
            "hash": "dc7992835df569fb3afde07dcf0c69ae413a2aef",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": -320,
                    "y": 600
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1440,
                    "y": 2120
                },
                "10": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "update_phantom_timestamp:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 24,
                        "functionName": "decision_24",
                        "id": "10",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "decision",
                    "warnings": {},
                    "x": 1040,
                    "y": 2360
                },
                "11": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_add_phantom_note_2:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 27,
                        "functionName": "decision_27",
                        "id": "11",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "decision",
                    "warnings": {},
                    "x": 1040,
                    "y": 1940
                },
                "12": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "generate_servicenow_query:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 19,
                        "functionName": "decision_19",
                        "id": "12",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "decision",
                    "warnings": {},
                    "x": 640,
                    "y": 2360
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "set_phantom_case_id_to_servicenow:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 18,
                        "functionName": "decision_18",
                        "id": "13",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "decision",
                    "warnings": {},
                    "x": 640,
                    "y": 1940
                },
                "14": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "assign_serviecnow_case_number:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 31,
                        "functionName": "decision_31",
                        "id": "14",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "decision",
                    "warnings": {},
                    "x": 640,
                    "y": 1540
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_update_phantom_case_1:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 17,
                        "functionName": "decision_17",
                        "id": "15",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "decision",
                    "warnings": {},
                    "x": 640,
                    "y": 1080
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_process_servicenow_note_1:custom_function_result.data.success",
                                        "value": "True"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "cf_local_process_servicenow_note_1:custom_function_result.data.data",
                                        "value": "[]"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "cf_local_process_servicenow_note_1:custom_function_result.data.success",
                                        "value": "True"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "cf_local_process_servicenow_note_1:custom_function_result.data.data",
                                        "value": "[]"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "functionId": 22,
                        "functionName": "decision_22",
                        "id": "16",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "decision",
                    "warnings": {},
                    "x": 1040,
                    "y": 1540
                },
                "17": {
                    "data": {
                        "action": "get ticket",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "ServiceNow",
                        "connectorConfigs": [
                            "kcs-csoc-servicenow"
                        ],
                        "connectorId": "a590c3bc-ca41-4a0e-b063-8066ca868794",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_ticket_1",
                        "id": "17",
                        "parameters": {
                            "id": "generate_servicenow_query:custom_function_result.data.data",
                            "is_sys_id": "True",
                            "table": "incident"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "action",
                    "warnings": {},
                    "x": 1040,
                    "y": 800
                },
                "18": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_ticket_1:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 21,
                        "functionName": "decision_21",
                        "id": "18",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "decision",
                    "warnings": {},
                    "x": 1040,
                    "y": 1080
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_get_settings_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "get_settings",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_get_settings_1",
                        "id": "19",
                        "type": "utility",
                        "utilities": {
                            "get_settings": {
                                "description": "",
                                "fields": [],
                                "label": "get_settings",
                                "name": "get_settings"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "get_settings": {}
                        }
                    },
                    "errors": {},
                    "id": "19",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -360,
                    "y": 800
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_get_settings_1:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 10,
                        "functionName": "decision_10",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "warnings": {},
                    "x": -360,
                    "y": 1080
                },
                "20": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_get_mapping_fields_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "get_mapping_fields",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_get_mapping_fields_1",
                        "id": "20",
                        "type": "utility",
                        "utilities": {
                            "get_mapping_fields": {
                                "description": "Return a list of mapping between Phantom key name to ServiceNow key name with its value.",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "key_mapping_list_name",
                                        "name": "key_mapping_list_name",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "get_mapping_fields",
                                "name": "get_mapping_fields"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "get_mapping_fields": {
                                "key_mapping_list_name": "cf_local_get_settings_1:custom_function_result.data.data.key_mapping_list_name"
                            }
                        }
                    },
                    "errors": {},
                    "id": "20",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -360,
                    "y": 1280
                },
                "21": {
                    "data": {
                        "advanced": {
                            "customName": "get_allowed_inc",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "get_list_item",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "get_allowed_inc",
                        "id": "21",
                        "type": "utility",
                        "utilities": {
                            "get_list_item": {
                                "description": "Return list of item in specified custom list",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "custom_list_name",
                                        "name": "custom_list_name",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "get_list_item",
                                "name": "get_list_item"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "get_list_item": {
                                "custom_list_name": "cf_local_get_settings_1:custom_function_result.data.data.Incident_type_allow_list_name"
                            }
                        }
                    },
                    "errors": {},
                    "id": "21",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -360,
                    "y": 1700
                },
                "22": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_get_timestamp_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "get_timestamp",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_get_timestamp_1",
                        "id": "22",
                        "type": "utility",
                        "utilities": {
                            "get_timestamp": {
                                "description": "Return current date and time in format dd/mm/yyyy HH:MM:SS (i.e. 01/01/2024 08:05:01)",
                                "fields": [],
                                "label": "get_timestamp",
                                "name": "get_timestamp"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "get_timestamp": {}
                        }
                    },
                    "errors": {},
                    "id": "22",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": -360,
                    "y": 2080
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_generate_phantom_case_info_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "generate_phantom_case_info",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_generate_phantom_case_info_1",
                        "id": "23",
                        "type": "utility",
                        "utilities": {
                            "generate_phantom_case_info": {
                                "description": "Generate Parameters from artifact or REST API response for Phantom case updating",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "ServiceNow case object (dict) to generate Phantom information",
                                        "inputType": "item",
                                        "label": "servicenow_case",
                                        "name": "servicenow_case",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Mapping of field name between phantom and servicenow",
                                        "inputType": "item",
                                        "label": "container_key_mapping",
                                        "name": "container_key_mapping",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "Is generating case information a new case? Default is yes",
                                        "inputType": "item",
                                        "label": "is_new_case",
                                        "name": "is_new_case",
                                        "placeholder": "yes",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "List of ServiceNow-based field",
                                        "inputType": "item",
                                        "label": "servicenow_based_field",
                                        "name": "servicenow_based_field",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "List of Origin-based field",
                                        "inputType": "item",
                                        "label": "origin_based_field",
                                        "name": "origin_based_field",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "assignment_group",
                                        "name": "assignment_group",
                                        "placeholder": "only new case",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "cancel_case",
                                        "name": "cancel_case",
                                        "placeholder": "False",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "generate_phantom_case_info",
                                "name": "generate_phantom_case_info"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "generate_phantom_case_info": {
                                "assignment_group": "cf_local_query_servicenow_1:custom_function_result.data.data.name",
                                "cancel_case": null,
                                "container_key_mapping": "cf_local_get_mapping_fields_1:custom_function_result.data.data",
                                "is_new_case": "yes",
                                "origin_based_field": null,
                                "servicenow_based_field": null,
                                "servicenow_case": "cf_local_get_latest_artifact_1:custom_function_result.data.data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "23",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 0,
                    "y": 2080
                },
                "24": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "promote_to_case_1",
                        "id": "24",
                        "type": "utility",
                        "utilities": {
                            "promote": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "templates",
                                        "description": "",
                                        "label": "template",
                                        "name": "template",
                                        "placeholder": "Select a template",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "promote to case",
                                "name": "promote",
                                "refreshNotableData": true
                            }
                        },
                        "values": {
                            "promote": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "template": "NIST 800-61"
                            }
                        }
                    },
                    "errors": {},
                    "id": "24",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 0,
                    "y": 1280
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_query_servicenow_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "query_servicenow",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_query_servicenow_1",
                        "id": "25",
                        "type": "utility",
                        "utilities": {
                            "query_servicenow": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "table",
                                        "name": "table",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "sys_id",
                                        "name": "sys_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "query_servicenow",
                                "name": "query_servicenow"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "query_servicenow": {
                                "sys_id": "cf_local_get_latest_artifact_1:custom_function_result.data.data.assignment_group",
                                "table": "sys_user_group"
                            }
                        }
                    },
                    "errors": {},
                    "id": "25",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 0,
                    "y": 1700
                },
                "26": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "cf_local_get_latest_artifact_1:custom_function_result.data.data.subcategory",
                                        "value": "custom_list:servicenow_incident_type_allow_list"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 14,
                        "functionName": "decision_14",
                        "id": "26",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "decision",
                    "warnings": {},
                    "x": 0,
                    "y": 1080
                },
                "27": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_get_latest_artifact_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "get_latest_artifact",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_get_latest_artifact_1",
                        "id": "27",
                        "type": "utility",
                        "utilities": {
                            "get_latest_artifact": {
                                "description": "Return the newest artifact of the container (dict)",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_input",
                                        "name": "container_input",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "get_latest_artifact",
                                "name": "get_latest_artifact"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "get_latest_artifact": {
                                "container_input": "container:id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "27",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 0,
                    "y": 800
                },
                "28": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_log_debug_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "log_debug",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_log_debug_1",
                        "id": "28",
                        "type": "utility",
                        "utilities": {
                            "log_debug": {
                                "description": "print everything",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "something",
                                        "name": "something",
                                        "placeholder": "text to log",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "log_debug",
                                "name": "log_debug"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "log_debug": {
                                "something": "format_1:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "28",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 280,
                    "y": 1700
                },
                "29": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 1,
                        "functionName": "format_1",
                        "id": "29",
                        "parameters": [
                            "cf_local_get_settings_1:custom_function_result.data.data.subcategory_not_allowed_message",
                            "cf_local_get_latest_artifact_1:custom_function_result.data.data.subcategory"
                        ],
                        "template": "{0}. ({1})",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "format",
                    "warnings": {},
                    "x": 280,
                    "y": 1280
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_get_mapping_fields_1:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 11,
                        "functionName": "decision_11",
                        "id": "3",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "decision",
                    "warnings": {},
                    "x": -360,
                    "y": 1540
                },
                "30": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_add_phantom_note_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "add_phantom_note",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_add_phantom_note_1",
                        "id": "30",
                        "type": "utility",
                        "utilities": {
                            "add_phantom_note": {
                                "description": "Add note to Phantom container",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_input",
                                        "name": "container_input",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Title of note to add",
                                        "inputType": "item",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Title 1",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Content of note to add",
                                        "inputType": "item",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "New Note!",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "add_phantom_note",
                                "name": "add_phantom_note"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "add_phantom_note": {
                                "container_input": "container:id",
                                "content": "format_1:formatted_data",
                                "title": "cf_local_get_settings_1:custom_function_result.data.data.system_debug_note_title"
                            }
                        }
                    },
                    "errors": {},
                    "id": "30",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 280,
                    "y": 2080
                },
                "31": {
                    "data": {
                        "advanced": {
                            "customName": "generate_servicenow_query",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "generate_servicenow_frontend_query",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "generate_servicenow_query",
                        "id": "31",
                        "type": "utility",
                        "utilities": {
                            "generate_servicenow_frontend_query": {
                                "description": "Add query statement for ServiceNow API to get information in front-end format",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "servicenow_case_id",
                                        "name": "servicenow_case_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "generate_servicenow_frontend_query",
                                "name": "generate_servicenow_frontend_query"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "generate_servicenow_frontend_query": {
                                "servicenow_case_id": "cf_local_get_latest_artifact_1:custom_function_result.data.data.sys_id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "31",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 640,
                    "y": 2080
                },
                "32": {
                    "data": {
                        "advanced": {
                            "customName": "update_servicenow_timestamp",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "set_servicenow_field",
                            "repoName": "local"
                        },
                        "functionId": 2,
                        "functionName": "update_servicenow_timestamp",
                        "id": "32",
                        "type": "utility",
                        "utilities": {
                            "set_servicenow_field": {
                                "description": "Generate HTTP Request and send for ServiceNow case Patching",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "Container ID to run this function",
                                        "inputType": "item",
                                        "label": "servicenow_case_id",
                                        "name": "servicenow_case_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "field_name",
                                        "name": "field_name",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "value",
                                        "name": "value",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_servicenow_field",
                                "name": "set_servicenow_field"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "set_servicenow_field": {
                                "field_name": "u_last_update_to_phantom",
                                "servicenow_case_id": "cf_local_generate_servicenow_datetime_update_1:custom_function_result.data.data.servicenow_case_id",
                                "value": "cf_local_generate_servicenow_datetime_update_1:custom_function_result.data.data.formatted_datetime_str"
                            }
                        }
                    },
                    "errors": {},
                    "id": "32",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1400,
                    "y": 1700
                },
                "33": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_generate_servicenow_datetime_update_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "generate_servicenow_datetime_update",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_generate_servicenow_datetime_update_1",
                        "id": "33",
                        "type": "utility",
                        "utilities": {
                            "generate_servicenow_datetime_update": {
                                "description": "Create update statement for ServiceNow API to update time in front-end datetime format",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "servicenow_case_id",
                                        "name": "servicenow_case_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "datetime string in correct format",
                                        "inputType": "item",
                                        "label": "datetime_str",
                                        "name": "datetime_str",
                                        "placeholder": "dd/mm/yyyy HH:MM:SS",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "generate_servicenow_datetime_update",
                                "name": "generate_servicenow_datetime_update"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "generate_servicenow_datetime_update": {
                                "datetime_str": "cf_local_get_timestamp_1:custom_function_result.data.data",
                                "servicenow_case_id": "cf_local_get_latest_artifact_1:custom_function_result.data.data.sys_id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "33",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1400,
                    "y": 1280
                },
                "34": {
                    "data": {
                        "advanced": {
                            "customName": "set_origin",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "set_phantom_custom_field",
                            "repoName": "local"
                        },
                        "functionId": 2,
                        "functionName": "set_origin",
                        "id": "34",
                        "type": "utility",
                        "utilities": {
                            "set_phantom_custom_field": {
                                "description": "Set the container lastUpdateToServiceNow field",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_input",
                                        "name": "container_input",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "field",
                                        "name": "field",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "value",
                                        "name": "value",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_phantom_custom_field",
                                "name": "set_phantom_custom_field"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "set_phantom_custom_field": {
                                "container_input": "container:id",
                                "field": "originate_from",
                                "value": "ServiceNow"
                            }
                        }
                    },
                    "errors": {},
                    "id": "34",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1400,
                    "y": 800
                },
                "35": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_process_servicenow_note_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "process_servicenow_note",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_process_servicenow_note_1",
                        "id": "35",
                        "type": "utility",
                        "utilities": {
                            "process_servicenow_note": {
                                "description": "Extract and process ServiceNow work notes from ServiceNow incident API response",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "raw_servicenow_response",
                                        "name": "raw_servicenow_response",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Note title to indicate this note is from ServiceNow",
                                        "inputType": "item",
                                        "label": "note_title",
                                        "name": "note_title",
                                        "placeholder": "From ServiceNow",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "process_servicenow_note",
                                "name": "process_servicenow_note"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "process_servicenow_note": {
                                "note_title": "cf_local_get_settings_1:custom_function_result.data.data.note_title_from_servicenow",
                                "raw_servicenow_response": "get_ticket_1:action_result.data.0"
                            }
                        }
                    },
                    "errors": {},
                    "id": "35",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1040,
                    "y": 1280
                },
                "36": {
                    "data": {
                        "advanced": {
                            "customName": "update_phantom_timestamp",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "cf_local_add_phantom_note_2"
                            ]
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "set_phantom_custom_field",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "update_phantom_timestamp",
                        "id": "36",
                        "type": "utility",
                        "utilities": {
                            "set_phantom_custom_field": {
                                "description": "Set the container lastUpdateToServiceNow field",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_input",
                                        "name": "container_input",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "field",
                                        "name": "field",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "value",
                                        "name": "value",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_phantom_custom_field",
                                "name": "set_phantom_custom_field"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "set_phantom_custom_field": {
                                "container_input": "container:id",
                                "field": "last_update_from_servicenow",
                                "value": "cf_local_get_timestamp_1:custom_function_result.data.data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "36",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1040,
                    "y": 2080
                },
                "37": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_add_phantom_note_2",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "add_phantom_note",
                            "repoName": "local"
                        },
                        "functionId": 2,
                        "functionName": "cf_local_add_phantom_note_2",
                        "id": "37",
                        "type": "utility",
                        "utilities": {
                            "add_phantom_note": {
                                "description": "Add note to Phantom container",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_input",
                                        "name": "container_input",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Title of note to add",
                                        "inputType": "item",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Title 1",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Content of note to add",
                                        "inputType": "item",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "New Note!",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "add_phantom_note",
                                "name": "add_phantom_note"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "add_phantom_note": {
                                "container_input": "container:id",
                                "content": "cf_local_process_servicenow_note_1:custom_function_result.data.data.*.note_info.content",
                                "title": "cf_local_process_servicenow_note_1:custom_function_result.data.data.*.note_info.title"
                            }
                        }
                    },
                    "errors": {},
                    "id": "37",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 1040,
                    "y": 1700
                },
                "38": {
                    "data": {
                        "advanced": {
                            "customName": "cf_local_update_phantom_case_1",
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "update_phantom_case",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "cf_local_update_phantom_case_1",
                        "id": "38",
                        "type": "utility",
                        "utilities": {
                            "update_phantom_case": {
                                "description": "Update Phantom case",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "Phantom container ID (integer) or Container object (dictionary)",
                                        "inputType": "item",
                                        "label": "container_input",
                                        "name": "container_input",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "updating field in dictionary from",
                                        "inputType": "item",
                                        "label": "updating_info",
                                        "name": "updating_info",
                                        "placeholder": "{\"name\": \"test\", \"severity\": \"low\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "update_phantom_case",
                                "name": "update_phantom_case"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "update_phantom_case": {
                                "container_input": "container:id",
                                "updating_info": "cf_local_generate_phantom_case_info_1:custom_function_result.data.data.formatted"
                            }
                        }
                    },
                    "errors": {},
                    "id": "38",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 640,
                    "y": 800
                },
                "39": {
                    "data": {
                        "advanced": {
                            "customName": "assign_serviecnow_case_number",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "set_phantom_custom_field",
                            "repoName": "local"
                        },
                        "functionId": 3,
                        "functionName": "assign_serviecnow_case_number",
                        "id": "39",
                        "type": "utility",
                        "utilities": {
                            "set_phantom_custom_field": {
                                "description": "Set the container lastUpdateToServiceNow field",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "container_input",
                                        "name": "container_input",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "field",
                                        "name": "field",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "value",
                                        "name": "value",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_phantom_custom_field",
                                "name": "set_phantom_custom_field"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "set_phantom_custom_field": {
                                "container_input": "container:id",
                                "field": "servicenow_case_number",
                                "value": "cf_local_get_latest_artifact_1:custom_function_result.data.data.number"
                            }
                        }
                    },
                    "errors": {},
                    "id": "39",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 640,
                    "y": 1280
                },
                "4": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_get_timestamp_1:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 13,
                        "functionName": "decision_13",
                        "id": "4",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "decision",
                    "warnings": {},
                    "x": -360,
                    "y": 2360
                },
                "40": {
                    "data": {
                        "advanced": {
                            "customName": "set_phantom_case_id_to_servicenow",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "set_servicenow_field",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "set_phantom_case_id_to_servicenow",
                        "id": "40",
                        "type": "utility",
                        "utilities": {
                            "set_servicenow_field": {
                                "description": "Generate HTTP Request and send for ServiceNow case Patching",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "Container ID to run this function",
                                        "inputType": "item",
                                        "label": "servicenow_case_id",
                                        "name": "servicenow_case_id",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "field_name",
                                        "name": "field_name",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "value",
                                        "name": "value",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "set_servicenow_field",
                                "name": "set_servicenow_field"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "set_servicenow_field": {
                                "field_name": "u_phantom_case_id",
                                "servicenow_case_id": "cf_local_get_latest_artifact_1:custom_function_result.data.data.sys_id",
                                "value": "container:id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "40",
                    "tab": "customFunctions",
                    "type": "utility",
                    "userCode": "    # Write your custom code here...",
                    "warnings": {},
                    "x": 640,
                    "y": 1700
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_allowed_inc:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 12,
                        "functionName": "decision_12",
                        "id": "5",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "decision",
                    "warnings": {},
                    "x": -360,
                    "y": 1940
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_query_servicenow_1:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 29,
                        "functionName": "decision_29",
                        "id": "6",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "decision",
                    "warnings": {},
                    "x": 0,
                    "y": 1940
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_generate_phantom_case_info_1:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 16,
                        "functionName": "decision_16",
                        "id": "7",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "decision",
                    "warnings": {},
                    "x": 0,
                    "y": 2360
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "cf_local_generate_servicenow_datetime_update_1:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 30,
                        "functionName": "decision_30",
                        "id": "8",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "decision",
                    "warnings": {},
                    "x": 1400,
                    "y": 1540
                },
                "9": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "set_origin:custom_function_result.data.success",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 25,
                        "functionName": "decision_25",
                        "id": "9",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "decision",
                    "warnings": {},
                    "x": 1400,
                    "y": 1080
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 241,
                "playbook_name": "PLAYBOOK-TICKET-INCIDENT-SERVICENOW-02",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.1.1.211"
    },
    "create_time": "2025-03-27T15:21:06.281758+00:00",
    "draft_mode": false,
    "labels": [
        "servicenow"
    ],
    "tags": []
}