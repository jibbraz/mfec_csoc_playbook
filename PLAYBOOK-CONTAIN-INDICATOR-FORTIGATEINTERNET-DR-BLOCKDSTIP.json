{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'prepareAuthenBody' block\n    prepareAuthenBody(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 15,
                        "line_start": 7,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -3120,
                            "y": -360
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2050
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bbfd7721-c83c-487f-83c2-ce8857b0bf62",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d30f0bd-ec66-4f35-b3da-49bb4d976281",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "55728ad6-0a71-410c-b3a5-a1b1eaebd840",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2087
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7375cbeb-6f85-4b10-86f5-0157f659b156",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0b9cc23d-80ce-4910-b5f4-1ed02e66a052",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2c219534-0dab-4269-b167-8afde36232bb",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2320
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c924e8d1-7b27-4966-bef1-2333cb4e167f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0b0ab7fb-723a-46a8-ba02-1d7f836eec21",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b9cc23d-80ce-4910-b5f4-1ed02e66a052",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2325
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ef5624c9-a97e-4d72-8806-7b3ef983919b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2c219534-0dab-4269-b167-8afde36232bb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "eb54dfc0-0ee7-461b-aca1-b55bb32adce5",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2353
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9d076e05-2ade-4c90-aa89-c0cb657aaaff",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b8abf194-2786-4140-a120-5f660810932c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ad0cce4c-6a06-42cd-9979-2cb8f95257a3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2458
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "44ea2383-204e-42bc-bcae-f4c31f5536f3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ad0cce4c-6a06-42cd-9979-2cb8f95257a3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a748e4e3-8708-4991-ad65-79595cace468",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2465
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d2fc77d5-9c17-4b4c-a640-0a0702a0e7b2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b8abf194-2786-4140-a120-5f660810932c",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5e07e72f-2242-4f01-835f-136d91d5432c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2470
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c9142912-174d-47e2-98a5-856bb581f575",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e07e72f-2242-4f01-835f-136d91d5432c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bbfc1683-5f40-4ac2-9411-f0becd714c18",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2472
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"addObject2Group:action_result.status\", \"!=\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        addObject2GrpFail(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    addObjectSuccess(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "logout 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b8abf194-2786-4140-a120-5f660810932c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 251,
                        "line_start": 230,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 12,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "addObject2Group:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1480,
                            "y": 280
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 2510
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1162433b-3d5c-4e42-8a9d-64b259aeb278",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e08ee6c5-b1f9-4754-8f45-ec98f8db48a3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2541
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8f8c35fd-6916-4b70-8330-2e56c7339fe4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bbfc1683-5f40-4ac2-9411-f0becd714c18",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c2347999-4cb0-4a75-b708-f6950b80364f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2543
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "eef42519-1baf-4a08-877a-3702e2ddc455",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c2347999-4cb0-4a75-b708-f6950b80364f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2545
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "831558e2-326a-4452-9375-c437e29c2784",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6e4041a1-1697-4ae9-967e-df341f6207e7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "063a0d40-d3f8-4b84-8010-0daebff4dffb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2593
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b1af01e7-93c7-422a-be65-5f019b3bc3b5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "063a0d40-d3f8-4b84-8010-0daebff4dffb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "618fd6bc-7bd7-4af4-88a7-7e3ccd895820",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2595
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "aae410e4-4169-448a-8f41-64f873d6725a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "618fd6bc-7bd7-4af4-88a7-7e3ccd895820",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b8abf194-2786-4140-a120-5f660810932c",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2597
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9b728ab4-34ea-4925-8eb7-2a1bcf82d63c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9b3239a4-2ea9-43c9-b83c-9b7d8900cf06",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cc2e98de-c3b9-4c73-b277-35b9efcf53cf",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2604
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bf9dcdc8-10ea-4fee-82c6-35e3baa76774",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "82be7797-e27a-4519-a4e9-7255e3f3429a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "eabae973-b3c1-41a7-9b66-43bbeb6fce31",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2637
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "64d99d5f-2e41-479f-a8aa-0ea6e24c8e97",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "eabae973-b3c1-41a7-9b66-43bbeb6fce31",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a1a6cd69-0a49-4e9f-bf17-6874705c3399",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2643
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "85d55d4b-e17b-4c65-ab11-bb45965429d2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a1a6cd69-0a49-4e9f-bf17-6874705c3399",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3424ae08-9a51-4738-9055-b3ceafdacb32",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2688
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "19af71b4-e6b0-461b-8cda-d513e4350235",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a1a6cd69-0a49-4e9f-bf17-6874705c3399",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "880307e6-e4f3-4a0c-9827-bce93a6a9a5b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2690
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f33c4044-9504-437a-b2be-acc6ba88fb66",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "880307e6-e4f3-4a0c-9827-bce93a6a9a5b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e7630f23-5135-407c-a0d4-59b049e9085b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2692
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e5b23386-05df-4070-ae8f-08a356c8796b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e7630f23-5135-407c-a0d4-59b049e9085b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "787ea64d-5825-469d-9aa5-99fb0d655c89",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2698
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "20618013-3c5a-4c61-a925-7f8774f6730d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "db4713ad-a92a-4746-aca9-4e98efef0fde",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2709
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ebe5ba06-9b62-470e-9ef2-b9b2247982d6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "db4713ad-a92a-4746-aca9-4e98efef0fde",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6e4041a1-1697-4ae9-967e-df341f6207e7",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2710
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7d2acb4c-8697-4cb0-8c53-d66727bc4a0a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3424ae08-9a51-4738-9055-b3ceafdacb32",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9b3239a4-2ea9-43c9-b83c-9b7d8900cf06",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2713
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5036505f-f75a-4af1-8f50-91635fd14576",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "67dce993-1447-4d27-bfc4-01c97e99f274",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2724
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5f029efd-f40e-4d9e-9e2b-735b1512a574",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "67dce993-1447-4d27-bfc4-01c97e99f274",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d30f0bd-ec66-4f35-b3da-49bb4d976281",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2729
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4bd5524a-54d6-42c2-9a13-57cc014b5585",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "787ea64d-5825-469d-9aa5-99fb0d655c89",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "24afa665-3242-47a7-979d-f3df94d8270b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2735
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9a63432f-4ffb-4a10-acac-dbc99ae0da0d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "eb54dfc0-0ee7-461b-aca1-b55bb32adce5",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ef0b226e-b281-453e-9a66-f8eddc7d8478",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2749
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c6d5e010-53d3-4c9c-a27c-466a60e71d17",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ef0b226e-b281-453e-9a66-f8eddc7d8478",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "82be7797-e27a-4519-a4e9-7255e3f3429a",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2750
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e693adfa-4e20-4f5a-be1c-234e59d3ed8d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cc2e98de-c3b9-4c73-b277-35b9efcf53cf",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2751
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c8bf7312-519e-4ed8-90c4-d91dfbccdb23",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "24afa665-3242-47a7-979d-f3df94d8270b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b3f5e8dd-775b-4703-b03c-d7fbd91532d2",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2756
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6deab3c8-3015-464c-bd81-fd251666f2ee",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b3f5e8dd-775b-4703-b03c-d7fbd91532d2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "73413919-0a21-4ace-b039-654b134c3b5b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2762
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "06785f82-a356-4911-9f4c-72985b34aaed",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "73413919-0a21-4ace-b039-654b134c3b5b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2764
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8e44793f-0d9a-4970-a24a-840499080db8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "55728ad6-0a71-410c-b3a5-a1b1eaebd840",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e08ee6c5-b1f9-4754-8f45-ec98f8db48a3",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2765
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7e8588e7-5173-406a-ba51-ddb78632deed",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a748e4e3-8708-4991-ad65-79595cace468",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9fe9dd9a-b4a1-480b-af1b-e539672ce264",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 2766
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cd418c56-c548-4ba0-b3c6-a2afb815f783",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9fe9dd9a-b4a1-480b-af1b-e539672ce264",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 2773
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_3() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"checkObjectExists:action_result.summary.status_code\", \"==\", 200],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        prepareAdd2group_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    prepareObjectBody(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "checkObjectExists",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a1a6cd69-0a49-4e9f-bf17-6874705c3399",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 555,
                        "line_start": 534,
                        "name": "decision",
                        "notes": "",
                        "number": 3,
                        "order": 25,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "checkObjectExists:action_result.summary.status_code",
                                        "value": "200"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2240,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "decision_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 2959
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"createObjectS:action_result.status\", \"!=\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        logout(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    prepareAdd2GroupBody(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d688a54a-41ed-49bc-8d27-051829d891b5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 59,
                        "line_start": 38,
                        "name": "decision",
                        "notes": "",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "createObjectS:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2000,
                            "y": -20
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 2970
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "update artifact fail, update artifact success, update artifact success 2, update artifact fail 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "47f1408b-b462-40bc-a762-704ebc01599f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 760,
                        "line_start": 747,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 34,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -420,
                            "y": 300
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2986
                    },
                    {
                        "action": "no op",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "sleep_seconds": "5"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "no op",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "sleep_seconds": "5"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.sleep_seconds",
                                        "data_type": "numeric",
                                        "example_values": [
                                            15
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Slept for 15 seconds"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "sleep_seconds": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Sleep for this many seconds",
                                        "key": "sleep_seconds",
                                        "order": 0,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "sleep 2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def sleep_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('sleep_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'sleep_2' call\n\n    parameters = []\n    \n    # build parameters list for 'sleep_2' call\n    parameters.append({\n        'sleep_seconds': 5,\n    })\n\n    phantom.act(action=\"no op\", parameters=parameters, assets=['phantom asset'], callback=logout_2, name=\"sleep_2\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "addObject2Group",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "sleep 2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "063a0d40-d3f8-4b84-8010-0daebff4dffb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 454,
                        "line_start": 436,
                        "message": "Configuring now",
                        "name": "no op",
                        "notes": "",
                        "number": 4,
                        "order": 20,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2300,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "sleep_2",
                        "required_params": {
                            "sleep_seconds": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3003
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "empty",
                            "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                            "location": "/logout",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "empty",
                                    "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                                    "location": "/logout",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "logout3"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def logout3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('logout3() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'logout3' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'logout3' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'body': \"empty\",\n            'headers': custom_function_results_item_1[0],\n            'location': \"/logout\",\n            'verify_certificate': False,\n        })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=addObject2GrpSuccess2, name=\"logout3\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "add2group_2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "logout3",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "787ea64d-5825-469d-9aa5-99fb0d655c89",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 622,
                        "line_start": 599,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 23,
                        "order": 28,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1540,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "logout3",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3040
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObject2GrpSuccess2"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2GrpSuccess2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2GrpSuccess2() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} | Already Exists | {1}:{2} | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"add2group_2:action_result.status\",\n        \"add2group_2:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObject2GrpSuccess2\", separator=\", \")\n\n    add_note_11(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "logout3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2GrpSuccess2",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "24afa665-3242-47a7-979d-f3df94d8270b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 672,
                        "line_start": 645,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 43,
                        "order": 30,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "add2group_2:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "add2group_2:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1300,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "addObject2GrpSuccess2",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} | Already Exists | {1}:{2} | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3041
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact success 2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_success_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_success_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_success_2' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_success_2' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult_Fortigate_Internet\\\":\\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_success_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "logout3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact success 2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "73413919-0a21-4ace-b039-654b134c3b5b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 716,
                        "line_start": 685,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 3,
                        "order": 32,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -720,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_success_2",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3043
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "empty",
                            "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                            "location": "logout",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "empty",
                                    "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                                    "location": "logout",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "logout 2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def logout_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('logout_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'logout_2' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'logout_2' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'body': \"empty\",\n            'headers': custom_function_results_item_1[0],\n            'location': \"logout\",\n            'verify_certificate': False,\n        })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=decision_2, name=\"logout_2\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "sleep 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "logout 2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "618fd6bc-7bd7-4af4-88a7-7e3ccd895820",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 477,
                        "line_start": 454,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 21,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2040,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "logout_2",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3049
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "empty",
                            "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                            "location": "/logout",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "empty",
                                    "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                                    "location": "/logout",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "logout"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def logout(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('logout() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'logout' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'logout' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'body': \"empty\",\n            'headers': custom_function_results_item_1[0],\n            'location': \"/logout\",\n            'verify_certificate': False,\n        })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=addObjectFail, name=\"logout\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "logout",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "67dce993-1447-4d27-bfc4-01c97e99f274",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 645,
                        "line_start": 622,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 24,
                        "order": 29,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": -20
                        },
                        "previous_function": "",
                        "previous_name": "logout",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3050
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObjectFail"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObjectFail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObjectFail() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  HOLD | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name :  phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"createObjectS:action_result.status\",\n        \"createObjectS:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObjectFail\", separator=\", \")\n\n    add_note_7(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "logout",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObjectFail",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d30f0bd-ec66-4f35-b3da-49bb4d976281",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 130,
                        "line_start": 103,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 35,
                        "order": 6,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "createObjectS:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "createObjectS:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1300,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "addObjectFail",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  HOLD | \nExecution Time : {3}\n```\nObject Name : Phantom {0}_32\nGroup Name :  phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3052
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObject2GrpFail"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2GrpFail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2GrpFail() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"createObjectS:action_result.status\",\n        \"createObjectS:action_result.summary.status_code\",\n        \"addObject2Group:action_result.status\",\n        \"addObject2Group:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObject2GrpFail\", separator=\", \")\n\n    add_note_9(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "logout 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2GrpFail",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ad0cce4c-6a06-42cd-9979-2cb8f95257a3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 280,
                        "line_start": 251,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 39,
                        "order": 13,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "createObjectS:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "createObjectS:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "addObject2Group:action_result.status"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "addObject2Group:action_result.summary.status_code"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1300,
                            "y": 280
                        },
                        "previous_function": "",
                        "previous_name": "addObject2GrpFail",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0}| {1}:{2}  |  {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3053
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "addObjectSuccess"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObjectSuccess(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObjectSuccess() called')\n    \n    template = \"\"\"%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} | {1}:{2} | {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n        \"createObjectS:action_result.status\",\n        \"addObject2Group:action_result.summary.status_code\",\n        \"addObject2Group:action_result.status\",\n        \"addObject2Group:action_result.summary.status_code\",\n        \"cf_community_datetime_modify_1:custom_function_result.data.datetime_string\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"addObjectSuccess\", separator=\", \")\n\n    add_note_10(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "logout 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObjectSuccess",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e07e72f-2242-4f01-835f-136d91d5432c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 322,
                        "line_start": 293,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 40,
                        "order": 15,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "createObjectS:action_result.status"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "addObject2Group:action_result.summary.status_code"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "addObject2Group:action_result.status"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "addObject2Group:action_result.summary.status_code"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1300,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "addObjectSuccess",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n| **Destination IP** | **Create Object** | **Add to Object Group** |   \n|-----------|-----------|----------|\n| {0} | {1}:{2} | {3}:{4} | \nExecution Time : {5}\n```\nObject Name : Phantom {0}_32\nGroup Name : phantom-blacklist\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3054
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_7() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObjectFail')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_fail(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObjectFail:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "logout",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "55728ad6-0a71-410c-b3a5-a1b1eaebd840",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 143,
                        "line_start": 130,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 7,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1020,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "add_note_7",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 3055
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_9(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_9() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObject2GrpFail')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_fail_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObject2GrpFail:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "logout 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a748e4e3-8708-4991-ad65-79595cace468",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 293,
                        "line_start": 280,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 9,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1020,
                            "y": 280
                        },
                        "previous_function": "",
                        "previous_name": "add_note_9",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 3056
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_10(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_10() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObjectSuccess')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_success(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObjectSuccess:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "logout 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bbfc1683-5f40-4ac2-9411-f0becd714c18",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 335,
                        "line_start": 322,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 10,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1020,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "add_note_10",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 3057
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"True\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.21",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"True\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 12,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "12",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact success"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_success(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_success() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_success' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_success' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult_Fortigate_Internet\\\":\\\"True\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_success\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "logout 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact success",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c2347999-4cb0-4a75-b708-f6950b80364f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 397,
                        "line_start": 366,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 2,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -720,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_success",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3058
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"False\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"False\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact fail 2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_fail_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_fail_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_fail_2' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_fail_2' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult_Fortigate_Internet\\\":\\\"False\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fail_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "logout 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact fail 2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9fe9dd9a-b4a1-480b-af1b-e539672ce264",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 747,
                        "line_start": 716,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 4,
                        "order": 33,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -720,
                            "y": 280
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_fail_2",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3059
                    },
                    {
                        "action": "update artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "artifact:*.id",
                            "artifact_json": "",
                            "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"False\"}",
                            "cef_types_json": "",
                            "label": "",
                            "name": "",
                            "overwrite": "False",
                            "severity": "",
                            "tags": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.21",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "artifact:*.id",
                                    "artifact_json": "",
                                    "cef_json": "{\"destinationAddress_ContainResult_Fortigate_Internet\":\"False\"}",
                                    "cef_types_json": "",
                                    "label": "",
                                    "name": "",
                                    "overwrite": "False",
                                    "severity": "",
                                    "tags": ""
                                },
                                "has_app": true,
                                "id": 12,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Artifact ID",
                                        "column_order": 0,
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2388"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"severity\": \"high\", \"label\": \"test label\", \"description\": \"Artifact added by Me\", \"source_data_identifier\": \"my_custom_sdi\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": \"new_value\", \"deleted_field\": \"\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_types_json",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"new_field\": [\"new contains\"]}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"tag2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.deleted_field",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new_value"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef.test",
                                        "data_type": "string",
                                        "example_values": [
                                            "fff"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.cef_types.new_field",
                                        "data_type": "string",
                                        "example_values": [
                                            "new contains"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact added by Me"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "test label"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "New Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "high"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.source_data_identifier",
                                        "data_type": "string",
                                        "example_values": [
                                            "my_custom_sdi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requested_artifact.tags",
                                        "data_type": "string",
                                        "example_values": [
                                            "tag2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2388
                                        ]
                                    },
                                    {
                                        "column_name": "Success",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.response.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Artifact updated successfully."
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "contains": [
                                            "phantom artifact id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of artifact to update",
                                        "key": "artifact_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "artifact_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of entire artifact (Always overwrites provided keys)",
                                        "key": "artifact_json",
                                        "order": 8,
                                        "required": false
                                    },
                                    "cef_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF fields you want in the artifact",
                                        "key": "cef_json",
                                        "order": 4,
                                        "required": false
                                    },
                                    "cef_types_json": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON format of the CEF types (e.g., {'myIP': ['ip', 'ipv6']})",
                                        "key": "cef_types_json",
                                        "order": 5,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact label (Always overwrites, if provided)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact name (Always overwrites, if provided)",
                                        "key": "name",
                                        "order": 1,
                                        "required": false
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Overwrite artifacts with provided input (applies to: cef_json, contains_json, tags)",
                                        "key": "overwrite",
                                        "order": 7,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Artifact severity (Always overwrites, if provided)",
                                        "key": "severity",
                                        "order": 3,
                                        "required": false
                                    },
                                    "tags": {
                                        "allow_list": true,
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comma-separated list of tags to add or replace in the artifact",
                                        "key": "tags",
                                        "order": 6,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "12",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update artifact fail"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_artifact_fail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_artifact_fail() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'update_artifact_fail' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.id', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'update_artifact_fail' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'name': \"\",\n                'tags': \"\",\n                'label': \"\",\n                'cef_json': \"{\\\"destinationAddress_ContainResult_Fortigate_Internet\\\":\\\"False\\\"}\",\n                'severity': \"\",\n                'overwrite': False,\n                'artifact_id': container_item[0],\n                'artifact_json': \"\",\n                'cef_types_json': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"update artifact\", parameters=parameters, assets=['phantom asset'], name=\"update_artifact_fail\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "logout",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "update artifact fail",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e08ee6c5-b1f9-4754-8f45-ec98f8db48a3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 366,
                        "line_end": 366,
                        "line_start": 335,
                        "message": "Configuring now",
                        "name": "update artifact",
                        "notes": "",
                        "number": 1,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -720,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "update_artifact_fail",
                        "required_params": {
                            "artifact_id": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3060
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_11(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_11() called')\n\n    formatted_data_1 = phantom.get_format_data(name='addObject2GrpSuccess2')\n\n    note_title = \"Playbook Summary: Block Destination IP\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    update_artifact_success_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "addObject2GrpSuccess2:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Playbook Summary: Block Destination IP",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "logout3",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b3f5e8dd-775b-4703-b03c-d7fbd91532d2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 685,
                        "line_start": 672,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 11,
                        "order": 31,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1020,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "add_note_11",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 3061
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareAuthenBody"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareAuthenBody(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareAuthenBody() called')\n    \n    template = \"\"\"username=phantomcsocfw&secretkey=Ktbcs@123&ajax=1\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareAuthenBody\", separator=\", \")\n\n    authen(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareAuthenBody",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b9cc23d-80ce-4910-b5f4-1ed02e66a052",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 179,
                        "line_start": 163,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 37,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2820,
                            "y": -380
                        },
                        "previous_function": "",
                        "previous_name": "prepareAuthenBody",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "warn",
                        "template": "username=phantomcsocfw&secretkey=Ktbcs@123&ajax=1",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3062
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "prepareAuthenBody:formatted_data",
                            "headers": "",
                            "location": "logincheck",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "prepareAuthenBody:formatted_data",
                                    "headers": "",
                                    "location": "logincheck",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "authen"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def authen(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('authen() called')\n\n    # collect data for 'authen' call\n    formatted_data_1 = phantom.get_format_data(name='prepareAuthenBody')\n\n    parameters = []\n    \n    # build parameters list for 'authen' call\n    parameters.append({\n        'body': formatted_data_1,\n        'headers': \"\",\n        'location': \"logincheck\",\n        'verify_certificate': False,\n    })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=cf_local_prepare_Fortigate_Cookie_Header_v725_1, name=\"authen\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 406,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "authen",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2c219534-0dab-4269-b167-8afde36232bb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 163,
                        "line_start": 143,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 17,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2560,
                            "y": -380
                        },
                        "previous_function": "",
                        "previous_name": "authen",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3063
                    },
                    {
                        ".scmName/text": "local",
                        "Cookies-0": "authen:action_result.data.*.response_headers.set-cookie",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "prepare_Fortigate_Cooki..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_prepare_Fortigate_Cookie_Header_v725_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_prepare_Fortigate_Cookie_Header_v725_1() called')\n    \n    action_results_data_0 = phantom.collect2(container=container, datapath=['authen:action_result.data.*.response_headers.set-cookie', 'authen:action_result.parameter.context.artifact_id'], action_results=results )\n\n    parameters = []\n\n    action_results_data_0_0 = [item[0] for item in action_results_data_0]\n\n    parameters.append({\n        'Cookies': action_results_data_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/prepare_Fortigate_Cookie_Header_v725\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/prepare_Fortigate_Cookie_Header_v725', parameters=parameters, name='cf_local_prepare_Fortigate_Cookie_Header_v725_1', callback=cf_community_datetime_modify_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 230,
                        "callsback": true,
                        "cfDisplayPath": "local/prepare_Fortigate_Cookie_Header_v725",
                        "cfInputs": {
                            "Cookies": {
                                "collectionType": "action_results_data",
                                "dataPath": "authen:action_result.data.*.response_headers.set-cookie",
                                "paramName": "action_results_data_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "authen",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 15,
                        "customFunction": "local/prepare_Fortigate_Cookie_Header_v725",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "eb54dfc0-0ee7-461b-aca1-b55bb32adce5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 582,
                        "line_end": 230,
                        "line_start": 203,
                        "message": "Configuring now",
                        "name": "prepare_Fortigate_Cookie_Header_v725",
                        "notes": "",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2300,
                            "y": -380
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_prepare_Fortigate_Cookie_Header_v725_1",
                        "selectedCustomFunction": {
                            "description": "extract X-CSRF Token from cookie for Fortigate Session based authentication",
                            "draftMode": false,
                            "id": 367,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "prepare_Fortigate_Cookie_Header_v725",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 367,
                                    "description": "",
                                    "id": 600,
                                    "input_type": "list",
                                    "name": "Cookies",
                                    "placeholder": ""
                                }
                            ],
                            "name": "prepare_Fortigate_Cookie_Header_v725",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "prepare_Fortigate_Cookie_Header_v725",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 367,
                                    "data_path": "header",
                                    "description": "",
                                    "id": 355
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATEINTERNET-DR-BLOCKSRCIP_TEST",
                                        "draft_mode": false,
                                        "id": 5205,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIGATEINTERNET-DR-BLOCKSRCIP_TEST",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-UNCONTAIN-INDICATOR-FORTIGATEINTERNET-DR-SRCIP_TEST",
                                        "draft_mode": false,
                                        "id": 5207,
                                        "name": "PLAYBOOK-UNCONTAIN-INDICATOR-FORTIGATEINTERNET-DR-SRCIP_TEST",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 3064
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "amount_to_modify-3": "7",
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "datetime_modify"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_community_datetime_modify_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_community_datetime_modify_1() called')\n    \n    action_results_data_0 = phantom.collect2(container=container, datapath=['authen:action_result.data.*.response_headers.Date', 'authen:action_result.parameter.context.artifact_id'], action_results=results )\n    literal_values_0 = [\n        [\n            7,\n            \"hours\",\n            \"%a, %d %b %Y %H:%M:%S %Z\",\n            \"%b %d,  %Y %H:%M\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in action_results_data_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'input_datetime': item0[0],\n                'amount_to_modify': item1[0],\n                'modification_unit': item1[1],\n                'input_format_string': item1[2],\n                'output_format_string': item1[3],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/datetime_modify\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/datetime_modify', parameters=parameters, name='cf_community_datetime_modify_1', callback=prepareObjectCheckURL)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/datetime_modify",
                        "cfInputs": {
                            "amount_to_modify": {
                                "collectionType": "literal_values",
                                "dataPath": "7",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "input_datetime": {
                                "collectionType": "action_results_data",
                                "dataPath": "authen:action_result.data.*.response_headers.Date",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "input_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%a, %d %b %Y %H:%M:%S %Z",
                                "paramName": "item1[2]",
                                "type": "item"
                            },
                            "modification_unit": {
                                "collectionType": "literal_values",
                                "dataPath": "hours",
                                "paramName": "item1[1]",
                                "type": "item"
                            },
                            "output_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%b %d,  %Y %H:%M",
                                "paramName": "item1[3]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "prepare_Fortigate_Cookie_Header_v725",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 27,
                        "customFunction": "community/datetime_modify",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ef0b226e-b281-453e-9a66-f8eddc7d8478",
                        "inPorts": [
                            "in"
                        ],
                        "input_datetime-0": "authen:action_result.data.*.response_headers.Date",
                        "input_format_string-1": "%a, %d %b %Y %H:%M:%S %Z",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 436,
                        "line_start": 397,
                        "message": "Configuring now",
                        "modification_unit-2": "hours",
                        "name": "datetime_modify",
                        "notes": "",
                        "number": 1,
                        "order": 19,
                        "outPorts": [
                            "out"
                        ],
                        "output_format_string-4": "%b %d,  %Y %H:%M",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2040,
                            "y": -380
                        },
                        "previous_function": "",
                        "previous_name": "cf_community_datetime_modify_1",
                        "selectedCustomFunction": {
                            "description": "Change a timestamp by adding or subtracting minutes, hours, or days.",
                            "draftMode": false,
                            "id": 7,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 7,
                                    "description": "The datetime to modify, which should be provided in a string format determined by input_format_string",
                                    "id": 36,
                                    "input_type": "item",
                                    "name": "input_datetime",
                                    "placeholder": "2020-06-27T14:53:08.219016Z"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "The format string to use for the input according to the Python's datetime.strptime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'. In addition to strptime() formats, the special format \"epoch\" can be used to accept unix epoch timestamps.",
                                    "id": 37,
                                    "input_type": "item",
                                    "name": "input_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 7,
                                    "description": "Choose a unit to modify the date by, which must be either seconds, minutes, hours, or days. If none is provided the default will be 'minutes'",
                                    "id": 38,
                                    "input_type": "item",
                                    "name": "modification_unit",
                                    "placeholder": "minutes"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "The number of seconds, minutes, hours, or days to add or subtract. Use a negative number such as -1.5 to subtract time. Defaults to zero.",
                                    "id": 39,
                                    "input_type": "item",
                                    "name": "amount_to_modify",
                                    "placeholder": "0"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "The format string to use for the output according to the Python's datetime.strftime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'.",
                                    "id": 40,
                                    "input_type": "item",
                                    "name": "output_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                }
                            ],
                            "name": "datetime_modify",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "data_path": "datetime_string",
                                    "description": "The output datetime as formatted by the given output_format_string using Python's datetime.strftime()",
                                    "id": 24
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "data_path": "epoch_time",
                                    "description": "An integer representing the output time as a number of seconds since January 1 1970 assuming a naive UTC timezone. This is easier to use for comparisons to other epoch timestamps.",
                                    "id": 25
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "data_path": "seconds_modified",
                                    "description": "The number of seconds (positive or negative) by which the input was modified",
                                    "id": 26
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "community/aws_find_inactive_users",
                                        "draft_mode": false,
                                        "id": 6,
                                        "name": "aws_find_inactive_users",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/azure_new_user_census",
                                        "draft_mode": false,
                                        "id": 7,
                                        "name": "azure_new_user_census",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/corelight_investigate_dns_alert",
                                        "draft_mode": false,
                                        "id": 12,
                                        "name": "corelight_investigate_dns_alert",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "community/endace_splunk_search_download_pcap",
                                        "draft_mode": false,
                                        "id": 21,
                                        "name": "endace_splunk_search_download_pcap",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "draft_mode": false,
                                        "id": 4825,
                                        "name": "PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "draft_mode": false,
                                        "id": 4826,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "draft_mode": false,
                                        "id": 4827,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIMANAGERVAYU-SRCIP-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "draft_mode": false,
                                        "id": 4828,
                                        "name": "PLAYBOOK-UNCONTAIN-INDICATOR-FORTIMANAGERVAYU-DSTIP-01",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATEACI-BLOCKDSTIP",
                                        "draft_mode": false,
                                        "id": 4829,
                                        "name": "PLAYBOOK-CONTAIN-INDICATOR-FORTIGATEACI-BLOCKDSTIP",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 3065
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareObjectCheckURL"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareObjectCheckURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareObjectCheckURL() called')\n    \n    template = \"\"\"api/v2/cmdb/firewall/address/Phantom {0}_32?vdom=Internet\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareObjectCheckURL\", separator=\", \")\n\n    checkObjectExists(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareObjectCheckURL",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "82be7797-e27a-4519-a4e9-7255e3f3429a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 511,
                        "line_start": 495,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 41,
                        "order": 23,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2820,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "prepareObjectCheckURL",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "api/v2/cmdb/firewall/address/Phantom {0}_32?vdom=Internet",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3066
                    },
                    {
                        "action": "get data",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                            "location": "prepareObjectCheckURL:formatted_data",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "get data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                                    "location": "prepareObjectCheckURL:formatted_data",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/cont"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "GET"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 2,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint?query=string)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 1,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "checkObjectExists"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def checkObjectExists(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('checkObjectExists() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'checkObjectExists' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='prepareObjectCheckURL')\n\n    parameters = []\n    \n    # build parameters list for 'checkObjectExists' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'headers': custom_function_results_item_1[0],\n            'location': formatted_data_1,\n            'verify_certificate': False,\n        })\n\n    phantom.act(action=\"get data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=decision_3, name=\"checkObjectExists\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "datetime_modify",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "checkObjectExists",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "eabae973-b3c1-41a7-9b66-43bbeb6fce31",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 534,
                        "line_start": 511,
                        "message": "Configuring now",
                        "name": "get data",
                        "notes": "",
                        "number": 3,
                        "order": 24,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2560,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "checkObjectExists",
                        "required_params": {
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3067
                    },
                    {
                        "action": "no op",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "sleep_seconds": "5"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "no op",
                                "actions": [
                                    "no op",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "3.2.17",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantom asset",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "sleep_seconds": "5"
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "phantom asset",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.sleep_seconds",
                                        "data_type": "numeric",
                                        "example_values": [
                                            15
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Slept for 15 seconds"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "sleep_seconds": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Sleep for this many seconds",
                                        "key": "sleep_seconds",
                                        "order": 0,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "10",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "sleep"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def sleep(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('sleep() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'sleep' call\n\n    parameters = []\n    \n    # build parameters list for 'sleep' call\n    parameters.append({\n        'sleep_seconds': 5,\n    })\n\n    phantom.act(action=\"no op\", parameters=parameters, assets=['phantom asset'], callback=decision_1, name=\"sleep\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "createObjectS",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "sleep",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cc2e98de-c3b9-4c73-b277-35b9efcf53cf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 495,
                        "line_start": 477,
                        "message": "Configuring now",
                        "name": "no op",
                        "notes": "",
                        "number": 5,
                        "order": 22,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2300,
                            "y": -20
                        },
                        "previous_function": "",
                        "previous_name": "sleep",
                        "required_params": {
                            "sleep_seconds": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3068
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareAdd2group_2"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareAdd2group_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareAdd2group_2() called')\n    \n    template = \"\"\"%%\n                {{\n                    \\\"name\\\": \\\"Phantom {0}_32\\\",\n                }}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareAdd2group_2\", separator=\", \")\n\n    add2group_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "checkObjectExists",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareAdd2group_2",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "880307e6-e4f3-4a0c-9827-bce93a6a9a5b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 575,
                        "line_start": 555,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 42,
                        "order": 26,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2040,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "prepareAdd2group_2",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n                {{\n                    \"name\": \"Phantom {0}_32\",\n                }}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3069
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "prepareAdd2group_2:formatted_data",
                            "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                            "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=Internet",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "prepareAdd2group_2:formatted_data",
                                    "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                                    "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=Internet",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add2group_2"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add2group_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add2group_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'add2group_2' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='prepareAdd2group_2')\n\n    parameters = []\n    \n    # build parameters list for 'add2group_2' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'body': formatted_data_1,\n            'headers': custom_function_results_item_1[0],\n            'location': \"api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=Internet\",\n            'verify_certificate': False,\n        })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=logout3, name=\"add2group_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "checkObjectExists",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "add2group_2",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e7630f23-5135-407c-a0d4-59b049e9085b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 599,
                        "line_start": 575,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 22,
                        "order": 27,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -1800,
                            "y": -200
                        },
                        "previous_function": "",
                        "previous_name": "add2group_2",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3070
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareObjectBody"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareObjectBody(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareObjectBody() called')\n    \n    template = \"\"\"%%\n                {{\n                    \\\"name\\\": \\\"Phantom {0}_32\\\",\n                    \\\"subnet\\\": \\\"{0}/32\\\",\n                    \\\"comment\\\": \\\"Create by Phantom\\\",\n                    \\\"color\\\": 22\n                }},\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareObjectBody\", separator=\", \")\n\n    createObjectS(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "checkObjectExists",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareObjectBody",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3424ae08-9a51-4738-9055-b3ceafdacb32",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 238,
                        "line_end": 38,
                        "line_start": 15,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 33,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2820,
                            "y": -20
                        },
                        "previous_function": "",
                        "previous_name": "prepareObjectBody",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n                {{\n                    \"name\": \"Phantom {0}_32\",\n                    \"subnet\": \"{0}/32\",\n                    \"comment\": \"Create by Phantom\",\n                    \"color\": 22\n                }},\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3071
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "prepareObjectBody:formatted_data",
                            "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                            "location": "api/v2/cmdb/firewall/address?vdom=Internet",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "prepareObjectBody:formatted_data",
                                    "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                                    "location": "api/v2/cmdb/firewall/address?vdom=Internet",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "createObjectS"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def createObjectS(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('createObjectS() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'createObjectS' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='prepareObjectBody')\n\n    parameters = []\n    \n    # build parameters list for 'createObjectS' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'body': formatted_data_1,\n            'headers': custom_function_results_item_1[0],\n            'location': \"api/v2/cmdb/firewall/address?vdom=Internet\",\n            'verify_certificate': False,\n        })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=sleep, name=\"createObjectS\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 559,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "checkObjectExists",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "createObjectS",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9b3239a4-2ea9-43c9-b83c-9b7d8900cf06",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 203,
                        "line_start": 179,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 18,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2560,
                            "y": -20
                        },
                        "previous_function": "",
                        "previous_name": "createObjectS",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3072
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "prepareAdd2GroupBody"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def prepareAdd2GroupBody(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prepareAdd2GroupBody() called')\n    \n    template = \"\"\"%%\n                {{\n                    \\\"name\\\": \\\"Phantom {0}_32\\\",\n                }}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"artifact:*.cef.destinationAddress\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"prepareAdd2GroupBody\", separator=\", \")\n\n    addObject2Group(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "prepareAdd2GroupBody",
                        "delimiter": ", ",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "db4713ad-a92a-4746-aca9-4e98efef0fde",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 79,
                        "line_end": 79,
                        "line_start": 59,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 34,
                        "order": 4,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "artifact:*.cef.destinationAddress"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2820,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "prepareAdd2GroupBody",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\n                {{\n                    \"name\": \"Phantom {0}_32\",\n                }}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 3073
                    },
                    {
                        "action": "post data",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "prepareAdd2GroupBody:formatted_data",
                            "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                            "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=Internet",
                            "verify_certificate": "False"
                        },
                        "angle": 0,
                        "app": "HTTP",
                        "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                        "approver": "",
                        "assets": [
                            {
                                "action": "post data",
                                "actions": [
                                    "post data",
                                    "get data",
                                    "get options",
                                    "get headers",
                                    "delete data",
                                    "patch data",
                                    "put data",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "HTTP",
                                "app_version": "3.2.3",
                                "appid": "290b7499-0374-4930-9cdc-5e9b05d65827",
                                "asset_name": "fortigate-internet-dr (session-based)",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "prepareAdd2GroupBody:formatted_data",
                                    "headers": "cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header",
                                    "location": "api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=Internet",
                                    "verify_certificate": "False"
                                },
                                "has_app": true,
                                "id": 149,
                                "loaded": false,
                                "missing": false,
                                "name": "fortigate-internet-dr (session-based)",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"name\": \"Bad IP\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"Content-Type\": \"application/json\"}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_path": "action_result.parameter.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.verify_certificate",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://192.168.1.26/rest/assets"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.method",
                                        "data_type": "string",
                                        "example_values": [
                                            "POST"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.parsed_response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_body",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.reason",
                                        "data_type": "string",
                                        "example_values": [
                                            "Not Found"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status_code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            404
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Can't process response from server. Status Code: 404 Data from server: {\"failed\": true, \"message\": \"Requested item not found\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "POST body (query string, JSON, etc.)",
                                        "key": "body",
                                        "order": 1,
                                        "required": true
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Additional headers (JSON object with headers)",
                                        "key": "headers",
                                        "order": 3,
                                        "required": false
                                    },
                                    "location": {
                                        "contains": [
                                            "endpoint"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Location (e.g. path/to/endpoint)",
                                        "key": "location",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "verify_certificate": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Verify certificates (if using HTTPS)",
                                        "key": "verify_certificate",
                                        "order": 2,
                                        "required": true
                                    }
                                },
                                "product_name": "HTTP",
                                "product_vendor": "Generic",
                                "targets": "149",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "addObject2Group"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addObject2Group(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('addObject2Group() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'addObject2Group' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_prepare_Fortigate_Cookie_Header_v725_1:custom_function_result.data.header'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='prepareAdd2GroupBody')\n\n    parameters = []\n    \n    # build parameters list for 'addObject2Group' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'body': formatted_data_1,\n            'headers': custom_function_results_item_1[0],\n            'location': \"api/v2/cmdb/firewall/addrgrp/phantom-blacklist/member?vdom=Internet\",\n            'verify_certificate': False,\n        })\n\n    phantom.act(action=\"post data\", parameters=parameters, assets=['fortigate-internet-dr (session-based)'], callback=sleep_2, name=\"addObject2Group\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "sleep",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addObject2Group",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6e4041a1-1697-4ae9-967e-df341f6207e7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 103,
                        "line_start": 79,
                        "message": "Configuring now",
                        "name": "post data",
                        "notes": "",
                        "number": 14,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -2560,
                            "y": 160
                        },
                        "previous_function": "",
                        "previous_name": "addObject2Group",
                        "required_params": {
                            "body": true,
                            "location": true,
                            "verify_certificate": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 3074
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.7.63984"
    },
    "create_time": "2023-09-08T09:04:49.351328+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}