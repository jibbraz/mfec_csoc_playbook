{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "This playbook takes an indicator as input and enriches it from threat intelligence sources based on the indicator type.",
            "edges": [
                {
                    "id": "port_0_to_port_29",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_28_to_port_45",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "45",
                    "targetPort": "45_in"
                },
                {
                    "id": "port_57_to_port_60",
                    "sourceNode": "57",
                    "sourcePort": "57_out",
                    "targetNode": "60",
                    "targetPort": "60_in"
                },
                {
                    "id": "port_50_to_port_51",
                    "sourceNode": "50",
                    "sourcePort": "50_out",
                    "targetNode": "51",
                    "targetPort": "51_in"
                },
                {
                    "id": "port_51_to_port_71",
                    "sourceNode": "51",
                    "sourcePort": "51_out",
                    "targetNode": "71",
                    "targetPort": "71_in"
                },
                {
                    "id": "port_13_to_port_4",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_96_to_port_54",
                    "sourceNode": "96",
                    "sourcePort": "96_out",
                    "targetNode": "54",
                    "targetPort": "54_in"
                },
                {
                    "id": "port_100_to_port_62",
                    "sourceNode": "100",
                    "sourcePort": "100_out",
                    "targetNode": "62",
                    "targetPort": "62_in"
                },
                {
                    "id": "port_49_to_port_2",
                    "sourceNode": "49",
                    "sourcePort": "49_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_62_to_port_79",
                    "sourceNode": "62",
                    "sourcePort": "62_out",
                    "targetNode": "79",
                    "targetPort": "79_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        },
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_62_to_port_61",
                    "sourceNode": "62",
                    "sourcePort": "62_out",
                    "targetNode": "61",
                    "targetPort": "61_in"
                },
                {
                    "id": "port_61_to_port_1",
                    "sourceNode": "61",
                    "sourcePort": "61_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_80_to_port_1",
                    "sourceNode": "80",
                    "sourcePort": "80_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_62_to_port_80",
                    "sourceNode": "62",
                    "sourcePort": "62_out",
                    "targetNode": "80",
                    "targetPort": "80_in"
                },
                {
                    "id": "port_37_to_port_55",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "55",
                    "targetPort": "55_in"
                },
                {
                    "id": "port_60_to_port_44",
                    "sourceNode": "60",
                    "sourcePort": "60_out",
                    "targetNode": "44",
                    "targetPort": "44_in"
                },
                {
                    "id": "port_76_to_port_1",
                    "sourceNode": "76",
                    "sourcePort": "76_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_99_to_port_1",
                    "sourceNode": "99",
                    "sourcePort": "99_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_4_to_port_19",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_39_to_port_46",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "46",
                    "targetPort": "46_in"
                },
                {
                    "id": "port_33_to_port_32",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "id": "port_16_to_port_3",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_7_to_port_34",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "id": "port_73_to_port_1",
                    "sourceNode": "73",
                    "sourcePort": "73_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_12_to_port_30",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_30_to_port_1",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_42_to_port_41",
                    "sourceNode": "42",
                    "sourcePort": "42_out",
                    "targetNode": "41",
                    "targetPort": "41_in"
                },
                {
                    "id": "port_41_to_port_1",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_34_to_port_27",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_27_to_port_50",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "50",
                    "targetPort": "50_in"
                },
                {
                    "id": "port_55_to_port_56",
                    "sourceNode": "55",
                    "sourcePort": "55_out",
                    "targetNode": "56",
                    "targetPort": "56_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_56_to_port_57",
                    "sourceNode": "56",
                    "sourcePort": "56_out",
                    "targetNode": "57",
                    "targetPort": "57_in"
                },
                {
                    "id": "port_2_to_port_63",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "63",
                    "targetPort": "63_in"
                },
                {
                    "id": "port_3_to_port_5",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_46_to_port_47",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "47",
                    "targetPort": "47_in"
                },
                {
                    "id": "port_63_to_port_1",
                    "sourceNode": "63",
                    "sourcePort": "63_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_47_to_port_1",
                    "sourceNode": "47",
                    "sourcePort": "47_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_5_to_port_1",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_21_to_port_22",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_43_to_port_25",
                    "sourceNode": "43",
                    "sourcePort": "43_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_71_to_port_20",
                    "sourceNode": "71",
                    "sourcePort": "71_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_20_to_port_42",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_68_to_port_67",
                    "sourceNode": "68",
                    "sourcePort": "68_out",
                    "targetNode": "67",
                    "targetPort": "67_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_66_to_port_48",
                    "sourceNode": "66",
                    "sourcePort": "66_out",
                    "targetNode": "48",
                    "targetPort": "48_in"
                },
                {
                    "id": "port_67_to_port_74",
                    "sourceNode": "67",
                    "sourcePort": "67_out",
                    "targetNode": "74",
                    "targetPort": "74_in"
                },
                {
                    "id": "port_74_to_port_1",
                    "sourceNode": "74",
                    "sourcePort": "74_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        },
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_54_to_port_40",
                    "sourceNode": "54",
                    "sourcePort": "54_out",
                    "targetNode": "40",
                    "targetPort": "40_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_40_to_port_73",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "73",
                    "targetPort": "73_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_44_to_port_87",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "87",
                    "targetPort": "87_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_87_to_port_31",
                    "sourceNode": "87",
                    "sourcePort": "87_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_31_to_port_53",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "53",
                    "targetPort": "53_in"
                },
                {
                    "id": "port_79_to_port_1",
                    "sourceNode": "79",
                    "sourcePort": "79_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_27_to_port_6",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_52_to_port_1",
                    "sourceNode": "52",
                    "sourcePort": "52_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_56_to_port_38",
                    "sourceNode": "56",
                    "sourcePort": "56_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_38_to_port_59",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "59",
                    "targetPort": "59_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_97_to_port_76",
                    "sourceNode": "97",
                    "sourcePort": "97_out",
                    "targetNode": "76",
                    "targetPort": "76_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_98_to_port_99",
                    "sourceNode": "98",
                    "sourcePort": "98_out",
                    "targetNode": "99",
                    "targetPort": "99_in"
                },
                {
                    "id": "port_24_to_port_8",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_28_to_port_21",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_48_to_port_75",
                    "sourceNode": "48",
                    "sourcePort": "48_out",
                    "targetNode": "75",
                    "targetPort": "75_in"
                },
                {
                    "id": "port_75_to_port_1",
                    "sourceNode": "75",
                    "sourcePort": "75_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_8_to_port_1",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_29_to_port_11",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_29_to_port_26",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_29_to_port_10",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_32_to_port_14",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_14_to_port_13",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_14_to_port_12",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_14_to_port_15",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_15_to_port_16",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_19_to_port_17",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_17_to_port_49",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "49",
                    "targetPort": "49_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_19_to_port_18",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_18_to_port_39",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_11_to_port_28",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_45_to_port_22",
                    "sourceNode": "45",
                    "sourcePort": "45_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_22_to_port_23",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_43",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "43",
                    "targetPort": "43_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_22_to_port_35",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_35_to_port_24",
                    "sourceNode": "35",
                    "sourcePort": "35_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_10_to_port_7",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_26_to_port_37",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "37",
                    "targetPort": "37_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_9_to_port_33",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_56_to_port_58",
                    "sourceNode": "56",
                    "sourcePort": "56_out",
                    "targetNode": "58",
                    "targetPort": "58_in"
                },
                {
                    "id": "port_29_to_port_9",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_36_to_port_95",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "95",
                    "targetPort": "95_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_56_to_port_36",
                    "sourceNode": "56",
                    "sourcePort": "56_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_14_to_port_36",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_22_to_port_36",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_27_to_port_36",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "id": "port_59_to_port_1",
                    "sourceNode": "59",
                    "sourcePort": "59_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_25_to_port_1",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_65_to_port_69",
                    "sourceNode": "65",
                    "sourcePort": "65_out",
                    "targetNode": "69",
                    "targetPort": "69_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_69_to_port_103",
                    "sourceNode": "69",
                    "sourcePort": "69_out",
                    "targetNode": "103",
                    "targetPort": "103_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_69_to_port_66",
                    "sourceNode": "69",
                    "sourcePort": "69_out",
                    "targetNode": "66",
                    "targetPort": "66_in"
                },
                {
                    "id": "port_103_to_port_68",
                    "sourceNode": "103",
                    "sourcePort": "103_out",
                    "targetNode": "68",
                    "targetPort": "68_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_6_to_port_52",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "52",
                    "targetPort": "52_in"
                },
                {
                    "id": "port_90_to_port_86",
                    "sourceNode": "90",
                    "sourcePort": "90_out",
                    "targetNode": "86",
                    "targetPort": "86_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_86_to_port_91",
                    "sourceNode": "86",
                    "sourcePort": "86_out",
                    "targetNode": "91",
                    "targetPort": "91_in"
                },
                {
                    "id": "port_91_to_port_83",
                    "sourceNode": "91",
                    "sourcePort": "91_out",
                    "targetNode": "83",
                    "targetPort": "83_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_83_to_port_102",
                    "sourceNode": "83",
                    "sourcePort": "83_out",
                    "targetNode": "102",
                    "targetPort": "102_in"
                },
                {
                    "id": "port_102_to_port_92",
                    "sourceNode": "102",
                    "sourcePort": "102_out",
                    "targetNode": "92",
                    "targetPort": "92_in"
                },
                {
                    "id": "port_92_to_port_101",
                    "sourceNode": "92",
                    "sourcePort": "92_out",
                    "targetNode": "101",
                    "targetPort": "101_in"
                },
                {
                    "id": "port_101_to_port_94",
                    "sourceNode": "101",
                    "sourcePort": "101_out",
                    "targetNode": "94",
                    "targetPort": "94_in"
                },
                {
                    "id": "port_94_to_port_85",
                    "sourceNode": "94",
                    "sourcePort": "94_out",
                    "targetNode": "85",
                    "targetPort": "85_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_85_to_port_82",
                    "sourceNode": "85",
                    "sourcePort": "85_out",
                    "targetNode": "82",
                    "targetPort": "82_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_85_to_port_84",
                    "sourceNode": "85",
                    "sourcePort": "85_out",
                    "targetNode": "84",
                    "targetPort": "84_in"
                },
                {
                    "id": "port_84_to_port_93",
                    "sourceNode": "84",
                    "sourcePort": "84_out",
                    "targetNode": "93",
                    "targetPort": "93_in"
                },
                {
                    "id": "port_82_to_port_84",
                    "sourceNode": "82",
                    "sourcePort": "82_out",
                    "targetNode": "84",
                    "targetPort": "84_in"
                },
                {
                    "id": "port_93_to_port_81",
                    "sourceNode": "93",
                    "sourcePort": "93_out",
                    "targetNode": "81",
                    "targetPort": "81_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_81_to_port_86",
                    "sourceNode": "81",
                    "sourcePort": "81_out",
                    "targetNode": "86",
                    "targetPort": "86_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_81_to_port_64",
                    "sourceNode": "81",
                    "sourcePort": "81_out",
                    "targetNode": "64",
                    "targetPort": "64_in"
                },
                {
                    "id": "port_64_to_port_70",
                    "sourceNode": "64",
                    "sourcePort": "64_out",
                    "targetNode": "70",
                    "targetPort": "70_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_70_to_port_77",
                    "sourceNode": "70",
                    "sourcePort": "70_out",
                    "targetNode": "77",
                    "targetPort": "77_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_70_to_port_97",
                    "sourceNode": "70",
                    "sourcePort": "70_out",
                    "targetNode": "97",
                    "targetPort": "97_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_70_to_port_98",
                    "sourceNode": "70",
                    "sourcePort": "70_out",
                    "targetNode": "98",
                    "targetPort": "98_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_70_to_port_78",
                    "sourceNode": "70",
                    "sourcePort": "70_out",
                    "targetNode": "78",
                    "targetPort": "78_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_71_to_port_88",
                    "sourceNode": "71",
                    "sourcePort": "71_out",
                    "targetNode": "88",
                    "targetPort": "88_in"
                },
                {
                    "id": "port_88_to_port_72",
                    "sourceNode": "88",
                    "sourcePort": "88_out",
                    "targetNode": "72",
                    "targetPort": "72_in"
                },
                {
                    "id": "port_89_to_port_90",
                    "sourceNode": "89",
                    "sourcePort": "89_out",
                    "targetNode": "90",
                    "targetPort": "90_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_62_to_port_89",
                    "sourceNode": "62",
                    "sourcePort": "62_out",
                    "targetNode": "89",
                    "targetPort": "89_in"
                },
                {
                    "id": "port_72_to_port_96",
                    "sourceNode": "72",
                    "sourcePort": "72_out",
                    "targetNode": "96",
                    "targetPort": "96_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_54_to_port_65",
                    "sourceNode": "54",
                    "sourcePort": "54_out",
                    "targetNode": "65",
                    "targetPort": "65_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_44_to_port_98",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "98",
                    "targetPort": "98_in"
                }
            ],
            "globalCustomCode": "import ipaddress\nURL_CONTAIN_FAILED = False",
            "hash": "23d7776f9bb4b86a8edc5003ca979f5e79cf531e",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 2880,
                    "y": -1220
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 2120,
                    "y": 4480
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Filter IOC IP",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "fetch_active_threat_feed:action_result.data.*.type",
                                        "value": "ip"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 17,
                        "functionName": "filter_ioc_ip",
                        "id": "10",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "filter",
                    "warnings": {},
                    "x": 2280,
                    "y": -660
                },
                "100": {
                    "data": {
                        "advanced": {
                            "customName": "Prompt URL Containment",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "approver": {
                            "type": "role",
                            "value": "Tier2 Analyst"
                        },
                        "functionId": 2,
                        "functionName": "prompt_url_containment",
                        "id": "100",
                        "message": "***WARNING*** \nDo you want to proceed with containment?\n\nMalicious URL :\nURL = {0}",
                        "parameters": [
                            "url_reputation_on_vt_v3:action_result.parameter.url"
                        ],
                        "responseTime": 5.0,
                        "responses": [
                            {
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {
                        "responses": [
                            {
                                "responsePrompt": "Questions cannot be empty."
                            }
                        ]
                    },
                    "id": "100",
                    "type": "prompt",
                    "warnings": {},
                    "x": 3960,
                    "y": 1020
                },
                "101": {
                    "customCode": "def fortigate_block_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('fortigate_block_url() called')\n    \n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n\n    # call playbook \"local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATECSOC-URL\", returns the playbook_run_id\n    playbook_run_id = phantom.playbook(playbook=\"local/PLAYBOOK-CONTAIN-INDICATOR-FORTIGATEKTBCS-URL\", container=container, name=f\"fortigate_block_url_{len(URL_LIST_TO_CONTAIN)}\", callback=sleep)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "FortiGate Block URL",
                            "customNameId": 0,
                            "description": "FortiGate Block URL",
                            "join": [],
                            "note": "FortiGate Block URL"
                        },
                        "functionId": 1,
                        "functionName": "fortigate_block_url",
                        "id": "101",
                        "inputs": {},
                        "playbookName": "test-nploywon-mfec-dummy-block-url",
                        "playbookRepoName": "local",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "101",
                    "type": "playbook",
                    "warnings": {},
                    "x": 4480,
                    "y": 3500
                },
                "102": {
                    "data": {
                        "advanced": {
                            "customName": "Prepare URL artifact",
                            "customNameId": 0,
                            "description": "Prepare URL artifact",
                            "join": [],
                            "note": "Prepare URL artifact",
                            "separator": ", "
                        },
                        "functionId": 55,
                        "functionName": "prepare_url_artifact",
                        "id": "102",
                        "parameters": [
                            "get_the_top_url_from_the_array:custom_function:top_url"
                        ],
                        "template": "{{\"requestURL\": \"{0}\", \"requestURL_malicious\": \"True\"}}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "102",
                    "type": "format",
                    "warnings": {},
                    "x": 4480,
                    "y": 2940
                },
                "103": {
                    "customCode": "def add_malicious_ip_to_custom_list(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_malicious_ip_to_custom_list() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    IP_LIST_NAMES = [ \n        \"Firepower - IP to contain\",\n        #\"Fortigate - Src IP to contain\",\n        #\"Fortigate - Dest IP to contain\",\n        \"Fortimanager - Dest IP to contain\",\n        \"Fortimanager - Src IP to contain\",\n        \"PaloAlto - Dest IP to contain\",\n        \"PaloAlto - Src IP to contain\"\n    ]\n    \n    for IP_LIST_NAME in IP_LIST_NAMES:\n        for ip in filtered_results_item_1_0:\n            success, message, num_of_matching_row = phantom.check_list(list_name=IP_LIST_NAME, value=ip, case_sensitive=True, substring=False)\n            if num_of_matching_row == 0:\n                phantom.add_list(list_name=IP_LIST_NAME, values=[ip])\n                phantom.debug(f\"List: `{IP_LIST_NAME}`, IP: {ip}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    filter_35(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Add malicious IP to custom list",
                            "customNameId": 0,
                            "description": "Add malicious IP to custom list",
                            "join": [],
                            "note": "Add IP to custom list"
                        },
                        "functionId": 1,
                        "functionName": "add_malicious_ip_to_custom_list",
                        "id": "103",
                        "inputParameters": [
                            "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "103",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n\n    IP_LIST_NAMES = [ \n        \"Firepower - IP to contain\",\n        #\"Fortigate - Src IP to contain\",\n        #\"Fortigate - Dest IP to contain\",\n        \"Fortimanager - Dest IP to contain\",\n        \"Fortimanager - Src IP to contain\",\n        \"PaloAlto - Dest IP to contain\",\n        \"PaloAlto - Src IP to contain\"\n    ]\n    \n    for IP_LIST_NAME in IP_LIST_NAMES:\n        for ip in filtered_results_item_1_0:\n            success, message, num_of_matching_row = phantom.check_list(list_name=IP_LIST_NAME, value=ip, case_sensitive=True, substring=False)\n            if num_of_matching_row == 0:\n                phantom.add_list(list_name=IP_LIST_NAME, values=[ip])\n                phantom.debug(f\"List: `{IP_LIST_NAME}`, IP: {ip}\")\n\n",
                    "warnings": {},
                    "x": 2280,
                    "y": 2460
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "Filter IOC Domain",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "fetch_active_threat_feed:action_result.data.*.type",
                                        "value": "domain"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 18,
                        "functionName": "filter_ioc_domain",
                        "id": "11",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "filter",
                    "warnings": {},
                    "x": 2840,
                    "y": -660
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "Format VT Failure",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 54,
                        "functionName": "format_vt_failure",
                        "id": "12",
                        "parameters": [
                            "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "IoC File Hash VirusTotal Failure\n%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "format",
                    "warnings": {},
                    "x": 5040,
                    "y": 220
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "Format Hash Containment Query",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 34,
                        "functionName": "format_hash_containment_query",
                        "id": "13",
                        "parameters": [
                            "filtered-data:filter_44:condition_1:file_reputation_on_vt_v:action_result.parameter.hash"
                        ],
                        "template": "%%\nsummariesonly=t count as evt_count from datamodel=Intrusion_Detection where Intrusion_Detection.sourcetype=\"fortinet:sandbox:syslog\" AND Intrusion_Detection.file_hash={0} AND Intrusion_Detection.action=\"blocked\" AND Intrusion_Detection.action=\"block\" AND Intrusion_Detection.action=\"denied\" earliest=-7d@d latest=now\n| fields evt_count\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {},
                    "x": 5400,
                    "y": 340
                },
                "14": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "file_reputation_on_vt_v:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "file_reputation_on_vt_v:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "<=",
                                        "param": "file_reputation_on_vt_v:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "file_reputation_on_vt_v:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 1,
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "file_reputation_on_vt_v:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "conditionIndex": 2,
                                "logic": "and"
                            }
                        ],
                        "functionId": 44,
                        "functionName": "filter_44",
                        "id": "14",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "filter",
                    "warnings": {},
                    "x": 5320,
                    "y": 40
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_44:condition_2:file_reputation_on_vt_v:action_result.parameter.hash",
                                        "value": "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 45,
                        "functionName": "filter_45",
                        "id": "15",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "filter",
                    "warnings": {},
                    "x": 5680,
                    "y": 120
                },
                "16": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Benign and Investigated Tag",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 17,
                        "functionName": "add_benign_and_investigated_tag",
                        "id": "16",
                        "parameters": {
                            "id": "filtered-data:filter_45:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "green"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "action",
                    "warnings": {},
                    "x": 5680,
                    "y": 340
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_44:condition_1:file_reputation_on_vt_v:action_result.parameter.hash",
                                        "value": "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 46,
                        "functionName": "filter_46",
                        "id": "17",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "filter",
                    "warnings": {},
                    "x": 5040,
                    "y": 1160
                },
                "18": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_44:condition_1:file_reputation_on_vt_v:action_result.parameter.hash",
                                        "value": "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 47,
                        "functionName": "filter_47",
                        "id": "18",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "filter",
                    "warnings": {},
                    "x": 5360,
                    "y": 1160
                },
                "19": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "run_hash_containment_query:action_result.data.*.evt_count",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 21,
                        "functionName": "decision_21",
                        "id": "19",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "decision",
                    "warnings": {},
                    "x": 5040,
                    "y": 920
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Email Content Hash",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 37,
                        "functionName": "email_content_hash",
                        "id": "2",
                        "parameters": [
                            "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "{0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "format",
                    "warnings": {},
                    "x": 5040,
                    "y": 1740
                },
                "20": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_ioc_ip:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 34,
                        "functionName": "filter_34",
                        "id": "20",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "filter",
                    "warnings": {},
                    "x": 1840,
                    "y": 1020
                },
                "21": {
                    "data": {
                        "action": "domain reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Domain Reputation on VT v3",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "VirusTotal v3",
                        "connectorConfigs": [
                            "virustotal v3 asset"
                        ],
                        "connectorId": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "domain_reputation_on_vt_v3",
                        "id": "21",
                        "parameters": {
                            "domain": "format_domain:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "domain"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "action",
                    "warnings": {},
                    "x": 3240,
                    "y": -160
                },
                "22": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "domain_reputation_on_vt_v3"
                            ]
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "domain_reputation_on_vt_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "domain_reputation_on_umbrella:action_result.summary.domain_status",
                                        "value": "MALICIOUS"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "or"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "domain_reputation_on_umbrella:action_result.summary.domain_status",
                                        "value": "MALICIOUS"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "<=",
                                        "param": "domain_reputation_on_vt_v3:action_result.summary.malicious",
                                        "value": "2"
                                    }
                                ],
                                "conditionIndex": 1,
                                "logic": "and"
                            }
                        ],
                        "functionId": 23,
                        "functionName": "filter_23",
                        "id": "22",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "filter",
                    "warnings": {},
                    "x": 3040,
                    "y": 140
                },
                "23": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_23:condition_1:domain_reputation_on_vt_v3:action_result.parameter.domain",
                                        "value": "filtered-data:filter_ioc_domain:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 33,
                        "functionName": "filter_33",
                        "id": "23",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "filter",
                    "warnings": {},
                    "x": 2840,
                    "y": 360
                },
                "24": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Benign Tag Domain",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 25,
                        "functionName": "add_benign_tag_domain",
                        "id": "24",
                        "parameters": {
                            "id": "filtered-data:filter_43:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "amber"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "action",
                    "warnings": {},
                    "x": 3240,
                    "y": 540
                },
                "25": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 56,
                        "functionName": "add_note_56",
                        "id": "25",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "filtered-data:filter_33:condition_1:fetch_active_threat_feed:action_result.data.*.value",
                                "note_format": "markdown",
                                "title": "Umbrella Malicious IoC Domain"
                            }
                        }
                    },
                    "errors": {},
                    "id": "25",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 2840,
                    "y": 820
                },
                "26": {
                    "data": {
                        "advanced": {
                            "customName": "Filter IOC URL",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "fetch_active_threat_feed:action_result.data.*.type",
                                        "value": "url"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 16,
                        "functionName": "filter_ioc_url",
                        "id": "26",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "filter",
                    "warnings": {},
                    "x": 3600,
                    "y": -660
                },
                "27": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "ip_reputation_on_vt_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "filtered-data:filter_ioc_ip:condition_1:fetch_active_threat_feed:action_result.data.*.value",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "<=",
                                        "param": "ip_reputation_on_vt_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "filtered-data:filter_ioc_ip:condition_1:fetch_active_threat_feed:action_result.data.*.value",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "logic": "and"
                            }
                        ],
                        "functionId": 28,
                        "functionName": "filter_28",
                        "id": "27",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "filter",
                    "warnings": {},
                    "x": 2280,
                    "y": 140
                },
                "28": {
                    "data": {
                        "advanced": {
                            "customName": "Format Domain",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 22,
                        "functionName": "format_domain",
                        "id": "28",
                        "parameters": [
                            "filtered-data:filter_ioc_domain:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "28",
                    "type": "format",
                    "warnings": {},
                    "x": 2840,
                    "y": -460
                },
                "29": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Fetch Active Threat Feed",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "fetch_active_threat_feed",
                        "id": "29",
                        "parameters": {
                            "limit": "45",
                            "offset": "",
                            "order_by": "",
                            "query": "{\"q\":\"status=active AND tags=phantominput AND NOT tags=phantominvestigated\"}"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "action",
                    "warnings": {},
                    "x": 2840,
                    "y": -1080
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "Form Email File Hash",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 52,
                        "functionName": "form_email_file_hash",
                        "id": "3",
                        "parameters": [
                            "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "Hi SOC,\nBelow IOC File Hash have been taged as \" PhantomInvestigated\" and \"PhantomBenign\"\n%%\n{0}\n%%\nThanks",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "format",
                    "warnings": {},
                    "x": 5680,
                    "y": 660
                },
                "30": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 53,
                        "functionName": "add_note_53",
                        "id": "30",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_vt_failure:formatted_data",
                                "note_format": "markdown",
                                "title": "Failure occurred on VirusTotal"
                            }
                        }
                    },
                    "errors": {},
                    "id": "30",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 5040,
                    "y": 480
                },
                "31": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Malicious and Contained Tags URL",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 10,
                        "functionName": "add_malicious_and_contained_tags_url",
                        "id": "31",
                        "parameters": {
                            "id": "filtered-data:filter_38:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "action",
                    "warnings": {},
                    "x": 3600,
                    "y": 1500
                },
                "32": {
                    "data": {
                        "action": "file reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "File Reputation on VT_V",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "VirusTotal v3",
                        "connectorConfigs": [
                            "virustotal v3 asset"
                        ],
                        "connectorId": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "file_reputation_on_vt_v",
                        "id": "32",
                        "parameters": {
                            "hash": "format_file_hash:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "hash"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "action",
                    "warnings": {},
                    "x": 4520,
                    "y": -220
                },
                "33": {
                    "data": {
                        "advanced": {
                            "customName": "Format File Hash",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 23,
                        "functionName": "format_file_hash",
                        "id": "33",
                        "parameters": [
                            "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "33",
                    "type": "format",
                    "warnings": {},
                    "x": 4520,
                    "y": -480
                },
                "34": {
                    "data": {
                        "action": "ip reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "IP Reputation on VT v3",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "VirusTotal v3",
                        "connectorConfigs": [
                            "virustotal v3 asset"
                        ],
                        "connectorId": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "connectorVersion": "v1",
                        "functionId": 8,
                        "functionName": "ip_reputation_on_vt_v3",
                        "id": "34",
                        "parameters": {
                            "ip": "format_ip:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ip"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "34",
                    "type": "action",
                    "warnings": {},
                    "x": 2280,
                    "y": -160
                },
                "35": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_23:condition_2:domain_reputation_on_vt_v3:action_result.parameter.domain",
                                        "value": "filtered-data:filter_ioc_domain:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 43,
                        "functionName": "filter_43",
                        "id": "35",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "35",
                    "type": "filter",
                    "warnings": {},
                    "x": 3240,
                    "y": 360
                },
                "36": {
                    "data": {
                        "advanced": {
                            "customName": "Email Content",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 36,
                        "functionName": "email_content",
                        "id": "36",
                        "parameters": [
                            "filtered-data:filter_29:condition_1:url_reputation_on_vt_v3:action_result.parameter.url",
                            "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip",
                            "filtered-data:filter_23:condition_1:domain_reputation_on_vt_v3:action_result.parameter.domain",
                            "filtered-data:filter_44:condition_1:file_reputation_on_vt_v:action_result.parameter.hash"
                        ],
                        "template": "Malicious IOC URLs:\n%%\n{0}\n%%\n\nMalicious IOC IPs:\n%%\n{1}\n%%\n\nMalicious IOC Domains:\n%%\n{2}\n%%\n\nMalicious IOC Hashs\n%%\n{3}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "36",
                    "type": "format",
                    "warnings": {},
                    "x": 4880,
                    "y": -220
                },
                "37": {
                    "data": {
                        "advanced": {
                            "customName": "Format URL",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 21,
                        "functionName": "format_url",
                        "id": "37",
                        "parameters": [
                            "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "37",
                    "type": "format",
                    "warnings": {},
                    "x": 3600,
                    "y": -480
                },
                "38": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_29:condition_2:url_reputation_on_vt_v3:action_result.parameter.url",
                                        "value": "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 40,
                        "functionName": "filter_40",
                        "id": "38",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "38",
                    "type": "filter",
                    "warnings": {},
                    "x": 4120,
                    "y": 220
                },
                "39": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Investigated and Malicious Tags Hash",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 11,
                        "functionName": "add_investigated_and_malicious_tags_hash",
                        "id": "39",
                        "parameters": {
                            "id": "filtered-data:filter_47:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "39",
                    "type": "action",
                    "warnings": {},
                    "x": 5360,
                    "y": 1420
                },
                "4": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run Hash Containment Query",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 8,
                        "functionName": "run_hash_containment_query",
                        "id": "4",
                        "parameters": {
                            "command": "tstats",
                            "display": "evt_count",
                            "parse_only": "False",
                            "query": "format_hash_containment_query:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 5400,
                    "y": 660
                },
                "40": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 37,
                        "functionName": "filter_37",
                        "id": "40",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "40",
                    "type": "filter",
                    "warnings": {},
                    "x": 1840,
                    "y": 2080
                },
                "41": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 61,
                        "functionName": "add_note_61",
                        "id": "41",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "filtered-data:filter_34:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip",
                                "note_format": "markdown",
                                "title": "Investigated and Bening IoC IP"
                            }
                        }
                    },
                    "errors": {},
                    "id": "41",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1840,
                    "y": 1680
                },
                "42": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Malicious and Contained IP",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 22,
                        "functionName": "add_malicious_and_contained_ip",
                        "id": "42",
                        "parameters": {
                            "id": "filtered-data:filter_34:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "42",
                    "type": "action",
                    "warnings": {},
                    "x": 1840,
                    "y": 1320
                },
                "43": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Domain IoC Add Malicious Tag",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 21,
                        "functionName": "domain_ioc_add_malicious_tag",
                        "id": "43",
                        "parameters": {
                            "id": "filtered-data:filter_33:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomMalicious,PhantomInvestigated",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "43",
                    "type": "action",
                    "warnings": {},
                    "x": 2840,
                    "y": 540
                },
                "44": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "run_url_containment_query:action_result.data.*.evt_count",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 19,
                        "functionName": "decision_19",
                        "id": "44",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "44",
                    "type": "decision",
                    "warnings": {},
                    "x": 3600,
                    "y": 940
                },
                "45": {
                    "data": {
                        "action": "domain reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Domain Reputation on Umbrella",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "Cisco Umbrella Investigate",
                        "connectorConfigs": [
                            "ktb-umbrella-asset"
                        ],
                        "connectorId": "5fc14867-8c8e-4cc2-8198-641df784bf1a",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "domain_reputation_on_umbrella",
                        "id": "45",
                        "parameters": {
                            "domain": "format_domain:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "domain"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "45",
                    "type": "action",
                    "warnings": {},
                    "x": 2840,
                    "y": -160
                },
                "46": {
                    "data": {
                        "advanced": {
                            "customName": "Format Email to SOC",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 35,
                        "functionName": "format_email_to_soc",
                        "id": "46",
                        "parameters": [
                            "filtered-data:filter_ioc_file_hash:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "Below Malicious File Hash are NOT being contained:\n%%\n{0}\n\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "46",
                    "type": "format",
                    "warnings": {},
                    "x": 5360,
                    "y": 1760
                },
                "47": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 66,
                        "functionName": "add_note_66",
                        "id": "47",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_email_to_soc:formatted_data",
                                "note_format": "markdown",
                                "title": "NonContained File Hash IoC"
                            }
                        }
                    },
                    "errors": {},
                    "id": "47",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 5360,
                    "y": 2040
                },
                "48": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add NonContained Tag IP",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 18,
                        "functionName": "add_noncontained_tag_ip",
                        "id": "48",
                        "parameters": {
                            "id": "filtered-data:filter_36:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomNonContained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "48",
                    "type": "action",
                    "warnings": {},
                    "x": 2600,
                    "y": 3060
                },
                "49": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Malicious and Contained Tag Hash",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 13,
                        "functionName": "add_malicious_and_contained_tag_hash",
                        "id": "49",
                        "parameters": {
                            "id": "filtered-data:filter_46:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomContained",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "49",
                    "type": "action",
                    "warnings": {},
                    "x": 5040,
                    "y": 1420
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 65,
                        "functionName": "add_note_65",
                        "id": "5",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "form_email_file_hash:formatted_data",
                                "note_format": "markdown",
                                "title": "Benign File Hash IoC"
                            }
                        }
                    },
                    "errors": {},
                    "id": "5",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 5680,
                    "y": 2040
                },
                "50": {
                    "data": {
                        "advanced": {
                            "customName": "Format IP Containment Query on VT",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 26,
                        "functionName": "format_ip_containment_query_on_vt",
                        "id": "50",
                        "parameters": [
                            "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip"
                        ],
                        "template": "%%\nsummariesonly=t count as evt_count from datamodel=Network_Traffic where Network_Traffic.sourcetype=\"pan:traffic\" AND Network_Traffic.action=\"deny\" AND ( Network_Traffic.dest_ip=\"{0}\" OR Network_Traffic.src_ip=\"{0}\" )\nearliest=-7d@d latest=now\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "50",
                    "type": "format",
                    "warnings": {},
                    "x": 2280,
                    "y": 300
                },
                "51": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run IP Query for VT",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 7,
                        "functionName": "run_ip_query_for_vt",
                        "id": "51",
                        "parameters": {
                            "command": "tstats",
                            "display": "evt_count",
                            "parse_only": "False",
                            "query": "format_ip_containment_query_on_vt:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "51",
                    "type": "action",
                    "warnings": {},
                    "x": 2280,
                    "y": 560
                },
                "52": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Benign Tag IP",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 24,
                        "functionName": "add_benign_tag_ip",
                        "id": "52",
                        "parameters": {
                            "id": "filtered-data:filter_39:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "green"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "52",
                    "type": "action",
                    "warnings": {},
                    "x": 2000,
                    "y": 560
                },
                "53": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 71,
                        "functionName": "add_note_71",
                        "id": "53",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "filtered-data:filter_38:condition_1:url_reputation_on_vt_v3:action_result.parameter.url",
                                "note_format": "markdown",
                                "title": "Already contained URL IoC"
                            }
                        }
                    },
                    "errors": {},
                    "id": "53",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 3600,
                    "y": 1780
                },
                "54": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "prompt_block_ip:action_result.summary.responses.0",
                                        "value": "Yes"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "prompt_block_ip:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "prompt_block_ip:action_result.summary.responses.0",
                                        "value": "No"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "prompt_block_ip:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "prompt_block_ip:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "functionId": 15,
                        "functionName": "decision_15",
                        "id": "54",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "54",
                    "type": "decision",
                    "warnings": {},
                    "x": 2320,
                    "y": 1880
                },
                "55": {
                    "data": {
                        "action": "url reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "URL Reputation on VT_v3",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "VirusTotal v3",
                        "connectorConfigs": [
                            "virustotal v3 asset"
                        ],
                        "connectorId": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "url_reputation_on_vt_v3",
                        "id": "55",
                        "parameters": {
                            "url": "format_url:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "url"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "55",
                    "type": "action",
                    "warnings": {},
                    "x": 3600,
                    "y": -160
                },
                "56": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "url_reputation_on_vt_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "url_reputation_on_vt_v3:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "<=",
                                        "param": "url_reputation_on_vt_v3:action_result.summary.malicious",
                                        "value": "2"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "url_reputation_on_vt_v3:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 1,
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "url_reputation_on_vt_v3:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "conditionIndex": 2,
                                "logic": "and"
                            }
                        ],
                        "functionId": 29,
                        "functionName": "filter_29",
                        "id": "56",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "56",
                    "type": "filter",
                    "warnings": {},
                    "x": 3600,
                    "y": 140
                },
                "57": {
                    "data": {
                        "advanced": {
                            "customName": "Format URL Containment Query",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 19,
                        "functionName": "format_url_containment_query",
                        "id": "57",
                        "parameters": [
                            "filtered-data:filter_29:condition_1:url_reputation_on_vt_v3:action_result.parameter.url"
                        ],
                        "template": "%%\nsummariesonly=t count as evt_count from datamodel=Web where (Web.url=\"{0}\") AND Web.sourcetype!=\"stream:http\"  AND Web.action=\"blocked\" earliest=-2d@d latest=now\n| fields evt_count\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "57",
                    "type": "format",
                    "warnings": {},
                    "x": 3600,
                    "y": 360
                },
                "58": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 77,
                        "functionName": "add_note_77",
                        "id": "58",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "filtered-data:filter_29:condition_3:url_reputation_on_vt_v3:action_result.parameter.url",
                                "note_format": "markdown",
                                "title": "IoC URL VT Failure"
                            }
                        }
                    },
                    "errors": {},
                    "id": "58",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 3880,
                    "y": 360
                },
                "59": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "URL Add Investigated and Benign Tags",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "url_add_investigated_and_benign_tags",
                        "id": "59",
                        "parameters": {
                            "id": "filtered-data:filter_40:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomBenign",
                            "tlp": "green"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "59",
                    "type": "action",
                    "warnings": {},
                    "x": 4120,
                    "y": 360
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_28:condition_2:ip_reputation_on_vt_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_2:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 39,
                        "functionName": "filter_39",
                        "id": "6",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "filter",
                    "warnings": {},
                    "x": 2000,
                    "y": 280
                },
                "60": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run URL Containment Query",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk es asset"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "run_url_containment_query",
                        "id": "60",
                        "parameters": {
                            "command": "tstats",
                            "display": "evt_count",
                            "parse_only": "False",
                            "query": "format_url_containment_query:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "60",
                    "type": "action",
                    "warnings": {},
                    "x": 3600,
                    "y": 660
                },
                "61": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Malicious and NonContained Tags URL",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 14,
                        "functionName": "add_malicious_and_noncontained_tags_url",
                        "id": "61",
                        "parameters": {
                            "id": "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "61",
                    "type": "action",
                    "warnings": {},
                    "x": 4240,
                    "y": 1780
                },
                "62": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "prompt_url_containment:action_result.status",
                                        "value": "success"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "prompt_url_containment:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "prompt_url_containment:action_result.status",
                                        "value": "success"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "prompt_url_containment:action_result.summary.responses.0",
                                        "value": "No"
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "prompt_url_containment:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "conditionIndex": 2,
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            }
                        ],
                        "functionId": 17,
                        "functionName": "decision_17",
                        "id": "62",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "62",
                    "type": "decision",
                    "warnings": {},
                    "x": 3960,
                    "y": 1380
                },
                "63": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 64,
                        "functionName": "add_note_64",
                        "id": "63",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "email_content_hash:formatted_data",
                                "note_format": "markdown",
                                "title": "Malicious File Hash IoC"
                            }
                        }
                    },
                    "errors": {},
                    "id": "63",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 5040,
                    "y": 2040
                },
                "64": {
                    "customCode": "def get_containment_status(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_containment_status() called')\n    \n    input_parameter_0 = \"\"\n\n    get_containment_status__is_contain_failed = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    get_containment_status__is_contain_failed = URL_CONTAIN_FAILED\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='get_containment_status:is_contain_failed', value=json.dumps(get_containment_status__is_contain_failed))\n    decision_31(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Get containment status",
                            "customNameId": 0,
                            "description": "Get containment status",
                            "join": [],
                            "note": "Get containment status"
                        },
                        "functionId": 8,
                        "functionName": "get_containment_status",
                        "id": "64",
                        "inputParameters": [],
                        "outputVariables": [
                            "is_contain_failed"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "64",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    get_containment_status__is_contain_failed = URL_CONTAIN_FAILED\n\n",
                    "warnings": {},
                    "x": 4480,
                    "y": 5000
                },
                "65": {
                    "customCode": "def get_total_amount_of_ip_address(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_total_amount_of_ip_address() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    get_total_amount_of_ip_address__total_num_of_ip = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    import ipaddress\n    ipaddress_list = set(filtered_results_item_1_0)\n    success, message, iplist = phantom.get_list(list_name='Firepower - IP to contain')\n    for ip in iplist:\n        try:\n            ipaddress.ip_address(ip[0])\n            phantom.debug(f\"Current IP: {ip[0]}\")\n            ipaddress_list.add(ip[0])\n        except:\n            continue\n    get_total_amount_of_ip_address__total_num_of_ip = len(ipaddress_list)\n    phantom.debug(f\"Total IP in the list + to be added: {get_total_amount_of_ip_address__total_num_of_ip}\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='get_total_amount_of_ip_address:total_num_of_ip', value=json.dumps(get_total_amount_of_ip_address__total_num_of_ip))\n    decision_26(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Get total amount of IP address",
                            "customNameId": 0,
                            "description": "Get total amount of IP address",
                            "join": [],
                            "note": "Get total amount of IP address"
                        },
                        "functionId": 2,
                        "functionName": "get_total_amount_of_ip_address",
                        "id": "65",
                        "inputParameters": [
                            "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip"
                        ],
                        "outputVariables": [
                            "total_num_of_ip"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "65",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    import ipaddress\n    ipaddress_list = set(filtered_results_item_1_0)\n    success, message, iplist = phantom.get_list(list_name='Firepower - IP to contain')\n    for ip in iplist:\n        try:\n            ipaddress.ip_address(ip[0])\n            phantom.debug(f\"Current IP: {ip[0]}\")\n            ipaddress_list.add(ip[0])\n        except:\n            continue\n    get_total_amount_of_ip_address__total_num_of_ip = len(ipaddress_list)\n    phantom.debug(f\"Total IP in the list + to be added: {get_total_amount_of_ip_address__total_num_of_ip}\")\n\n",
                    "warnings": {},
                    "x": 2280,
                    "y": 2080
                },
                "66": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 36,
                        "functionName": "filter_36",
                        "id": "66",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "66",
                    "type": "filter",
                    "warnings": {},
                    "x": 2600,
                    "y": 2860
                },
                "67": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Contained Tag IP",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 19,
                        "functionName": "add_contained_tag_ip",
                        "id": "67",
                        "parameters": {
                            "id": "filtered-data:filter_35:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomContained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "67",
                    "type": "action",
                    "warnings": {},
                    "x": 2320,
                    "y": 3060
                },
                "68": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip",
                                        "value": "filtered-data:filter_28:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 35,
                        "functionName": "filter_35",
                        "id": "68",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "68",
                    "type": "filter",
                    "warnings": {},
                    "x": 2320,
                    "y": 2860
                },
                "69": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "<=",
                                        "param": "get_total_amount_of_ip_address:custom_function:total_num_of_ip",
                                        "value": "20"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 26,
                        "functionName": "decision_26",
                        "id": "69",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "69",
                    "type": "decision",
                    "warnings": {},
                    "x": 2280,
                    "y": 2320
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "Format IP",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 20,
                        "functionName": "format_ip",
                        "id": "7",
                        "parameters": [
                            "filtered-data:filter_ioc_ip:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "format",
                    "warnings": {},
                    "x": 2280,
                    "y": -460
                },
                "70": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_containment_status:custom_function:is_contain_failed",
                                        "value": "False"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 31,
                        "functionName": "decision_31",
                        "id": "70",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "70",
                    "type": "decision",
                    "warnings": {},
                    "x": 4480,
                    "y": 5260
                },
                "71": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "run_ip_query_for_vt:action_result.data.*.evt_count",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 13,
                        "functionName": "decision_13",
                        "id": "71",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "71",
                    "type": "decision",
                    "warnings": {},
                    "x": 2280,
                    "y": 820
                },
                "72": {
                    "data": {
                        "advanced": {
                            "customName": "Format IoC IP",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "functionId": 33,
                        "functionName": "format_ioc_ip",
                        "id": "72",
                        "parameters": [
                            "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip"
                        ],
                        "template": "Below Malicious IPs are NOT being contained and will be prompted to SoC Admin to decide whether executing containment:\n%%\n{0}\n\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "72",
                    "type": "format",
                    "warnings": {},
                    "x": 2440,
                    "y": 1200
                },
                "73": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Malicious and Noncontained Tag IP",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 20,
                        "functionName": "add_malicious_and_noncontained_tag_ip",
                        "id": "73",
                        "parameters": {
                            "id": "filtered-data:filter_37:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomMalicious,PhantomNonContained",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "73",
                    "type": "action",
                    "warnings": {},
                    "x": 1840,
                    "y": 2480
                },
                "74": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "Run_IP_Containment_for_VT",
                                "add_contained_tag_ip"
                            ]
                        },
                        "functionId": 63,
                        "functionName": "add_note_63",
                        "id": "74",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_ip_for_note:custom_function:ip_list_markdown",
                                "note_format": "markdown",
                                "title": "IP address successfully added to the list waiting to contain"
                            }
                        }
                    },
                    "errors": {},
                    "id": "74",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1680,
                    "y": 3380
                },
                "75": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 74,
                        "functionName": "add_note_74",
                        "id": "75",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_ip_for_note:custom_function:ip_list_markdown",
                                "note_format": "markdown",
                                "title": "Failed to contain IP address due to amount exceeded"
                            }
                        }
                    },
                    "errors": {},
                    "id": "75",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 1760,
                    "y": 4020
                },
                "76": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add Contained Tag URL",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 15,
                        "functionName": "add_contained_tag_url",
                        "id": "76",
                        "parameters": {
                            "id": "filtered-data:filter_41:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomContained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "76",
                    "type": "action",
                    "warnings": {},
                    "x": 4600,
                    "y": 5620
                },
                "77": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 51,
                        "functionName": "add_note_51",
                        "id": "77",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_url_for_note:custom_function:url_list_markdown",
                                "note_format": "markdown",
                                "title": "URL successfully blocked on FortiGate "
                            }
                        }
                    },
                    "errors": {},
                    "id": "77",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 4360,
                    "y": 5620
                },
                "78": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 54,
                        "functionName": "add_note_54",
                        "id": "78",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_url_for_note:custom_function:url_list_markdown",
                                "note_format": "markdown",
                                "title": "URL IoC Failed to be blocked on FortiGate"
                            }
                        }
                    },
                    "errors": {},
                    "id": "78",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 5440,
                    "y": 5480
                },
                "79": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 40,
                        "functionName": "add_note_40",
                        "id": "79",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "Can not get approval for Containment Action",
                                "note_format": "markdown",
                                "title": "Can not get approval for Containment Action"
                            }
                        }
                    },
                    "errors": {},
                    "id": "79",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 4000,
                    "y": 1780
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 68,
                        "functionName": "add_note_68",
                        "id": "8",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "filtered-data:filter_43:condition_1:fetch_active_threat_feed:action_result.data.*.value",
                                "note_format": "markdown",
                                "title": "Benign Domain IoC -- Umbrella and VT"
                            }
                        }
                    },
                    "errors": {},
                    "id": "8",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 3240,
                    "y": 1020
                },
                "80": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 41,
                        "functionName": "add_note_41",
                        "id": "80",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value",
                                "note_format": "markdown",
                                "title": "Containment Action is Not Approved"
                            }
                        }
                    },
                    "errors": {},
                    "id": "80",
                    "tab": "apis",
                    "type": "utility",
                    "warnings": {},
                    "x": 4720,
                    "y": 1780
                },
                "81": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "remove_the_top_url_from_the_array:custom_function:url_count",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 30,
                        "functionName": "decision_30",
                        "id": "81",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "81",
                    "type": "decision",
                    "warnings": {},
                    "x": 4480,
                    "y": 4780
                },
                "82": {
                    "customCode": "def flag_contain_failed(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('flag_contain_failed() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    URL_CONTAIN_FAILED = True\n    phantom.debug(\"failed detected\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_delete_the_created_artifact(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Flag contain failed",
                            "customNameId": 0,
                            "description": "Flag contain failed",
                            "join": [],
                            "note": "Flag contain failed"
                        },
                        "functionId": 5,
                        "functionName": "flag_contain_failed",
                        "id": "82",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "82",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    URL_CONTAIN_FAILED = True\n    phantom.debug(\"failed detected\")\n\n",
                    "warnings": {},
                    "x": 4800,
                    "y": 3960
                },
                "83": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "get_the_top_url_from_the_array:custom_function:top_url",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 28,
                        "functionName": "decision_28",
                        "id": "83",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "83",
                    "type": "decision",
                    "warnings": {},
                    "x": 4480,
                    "y": 2800
                },
                "84": {
                    "customCode": "def delete_the_created_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('delete_the_created_artifact() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    artifacts = phantom.collect(container, 'artifacts:*', scope='all')\n    # phantom.debug(artifacts)\n    for artifact in artifacts:\n        result = phantom.delete_artifact(artifact_id=artifact[\"id\"])\n        phantom.debug('phantom.delete_artifact results: {} '.format(result))\n        \n    ####\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    remove_the_top_url_from_the_array(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Delete the created artifact",
                            "customNameId": 0,
                            "description": "Delete the created artifact",
                            "join": [],
                            "note": "Delete the created artifact",
                            "scope": "all"
                        },
                        "functionId": 6,
                        "functionName": "delete_the_created_artifact",
                        "id": "84",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "84",
                    "joinCustomCode": "def join_delete_the_created_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_delete_the_created_artifact() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    #if phantom.completed(action_names=['sleep']):\n        \n    # call connected block \"delete_the_created_artifact\"\n    delete_the_created_artifact(container=container, handle=handle)\n    \n    return",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    artifacts = phantom.collect(container, 'artifacts:*', scope='all')\n    # phantom.debug(artifacts)\n    for artifact in artifacts:\n        result = phantom.delete_artifact(artifact_id=artifact[\"id\"])\n        phantom.debug('phantom.delete_artifact results: {} '.format(result))\n        \n    ####",
                    "warnings": {},
                    "x": 4480,
                    "y": 4220
                },
                "85": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.requestURL_ContainResult",
                                        "value": "True"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 29,
                        "functionName": "decision_29",
                        "id": "85",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "85",
                    "type": "decision",
                    "warnings": {},
                    "x": 4480,
                    "y": 4020
                },
                "86": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "sleep"
                            ]
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "1",
                                        "value": "1"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 27,
                        "functionName": "decision_27",
                        "id": "86",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "86",
                    "joinCustomCode": "def join_decision_27(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_decision_27() called')\n    \n    # if the joined function has already been called, do nothing\n    #if phantom.get_run_data(key='join_decision_27_called'):\n    #    return\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    #if phantom.completed(action_names=['run_url_containment_query']):\n        \n    # save the state that the joined function has now been called\n    phantom.save_run_data(key='join_decision_27_called', value='decision_27')\n        \n    # call connected block \"decision_27\"\n    decision_27(container=container, handle=handle)\n    \n    return",
                    "type": "decision",
                    "warnings": {},
                    "x": 4480,
                    "y": 2340
                },
                "87": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_29:condition_1:url_reputation_on_vt_v3:action_result.parameter.url",
                                        "value": "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 38,
                        "functionName": "filter_38",
                        "id": "87",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "87",
                    "type": "filter",
                    "warnings": {},
                    "x": 3600,
                    "y": 1200
                },
                "88": {
                    "customCode": "def format_ip_for_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_ip_for_note() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    format_ip_for_note__ip_list_markdown = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    output = \"\"\n    \n    for ip in filtered_results_item_1_0:\n        output += f\"- `{ip}`\\n\"\n        \n    format_ip_for_note__ip_list_markdown = output\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='format_ip_for_note:ip_list_markdown', value=json.dumps(format_ip_for_note__ip_list_markdown))\n    format_ioc_ip(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Format IP for Note",
                            "customNameId": 0,
                            "description": "Format IP for Note",
                            "join": [],
                            "note": "Format IP for Note"
                        },
                        "functionId": 9,
                        "functionName": "format_ip_for_note",
                        "id": "88",
                        "inputParameters": [
                            "filtered-data:filter_28:condition_1:ip_reputation_on_vt_v3:action_result.parameter.ip"
                        ],
                        "outputVariables": [
                            "ip_list_markdown"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "88",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    output = \"\"\n    \n    for ip in filtered_results_item_1_0:\n        output += f\"- `{ip}`\\n\"\n        \n    format_ip_for_note__ip_list_markdown = output\n\n",
                    "warnings": {},
                    "x": 2440,
                    "y": 940
                },
                "89": {
                    "customCode": "def format_url_for_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_url_for_note() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    format_url_for_note__url_list_markdown = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    output = \"\"\n    \n    for url in filtered_results_item_1_0:\n        output += f\"- `{url}`\\n\"\n        \n    format_url_for_note__url_list_markdown = output\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='format_url_for_note:url_list_markdown', value=json.dumps(format_url_for_note__url_list_markdown))\n    collect_all_url(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Format URL for Note",
                            "customNameId": 0,
                            "description": "Format URL for Note",
                            "join": [],
                            "note": "Format URL for Note"
                        },
                        "functionId": 10,
                        "functionName": "format_url_for_note",
                        "id": "89",
                        "inputParameters": [
                            "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "outputVariables": [
                            "url_list_markdown"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "89",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    output = \"\"\n    \n    for url in filtered_results_item_1_0:\n        output += f\"- `{url}`\\n\"\n        \n    format_url_for_note__url_list_markdown = output\n    \n    ",
                    "warnings": {},
                    "x": 4480,
                    "y": 1780
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "Filter IOC File Hash",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "fetch_active_threat_feed:action_result.data.*.type",
                                        "value": "md5"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 25,
                        "functionName": "filter_ioc_file_hash",
                        "id": "9",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "filter",
                    "warnings": {},
                    "x": 4520,
                    "y": -660
                },
                "90": {
                    "customCode": "def collect_all_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('collect_all_url() called')\n    \n    filtered_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value'])\n    filtered_results_item_1_0 = [item[0] for item in filtered_results_data_1]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    # Reinitial Global Variables to ensure it will get reseted every runtime\n    URL_CONTAIN_FAILED = False\n    \n    phantom.save_run_data(value=json.dumps(filtered_results_item_1_0), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    phantom.debug(filtered_results_item_1_0)\n    phantom.debug('---')\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    join_decision_27(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Collect all URL",
                            "customNameId": 0,
                            "description": "Collect all URL",
                            "join": [],
                            "note": "URL to contain"
                        },
                        "functionId": 3,
                        "functionName": "collect_all_url",
                        "id": "90",
                        "inputParameters": [
                            "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "90",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    global URL_CONTAIN_FAILED\n    # Reinitial Global Variables to ensure it will get reseted every runtime\n    URL_CONTAIN_FAILED = False\n    \n    phantom.save_run_data(value=json.dumps(filtered_results_item_1_0), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    phantom.debug(filtered_results_item_1_0)\n    phantom.debug('---')\n\n",
                    "warnings": {},
                    "x": 4480,
                    "y": 2040
                },
                "91": {
                    "customCode": "def get_the_top_url_from_the_array(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_the_top_url_from_the_array() called')\n    \n    input_parameter_0 = \"\"\n\n    get_the_top_url_from_the_array__top_url = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Starting loop with: {URL_LIST_TO_CONTAIN}\")\n    if len(URL_LIST_TO_CONTAIN) > 0:\n        get_the_top_url_from_the_array__top_url = URL_LIST_TO_CONTAIN[0]\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='get_the_top_url_from_the_array:top_url', value=json.dumps(get_the_top_url_from_the_array__top_url))\n    decision_28(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Get the top URL from the array",
                            "customNameId": 0,
                            "description": "Get the top URL from the array",
                            "join": [],
                            "note": "Get the top IP"
                        },
                        "functionId": 4,
                        "functionName": "get_the_top_url_from_the_array",
                        "id": "91",
                        "inputParameters": [],
                        "outputVariables": [
                            "top_url"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "91",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Starting loop with: {URL_LIST_TO_CONTAIN}\")\n    if len(URL_LIST_TO_CONTAIN) > 0:\n        get_the_top_url_from_the_array__top_url = URL_LIST_TO_CONTAIN[0]\n\n",
                    "warnings": {},
                    "x": 4480,
                    "y": 2540
                },
                "92": {
                    "data": {
                        "action": "add artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add URL artifact",
                            "customNameId": 0,
                            "description": "Add URL artifact",
                            "join": [],
                            "note": "Add URL artifact"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_url_artifact",
                        "id": "92",
                        "parameters": {
                            "cef_dictionary": "prepare_url_artifact:formatted_data",
                            "cef_name": "",
                            "cef_value": "",
                            "container_id": "",
                            "contains": "",
                            "label": "event",
                            "name": "User created artifact",
                            "run_automation": "False",
                            "source_data_identifier": "get_the_top_url_from_the_array:custom_function:top_url"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "source_data_identifier"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "92",
                    "type": "action",
                    "warnings": {},
                    "x": 4480,
                    "y": 3220
                },
                "93": {
                    "customCode": "def remove_the_top_url_from_the_array(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('remove_the_top_url_from_the_array() called')\n    \n    input_parameter_0 = \"\"\n\n    remove_the_top_url_from_the_array__url_count = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Before popping: {URL_LIST_TO_CONTAIN}\")\n    URL_LIST_TO_CONTAIN.pop(0)\n    phantom.debug(f\"After popping: {URL_LIST_TO_CONTAIN}\")\n    phantom.save_run_data(value=json.dumps(URL_LIST_TO_CONTAIN), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    \n    remove_the_top_url_from_the_array__url_count = len(URL_LIST_TO_CONTAIN)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='remove_the_top_url_from_the_array:url_count', value=json.dumps(remove_the_top_url_from_the_array__url_count))\n    decision_30(container=container)\n\n    return",
                    "data": {
                        "advanced": {
                            "customName": "Remove the top URL from the array",
                            "customNameId": 0,
                            "description": "Remove the top URL from the array",
                            "join": [],
                            "note": "Remove the top URL from the array",
                            "scope": "all"
                        },
                        "functionId": 7,
                        "functionName": "remove_the_top_url_from_the_array",
                        "id": "93",
                        "inputParameters": [],
                        "outputVariables": [
                            "url_count"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "93",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    URL_LIST_TO_CONTAIN = json.loads(phantom.get_run_data(key=\"URL_LIST_TO_CONTAIN\"))\n    phantom.debug(f\"Before popping: {URL_LIST_TO_CONTAIN}\")\n    URL_LIST_TO_CONTAIN.pop(0)\n    phantom.debug(f\"After popping: {URL_LIST_TO_CONTAIN}\")\n    phantom.save_run_data(value=json.dumps(URL_LIST_TO_CONTAIN), key=\"URL_LIST_TO_CONTAIN\", auto=True)\n    \n    remove_the_top_url_from_the_array__url_count = len(URL_LIST_TO_CONTAIN)\n\n",
                    "warnings": {},
                    "x": 4480,
                    "y": 4480
                },
                "94": {
                    "data": {
                        "action": "no op",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Sleep",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "description": "sleep",
                            "join": [],
                            "note": "sleep",
                            "scope": "all"
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom asset"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "sleep",
                        "id": "94",
                        "parameters": {
                            "sleep_seconds": "120"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "field": "sleep_seconds"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "94",
                    "type": "action",
                    "warnings": {},
                    "x": 4480,
                    "y": 3760
                },
                "95": {
                    "data": {
                        "action": "send email",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Notify SoC Team via Email",
                            "customNameId": 0,
                            "delayTime": 0.0,
                            "join": []
                        },
                        "connector": "SMTP",
                        "connectorConfigs": [
                            "smtp asset"
                        ],
                        "connectorId": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "notify_soc_team_via_email",
                        "id": "95",
                        "parameters": {
                            "attachments": "",
                            "bcc": "",
                            "body": "email_content:formatted_data",
                            "cc": "",
                            "from": "no-reply-phantom@ktbcs.co.th",
                            "headers": "",
                            "subject": "Malicious URL are NOT being contained",
                            "to": "security-infra@ktbcs.co.th"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "to"
                            },
                            {
                                "data_type": "string",
                                "field": "body"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "95",
                    "type": "action",
                    "warnings": {},
                    "x": 5640,
                    "y": -240
                },
                "96": {
                    "data": {
                        "advanced": {
                            "customName": "Prompt Block IP",
                            "customNameId": 0,
                            "join": [],
                            "separator": ", "
                        },
                        "approver": {
                            "type": "role",
                            "value": "Tier2 Analyst"
                        },
                        "functionId": 1,
                        "functionName": "prompt_block_ip",
                        "id": "96",
                        "message": "***WARNING*** \nDo you want to proceed with containment?\n\nAttacker Info:\nSource Address = {0}",
                        "parameters": [
                            "format_ioc_ip:formatted_data"
                        ],
                        "responseTime": 5.0,
                        "responses": [
                            {
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {
                        "responses": [
                            {
                                "responsePrompt": "Questions cannot be empty."
                            }
                        ]
                    },
                    "id": "96",
                    "type": "prompt",
                    "warnings": {},
                    "x": 2440,
                    "y": 1540
                },
                "97": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_29:condition_1:url_reputation_on_vt_v3:action_result.parameter.url",
                                        "value": "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 41,
                        "functionName": "filter_41",
                        "id": "97",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "97",
                    "type": "filter",
                    "warnings": {},
                    "x": 4640,
                    "y": 5440
                },
                "98": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "run_url_containment_query",
                                "sleep"
                            ]
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_29:condition_1:url_reputation_on_vt_v3:action_result.parameter.url",
                                        "value": "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.value"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 42,
                        "functionName": "filter_42",
                        "id": "98",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "98",
                    "type": "filter",
                    "warnings": {},
                    "x": 5080,
                    "y": 5460
                },
                "99": {
                    "data": {
                        "action": "tag observable",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Add NonContained Tag URL",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream hybrid vm"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 16,
                        "functionName": "add_noncontained_tag_url",
                        "id": "99",
                        "parameters": {
                            "id": "filtered-data:filter_ioc_url:condition_1:fetch_active_threat_feed:action_result.data.*.id",
                            "source_user_id": "33862",
                            "tags": "PhantomInvestigated,PhantomNoncontained,PhantomMalicious",
                            "tlp": "red"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "tags"
                            },
                            {
                                "data_type": "string",
                                "field": "source_user_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "99",
                    "type": "action",
                    "warnings": {},
                    "x": 5120,
                    "y": 5620
                }
            },
            "notes": "Inputs:\nTriggered by parent playbook.\n\nInteractions:\nPhantom, VirusTotal, Splunk, Anomali ThreatStream\n\nActions:\nFile Reputation, URL Reputation, IP Reputation, Domain Reputation, Run Query, Update artifact, Add note\nArtifacts:\nP1: Perform enrichment tasks on the indicatorsFilter out deviceHostname",
            "origin": {
                "playbook_id": 181,
                "playbook_name": "PLAYBOOK-AUTOMATED-THREAT-FEED-01",
                "playbook_repo_id": 3,
                "playbook_repo_name": "mfec_csoc_playbook"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "4.10.7.63984"
    },
    "create_time": "2025-03-27T15:21:03.202816+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}